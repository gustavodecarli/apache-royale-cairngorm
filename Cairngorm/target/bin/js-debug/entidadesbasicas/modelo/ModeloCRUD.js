/**
 * Generated by Apache Royale Compiler from entidadesbasicas/modelo/ModeloCRUD.as
 * entidadesbasicas.modelo.ModeloCRUD
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('entidadesbasicas.modelo.ModeloCRUD');
/* Royale Dependency List: org.apache.royale.events.EventDispatcher,org.apache.royale.events.ValueChangeEvent*/

goog.require('entidadesbasicas.modelo.base.ModeloBase');



/**
 * @constructor
 * @extends {entidadesbasicas.modelo.base.ModeloBase}
 * @param {Object} clazz
 * @param {string} serviceName
 * @param {boolean=} isTree
 * @param {*=} segurizable
 * @param {*=} cacheable
 */
entidadesbasicas.modelo.ModeloCRUD = function(clazz, serviceName, isTree, segurizable, cacheable) {
  entidadesbasicas.modelo.ModeloCRUD.base(this, 'constructor');
  isTree = typeof isTree !== 'undefined' ? isTree : false;
  segurizable = typeof segurizable !== 'undefined' ? segurizable : false;
  cacheable = typeof cacheable !== 'undefined' ? cacheable : false;
  this.clazz = clazz;
  this.serviceName = serviceName;
  this.isTree = isTree;
  this.segurizado = !!(segurizable);
  this.cacheable = !!(cacheable);
};
goog.inherits(entidadesbasicas.modelo.ModeloCRUD, entidadesbasicas.modelo.base.ModeloBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('entidadesbasicas.modelo.ModeloCRUD', entidadesbasicas.modelo.ModeloCRUD);


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_SELECCIONAR_ = "resultSeleccionar";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_OBTENER = "resultObtener";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_CREAR = "resultCrear";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_GUARDAR = "resultGuardar";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_CLONAR = "resultClonar";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_SIGUIENTECPTE = "resultSiguienteCpte";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_REIMPUTAR = "resultReimputar";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_ASIGNARPAGO = "resultAsignarPago";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_HABILITAR = "resultHabilitar";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_CONSULTAR = "resultConsultar";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_CONSULTAR_PEDIDO = "resultConsultarPedido";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.ERROR_CREAR = "errorCrear";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_EMAIL = "resultEmail";


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.RESULT_GUARDARLISTA = "resultGuardarLista";


/**
 * @export
 * @type {boolean}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.nuevo = true;


/**
 * @export
 * @type {Object}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.itemPadre_ = null;


/**
 * @export
 * @type {boolean}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.isTree_ = false;


/**
 * @export
 * @type {string}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.atributoBusqueda_ = "";


/**
 * @private
 * @param {mx.collections.ArrayCollection} unCollecion
 * @param {Object} unObjecto
 * @param {Object} unObjectoReemplazar
 * @return {number}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.entidadesbasicas_modelo_ModeloCRUD_buscarReemplazar = function(unCollecion, unObjecto, unObjectoReemplazar) {
  var /** @type {number} */ index = -1;
  for (var /** @type {number} */ i = 0; index == -1 && i < unCollecion.length; i++) {
    if (unObjecto["oid"] == unCollecion.source[i]["oid"]) {
      index = i;
      if (unObjectoReemplazar) {
        unCollecion.disableAutoUpdate();
        var /** @type {Array} */ unasPropiedades = mx["utils"]["ObjectUtil"]["getClassInfo"](unObjectoReemplazar)["properties"];
        for (var /** @type {number} */ p = 0; p < unasPropiedades.length; p++) {
          try {
            if (unasPropiedades[p]["localName"] != "hijos" && unasPropiedades[p]["localName"] != "padre")
              unCollecion.source[i][unasPropiedades[p]["localName"]] = unObjectoReemplazar[unasPropiedades[p]["localName"]];
          } catch (e) {
          }
        }
        unCollecion.disableAutoUpdate();
        unCollecion.refresh();
      }
    }
    if (index == -1 && this.isTree && unCollecion.source[i]["hijos"])
      index = this.entidadesbasicas_modelo_ModeloCRUD_buscarReemplazar(unCollecion.source[i]["hijos"], unObjecto, unObjectoReemplazar);
  }
  if (index == -1 && !this.isTree)
    unCollecion.addItem(unObjectoReemplazar);
  return index;
};


/**
 * @export
 * @param {string} codigo
 * @param {string} atributo
 * @param {number} nivel
 * @return {Object}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.buscar = function(codigo, atributo, nivel) {
  this.atributoBusqueda = atributo;
  if (this.dataProvider.length != 0) {
    if (this.isTree)
      return this.entidadesbasicas_modelo_ModeloCRUD_buscarPorCodigoJerarquico(this.dataProvider, codigo, nivel);
    else
      return this.entidadesbasicas_modelo_ModeloCRUD_buscarPorCodigo(codigo);
  }
  return null;
};


/**
 * @private
 * @param {string} codigo
 * @return {Object}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.entidadesbasicas_modelo_ModeloCRUD_buscarPorCodigo = function(codigo) {
  var /** @type {number} */ index = -1;
  for (var /** @type {number} */ i = 0; index == -1 && i < this.dataProvider.length; i++) {
    if (codigo == this.dataProvider.source[i][this.atributoBusqueda])
      return this.dataProvider.source[i];
  }
  return null;
};


/**
 * @private
 * @param {mx.collections.ArrayCollection} unCollecion
 * @param {string} codigo
 * @param {number} nivel
 * @return {Object}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.entidadesbasicas_modelo_ModeloCRUD_buscarPorCodigoJerarquico = function(unCollecion, codigo, nivel) {
  var /** @type {number} */ index = -1;
  var /** @type {Object} */ temp = null;
  for (var /** @type {number} */ i = 0; index == -1 && i < unCollecion.length; i++) {
    if (codigo == unCollecion.source[i][this.atributoBusqueda]) {
      if ((nivel == -1 && CodigoDescripcionJerarquico(unCollecion.source[i])["esHoja"]) || (nivel >= 0 && CodigoDescripcionJerarquico(unCollecion.source[i])["nivel"] == nivel) || (nivel == 999))
        return unCollecion.source[i]; else {
        temp = this.entidadesbasicas_modelo_ModeloCRUD_buscarPorCodigoJerarquico(unCollecion.source[i]["hijos"], codigo, nivel);
        if (temp)
          return temp;
      }
    } else {
      if (unCollecion.source[i]["hijos"]) {
        temp = this.entidadesbasicas_modelo_ModeloCRUD_buscarPorCodigoJerarquico(unCollecion.source[i]["hijos"], codigo, nivel);
        if (temp)
          return temp;
      }
    }
  }
  return null;
};


/**
 * @export
 * @param {Array} unArray
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.eliminarElemento = function(unArray) {
  if (this.isTree) {
    for (var /** @type {number} */ i = 0; i < this.dataProvider.length; i++)
      this.dataProvider.getProperty(i)["eliminarElementoDesde"](unArray[0]);
  } else {
    for (var /** @type {number} */ h = 0; h < unArray.length; h++) {
      for (var /** @type {number} */ j = (this.dataProvider.length - 1) >> 0; j >= 0; j--) {
        if (this.dataProvider.getItemAt(j)["oid"] == unArray[h]["oid"])
          this.dataProvider.removeItemAt(j);
      }
    }
    this.dataProvider.refresh();
  }
};


/**
 * @export
 * @param {Object} unObjecto
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.agregarElemento = function(unObjecto) {
  if (this.dataProvider == null)
    this.dataProvider = new mx.collections.ArrayCollection();
  this.dataProvider.disableAutoUpdate();
  if (this.nuevo) {
    if (this.itemPadre != null)
      this.itemPadre["agregarElemento"](unObjecto); else {
      if (this.isTree)
        this.dataProvider.getItemAt(0)["hijos"]["addItem"](unObjecto);
      else
        this.dataProvider.addItem(unObjecto);
    }
  } else {
    this.entidadesbasicas_modelo_ModeloCRUD_buscarReemplazar(this.dataProvider, this.item, unObjecto);
  }
  this.dataProvider.enableAutoUpdate();
  this.dataProvider.refresh();
};


/**
 * @export
 * @param {mx.collections.ArrayCollection} unosObjetos
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.remplazarElementos = function(unosObjetos) {
  if (!unosObjetos)
    return;
  if (this.dataProvider == null)
    this.dataProvider = new mx.collections.ArrayCollection();
  this.dataProvider.disableAutoUpdate();
  for (var /** @type {number} */ i = 0; i < unosObjetos.length; i++)
    this.entidadesbasicas_modelo_ModeloCRUD_buscarReemplazar(this.dataProvider, unosObjetos.getProperty(i), unosObjetos.getProperty(i));
  this.dataProvider.enableAutoUpdate();
  this.dataProvider.refresh();
};
/**
 * Compiler generated
 * Static Binding support
 * @private
 * @type {org.apache.royale.events.EventDispatcher}
*/
entidadesbasicas.modelo.ModeloCRUD._bindingEventDispatcher;

Object.defineProperties(entidadesbasicas.modelo.ModeloCRUD, /** @lends {entidadesbasicas.modelo.ModeloCRUD} */ {
/** @export
  * @type {org.apache.royale.events.EventDispatcher} */
staticEventDispatcher: {
  get: function() {
  		return entidadesbasicas.modelo.ModeloCRUD._bindingEventDispatcher
    	|| (entidadesbasicas.modelo.ModeloCRUD._bindingEventDispatcher = new org.apache.royale.events.EventDispatcher());
    }
  },
/** @export
  * @type {string} */
RESULT_SELECCIONAR: {
  get: function() {
    return entidadesbasicas.modelo.ModeloCRUD.RESULT_SELECCIONAR_;
  },
  
  set: function(value) {
    	var oldValue = entidadesbasicas.modelo.ModeloCRUD.RESULT_SELECCIONAR_;
    	if (value != oldValue) {
      		entidadesbasicas.modelo.ModeloCRUD.RESULT_SELECCIONAR_ = value;
      		var dispatcher = entidadesbasicas.modelo.ModeloCRUD._bindingEventDispatcher;
      		if (dispatcher) dispatcher.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
      			entidadesbasicas.modelo.ModeloCRUD, "RESULT_SELECCIONAR", oldValue, value));
      }
    }
  }
});

Object.defineProperties(entidadesbasicas.modelo.ModeloCRUD.prototype, /** @lends {entidadesbasicas.modelo.ModeloCRUD.prototype} */ {
/** @export
  * @type {string} */
atributoBusqueda: {
/** @this {entidadesbasicas.modelo.ModeloCRUD} */
  get: function() {
  return this.atributoBusqueda_;
  },

/** @this {entidadesbasicas.modelo.ModeloCRUD} */
set: function(value) {
if (value != this.atributoBusqueda_) {
    var oldValue = this.atributoBusqueda_;
    this.atributoBusqueda_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "atributoBusqueda", oldValue, value));
}
}},/** @export
  * @type {boolean} */
isTree: {
/** @this {entidadesbasicas.modelo.ModeloCRUD} */
  get: function() {
  return this.isTree_;
  },

/** @this {entidadesbasicas.modelo.ModeloCRUD} */
set: function(value) {
if (value != this.isTree_) {
    var oldValue = this.isTree_;
    this.isTree_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "isTree", oldValue, value));
}
}},/** @export
  * @type {Object} */
itemPadre: {
/** @this {entidadesbasicas.modelo.ModeloCRUD} */
  get: function() {
  return this.itemPadre_;
  },

/** @this {entidadesbasicas.modelo.ModeloCRUD} */
set: function(value) {
if (value != this.itemPadre_) {
    var oldValue = this.itemPadre_;
    this.itemPadre_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "itemPadre", oldValue, value));
}
}}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ModeloCRUD', qName: 'entidadesbasicas.modelo.ModeloCRUD', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        '|RESULT_OBTENER': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_OBTENER = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_OBTENER;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultSeleccionar' } ] } ]; }},
        '|RESULT_CREAR': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_CREAR = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_CREAR;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultObtener' } ] } ]; }},
        '|RESULT_GUARDAR': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_GUARDAR = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_GUARDAR;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultCrear' } ] } ]; }},
        '|RESULT_CLONAR': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_CLONAR = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_CLONAR;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultGuardar' } ] } ]; }},
        '|RESULT_SIGUIENTECPTE': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_SIGUIENTECPTE = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_SIGUIENTECPTE;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultClonar' } ] } ]; }},
        '|RESULT_REIMPUTAR': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_REIMPUTAR = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_REIMPUTAR;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultSiguienteCpte' } ] } ]; }},
        '|RESULT_ASIGNARPAGO': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_ASIGNARPAGO = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_ASIGNARPAGO;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultReimputar' } ] } ]; }},
        '|RESULT_HABILITAR': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_HABILITAR = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_HABILITAR;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultAsignarPago' } ] } ]; }},
        '|RESULT_CONSULTAR': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_CONSULTAR = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_CONSULTAR;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultHabilitar' } ] } ]; }},
        '|RESULT_CONSULTAR_PEDIDO': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_CONSULTAR_PEDIDO = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_CONSULTAR_PEDIDO;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultConsultar' } ] } ]; }},
        '|ERROR_CREAR': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.ERROR_CREAR = v : entidadesbasicas.modelo.ModeloCRUD.ERROR_CREAR;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultConsultarPedido' } ] } ]; }},
        '|RESULT_EMAIL': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_EMAIL = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_EMAIL;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'errorCrear' } ] } ]; }},
        '|RESULT_GUARDARLISTA': { type: 'String', get_set: function (/** * */ v) {return v !== undefined ? entidadesbasicas.modelo.ModeloCRUD.RESULT_GUARDARLISTA = v : entidadesbasicas.modelo.ModeloCRUD.RESULT_GUARDARLISTA;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultEmail' } ] } ]; }},
        'nuevo': { type: 'Boolean', get_set: function (/** entidadesbasicas.modelo.ModeloCRUD */ inst, /** * */ v) {return v !== undefined ? inst.nuevo = v : inst.nuevo;}, metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultGuardarLista' } ] } ]; }}
      };
    },
    accessors: function () {
      return {
        '|RESULT_SELECCIONAR': { type: 'String', access: 'readwrite', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD'},
        'itemPadre': { type: 'Object', access: 'readwrite', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD'},
        'isTree': { type: 'Boolean', access: 'readwrite', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD'},
        'atributoBusqueda': { type: 'String', access: 'readwrite', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD'},
        '|staticEventDispatcher': { type: 'org.apache.royale.events.EventDispatcher', access: 'readonly', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD'}
      };
    },
    methods: function () {
      return {
        'ModeloCRUD': { type: '', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD', parameters: function () { return [ 'Class', false ,'String', false ,'Boolean', true ,'*', true ,'*', true ]; }},
        'buscar': { type: 'Object', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD', parameters: function () { return [ 'String', false ,'String', false ,'int', false ]; }},
        'eliminarElemento': { type: 'void', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD', parameters: function () { return [ 'Array', false ]; }},
        'agregarElemento': { type: 'void', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD', parameters: function () { return [ 'Object', false ]; }},
        'remplazarElementos': { type: 'void', declaredBy: 'entidadesbasicas.modelo.ModeloCRUD', parameters: function () { return [ 'mx.collections.ArrayCollection', false ]; }}
      };
    },
    metadata: function () { return [ { name: 'Bindable' } ]; }
  };
};
/**
 * @const
 * @type {number}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.ROYALE_COMPILE_FLAGS = 15;
/**
 * Provide reflection support for distinguishing dynamic fields on class object (static)
 * @const
 * @type {Array<string>}
 */
entidadesbasicas.modelo.ModeloCRUD.prototype.ROYALE_INITIAL_STATICS = Object.keys(entidadesbasicas.modelo.ModeloCRUD);

//# sourceMappingURL=./ModeloCRUD.js.map
