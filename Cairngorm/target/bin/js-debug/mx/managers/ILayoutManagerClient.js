/**
 * Generated by Apache Royale Compiler from mx/managers/ILayoutManagerClient.as
 * mx.managers.ILayoutManagerClient
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.managers.ILayoutManagerClient');
/* Royale Dependency List: mx.core.mx_internal,XML*/

goog.require('org.apache.royale.events.IEventDispatcher');



/**
 * @interface
 * @extends {org.apache.royale.events.IEventDispatcher}
 */
mx.managers.ILayoutManagerClient = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.managers.ILayoutManagerClient', mx.managers.ILayoutManagerClient);
/**  * @type {boolean}
 */mx.managers.ILayoutManagerClient.prototype.initialized;
/**  * @type {number}
 */mx.managers.ILayoutManagerClient.prototype.nestLevel;
/**  * @type {boolean}
 */mx.managers.ILayoutManagerClient.prototype.processedDescriptors;
/**  * @type {boolean}
 */mx.managers.ILayoutManagerClient.prototype.updateCompletePendingFlag;
mx.managers.ILayoutManagerClient.prototype.validateProperties = function() {
};
/**
 *  Validates the measured size of the component
 *  If the <code>LayoutManager.invalidateSize()</code> method is called with
 *  this ILayoutManagerClient, then the <code>validateSize()</code> method
 *  is called when it's time to do measurements.
 *
 *  @asparam recursive If <code>true</code>, call this method
 *  on the objects children.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {boolean=} recursive
 */
mx.managers.ILayoutManagerClient.prototype.validateSize = function(recursive) {
};
mx.managers.ILayoutManagerClient.prototype.validateDisplayList = function() {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.managers.ILayoutManagerClient.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ILayoutManagerClient', qName: 'mx.managers.ILayoutManagerClient', kind: 'interface' }], interfaces: [org.apache.royale.events.IEventDispatcher] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.managers.ILayoutManagerClient.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'initialized': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.managers.ILayoutManagerClient'},
        'nestLevel': { type: 'int', access: 'readwrite', declaredBy: 'mx.managers.ILayoutManagerClient'},
        'processedDescriptors': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.managers.ILayoutManagerClient'},
        'updateCompletePendingFlag': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.managers.ILayoutManagerClient'}
      };
    },
    methods: function () {
      return {
        'validateProperties': { type: 'void', declaredBy: 'mx.managers.ILayoutManagerClient'},
        'validateSize': { type: 'void', declaredBy: 'mx.managers.ILayoutManagerClient', parameters: function () { return [ 'Boolean', true ]; }},
        'validateDisplayList': { type: 'void', declaredBy: 'mx.managers.ILayoutManagerClient'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.managers.ILayoutManagerClient.prototype.ROYALE_COMPILE_FLAGS = 26;
