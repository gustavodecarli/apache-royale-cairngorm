/**
 * Generated by Apache Royale Compiler from mx/text/TextFormat.as
 * mx.text.TextFormat
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.text.TextFormat');
/* Royale Dependency List: XML*/



/**
 * @constructor
 * @param {string=} font
 * @param {Object=} size
 * @param {Object=} color
 * @param {Object=} bold
 * @param {Object=} italic
 * @param {Object=} underline
 * @param {string=} align
 * @param {Object=} leftMargin
 * @param {Object=} rightMargin
 */
mx.text.TextFormat = function(font, size, color, bold, italic, underline, align, leftMargin, rightMargin) {
  font = typeof font !== 'undefined' ? font : null;
  size = typeof size !== 'undefined' ? size : null;
  color = typeof color !== 'undefined' ? color : null;
  bold = typeof bold !== 'undefined' ? bold : null;
  italic = typeof italic !== 'undefined' ? italic : null;
  underline = typeof underline !== 'undefined' ? underline : null;
  align = typeof align !== 'undefined' ? align : null;
  leftMargin = typeof leftMargin !== 'undefined' ? leftMargin : null;
  rightMargin = typeof rightMargin !== 'undefined' ? rightMargin : null;
  this.font = font;
  this.size = size;
  this.color = color;
  this.bold = bold;
  this.italic = italic;
  this.underline = underline;
  this.align = align;
  this.leftMargin = leftMargin;
  this.rightMargin = rightMargin;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.text.TextFormat', mx.text.TextFormat);


/**
 * @export
 * @type {string}
 */
mx.text.TextFormat.prototype.align;


/**
 * @export
 * @type {Object}
 */
mx.text.TextFormat.prototype.bold;


/**
 * @export
 * @type {Object}
 */
mx.text.TextFormat.prototype.color;


/**
 * @export
 * @type {string}
 */
mx.text.TextFormat.prototype.font;


/**
 * @export
 * @type {Object}
 */
mx.text.TextFormat.prototype.italic;


/**
 * @export
 * @type {Object}
 */
mx.text.TextFormat.prototype.leading;


/**
 * @export
 * @type {Object}
 */
mx.text.TextFormat.prototype.leftMargin;


/**
 * @export
 * @type {Object}
 */
mx.text.TextFormat.prototype.rightMargin;


/**
 * @export
 * @type {Object}
 */
mx.text.TextFormat.prototype.size;


/**
 * @export
 * @type {Object}
 */
mx.text.TextFormat.prototype.underline;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.text.TextFormat.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TextFormat', qName: 'mx.text.TextFormat', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.text.TextFormat.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'align': { type: 'String', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.align = v : inst.align;}},
        'bold': { type: 'Object', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.bold = v : inst.bold;}},
        'color': { type: 'Object', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.color = v : inst.color;}},
        'font': { type: 'String', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.font = v : inst.font;}},
        'italic': { type: 'Object', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.italic = v : inst.italic;}},
        'leading': { type: 'Object', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.leading = v : inst.leading;}},
        'leftMargin': { type: 'Object', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.leftMargin = v : inst.leftMargin;}},
        'rightMargin': { type: 'Object', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.rightMargin = v : inst.rightMargin;}},
        'size': { type: 'Object', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.size = v : inst.size;}},
        'underline': { type: 'Object', get_set: function (/** mx.text.TextFormat */ inst, /** * */ v) {return v !== undefined ? inst.underline = v : inst.underline;}}
      };
    },
    methods: function () {
      return {
        'TextFormat': { type: '', declaredBy: 'mx.text.TextFormat', parameters: function () { return [ 'String', true ,'Object', true ,'Object', true ,'Object', true ,'Object', true ,'Object', true ,'String', true ,'Object', true ,'Object', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.text.TextFormat.prototype.ROYALE_COMPILE_FLAGS = 26;
