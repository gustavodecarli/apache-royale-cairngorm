/**
 * Generated by Apache Royale Compiler from mx/containers/beads/PanelView.as
 * mx.containers.beads.PanelView
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.containers.beads.PanelView');
/* Royale Dependency List: mx.containers.BoxDirection,mx.containers.PanelTitleBar,mx.containers.beads.BoxLayout,mx.containers.beads.CanvasLayout,mx.containers.beads.models.PanelModel,mx.core.Container,mx.core.ContainerLayout,mx.core.UIComponent,org.apache.royale.core.IBead,org.apache.royale.core.ILayoutChild,org.apache.royale.core.IStrand,org.apache.royale.core.UIBase,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.html.beads.PanelView');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {org.apache.royale.html.beads.PanelView}
 */
mx.containers.beads.PanelView = function() {
  mx.containers.beads.PanelView.base(this, 'constructor');
};
goog.inherits(mx.containers.beads.PanelView, org.apache.royale.html.beads.PanelView);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.containers.beads.PanelView', mx.containers.beads.PanelView);


/**
 * @royaleignorecoercion mx.core.UIComponent 
 * @royaleignorecoercion org.apache.royale.core.UIBase
 * @royaleignorecoercion mx.containers.beads.models.PanelModel 
 * @export
 * @override
 */
mx.containers.beads.PanelView.prototype.setupContentAreaLayout = function() {
  var /** @type {Object} */ host = this._strand;
  var /** @type {Object} */ model = host.model;
  var /** @type {string} */ _layout = model.layout;
  if (model.paddingBottom)
    this.contentArea.paddingBottom = model.paddingBottom;
  if (model.paddingTop)
    this.contentArea.paddingTop = model.paddingTop;
  if (model.paddingLeft)
    this.contentArea.paddingLeft = model.paddingLeft;
  if (model.paddingRight)
    this.contentArea.paddingRight = model.paddingRight;
  if (!host.isWidthSizedToContent())
    this.contentArea.percentWidth = 100;
  if (!host.isHeightSizedToContent())
    this.contentArea.percentHeight = 100;
  var /** @type {org.apache.royale.core.IBead} */ layoutObject;
  if (_layout == mx.core.ContainerLayout.ABSOLUTE)
    layoutObject = new mx.containers.beads.CanvasLayout(); else {
    layoutObject = new mx.containers.beads.BoxLayout();
    if (_layout == mx.core.ContainerLayout.VERTICAL)
      org.apache.royale.utils.Language.as(layoutObject, mx.containers.beads.BoxLayout, true).direction = mx.containers.BoxDirection.VERTICAL;
    else
      org.apache.royale.utils.Language.as(layoutObject, mx.containers.beads.BoxLayout, true).direction = mx.containers.BoxDirection.HORIZONTAL;
  }
  org.apache.royale.utils.Language.as(this.contentArea, mx.core.Container).horizontalAlign = org.apache.royale.utils.Language.as(host, mx.core.Container).horizontalAlign;
  if (layoutObject)
    this.contentArea.addBead(layoutObject);
};


/**
 * @export
 * @override
 */
mx.containers.beads.PanelView.prototype.setupLayout = function() {
  this.titleBar.percentWidth = 100;
  var /** @type {org.apache.royale.core.ILayoutChild} */ panel = org.apache.royale.utils.Language.as(this.host, org.apache.royale.core.ILayoutChild);
  if (!panel.isWidthSizedToContent())
    this.contentArea.percentWidth = 100;
  if (!panel.isHeightSizedToContent())
    this.contentArea.percentHeight = 100;
  var /** @type {mx.containers.beads.BoxLayout} */ boxLayout = new mx.containers.beads.BoxLayout();
  boxLayout.direction = "vertical";
  this._strand.addBead(boxLayout);
};


mx.containers.beads.PanelView.prototype.set__strand = function(value) {
  this.titleBar = new mx.containers.PanelTitleBar();
  mx.containers.beads.PanelView.superClass_.set__strand.apply(this, [ value] );
};


Object.defineProperties(mx.containers.beads.PanelView.prototype, /** @lends {mx.containers.beads.PanelView.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IStrand} */
strand: {
set: mx.containers.beads.PanelView.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.containers.beads.PanelView.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'PanelView', qName: 'mx.containers.beads.PanelView', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.containers.beads.PanelView.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'mx.containers.beads.PanelView'}
      };
    },
    methods: function () {
      return {
        'PanelView': { type: '', declaredBy: 'mx.containers.beads.PanelView'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.containers.beads.PanelView.prototype.ROYALE_COMPILE_FLAGS = 26;
