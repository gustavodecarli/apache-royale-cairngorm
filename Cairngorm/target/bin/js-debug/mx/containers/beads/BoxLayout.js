/**
 * Generated by Apache Royale Compiler from mx/containers/beads/BoxLayout.as
 * mx.containers.beads.BoxLayout
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.containers.beads.BoxLayout');
/* Royale Dependency List: mx.containers.BoxDirection,mx.containers.utilityClasses.Flex,mx.controls.Image,mx.core.Container,mx.core.EdgeMetrics,mx.core.IUIComponent,mx.core.UIComponent,org.apache.royale.core.IBorderPaddingMarginValuesImpl,org.apache.royale.core.IStrand,org.apache.royale.core.ValuesManager,org.apache.royale.core.layout.EdgeData,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.core.LayoutBase');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {org.apache.royale.core.LayoutBase}
 */
mx.containers.beads.BoxLayout = function() {
  
  this.mx_containers_beads_BoxLayout__direction = mx.containers.BoxDirection.VERTICAL;
  mx.containers.beads.BoxLayout.base(this, 'constructor');
};
goog.inherits(mx.containers.beads.BoxLayout, org.apache.royale.core.LayoutBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.containers.beads.BoxLayout', mx.containers.beads.BoxLayout);


/**
 * @private
 * @type {org.apache.royale.core.IStrand}
 */
mx.containers.beads.BoxLayout.prototype.mx_containers_beads_BoxLayout__strand;


/**
 * @private
 * @type {mx.core.Container}
 */
mx.containers.beads.BoxLayout.prototype.mx_containers_beads_BoxLayout__target;


/**
 * @private
 * @type {string}
 */
mx.containers.beads.BoxLayout.prototype.mx_containers_beads_BoxLayout__direction;


/**
 *  @asprivate
 *  Measure container as per Box layout rules.
 * @export
 */
mx.containers.beads.BoxLayout.prototype.measure = function() {
  var /** @type {boolean} */ isVertical = this.mx_containers_beads_BoxLayout_isVertical();
  var /** @type {number} */ minWidth = 0;
  var /** @type {number} */ minHeight = 0;
  var /** @type {number} */ preferredWidth = 0;
  var /** @type {number} */ preferredHeight = 0;
  var /** @type {number} */ n = this.layoutView.numElements;
  var /** @type {number} */ numChildrenWithOwnSpace = n;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    var /** @type {mx.core.IUIComponent} */ child = org.apache.royale.utils.Language.as(this.layoutView.getElementAt(i), mx.core.IUIComponent);
    if (!child.includeInLayout) {
      numChildrenWithOwnSpace--;
      continue;
    }
    if (org.apache.royale.utils.Language.is(child, mx.controls.Image)) {
      org.apache.royale.utils.Language.trace("measure.image.complete: " + org.apache.royale.utils.Language.as(child, mx.controls.Image).complete);
    }
    var /** @type {number} */ wPref = child.getExplicitOrMeasuredWidth();
    var /** @type {number} */ hPref = child.getExplicitOrMeasuredHeight();
    if (isVertical) {
      minWidth = Math.max(!isNaN(child.percentWidth) ? child.minWidth : wPref, minWidth);
      preferredWidth = Math.max(wPref, preferredWidth);
      minHeight += !isNaN(child.percentHeight) ? child.minHeight : hPref;
      preferredHeight += hPref;
    } else {
      minWidth += !isNaN(child.percentWidth) ? child.minWidth : wPref;
      preferredWidth += wPref;
      minHeight = Math.max(!isNaN(child.percentHeight) ? child.minHeight : hPref, minHeight);
      preferredHeight = Math.max(hPref, preferredHeight);
    }
  }
  var /** @type {number} */ wPadding = this.widthPadding(numChildrenWithOwnSpace);
  var /** @type {number} */ hPadding = this.heightPadding(numChildrenWithOwnSpace);
  this.target.measuredMinWidth = minWidth + wPadding;
  this.target.measuredMinHeight = minHeight + hPadding;
  this.target.measuredWidth = preferredWidth + wPadding;
  this.target.measuredHeight = preferredHeight + hPadding;
};


/**
 * @export
 * @override
 */
mx.containers.beads.BoxLayout.prototype.layout = function() {
  var /** @type {number} */ n = this.layoutView.numElements;
  if (n == 0)
    return false;
  this.updateDisplayList(this.target.width, this.target.height);
  if (this.target.isWidthSizedToContent() && this.target.isHeightSizedToContent()) {
    this.target.setActualSize(this.target.getExplicitOrMeasuredWidth(), this.target.getExplicitOrMeasuredHeight());
  }
  else if (this.target.isWidthSizedToContent())
    this.target.setWidth(this.target.getExplicitOrMeasuredWidth());
  else if (this.target.isHeightSizedToContent())
    this.target.setHeight(this.target.getExplicitOrMeasuredHeight());
  return true;
};


/**
 *  @asprivate
 *  Lay out children as per Box layout rules.
 * @export
 * @param {number} unscaledWidth
 * @param {number} unscaledHeight
 */
mx.containers.beads.BoxLayout.prototype.updateDisplayList = function(unscaledWidth, unscaledHeight) {
  var /** @type {number} */ numChildrenWithOwnSpace = 0;
  var /** @type {number} */ i = 0;
  var /** @type {number} */ n = this.layoutView.numElements;
  if (n == 0)
    return;
  var /** @type {mx.core.EdgeMetrics} */ vm = this.target.viewMetricsAndPadding;
  var /** @type {org.apache.royale.core.layout.EdgeData} */ pd = org.apache.royale.utils.Language.as(org.apache.royale.core.ValuesManager["valuesImpl"], org.apache.royale.core.IBorderPaddingMarginValuesImpl).getPaddingMetrics(this.target);
  var /** @type {number} */ paddingLeft = pd.left;
  var /** @type {number} */ paddingTop = pd.top;
  var /** @type {number} */ horizontalAlign = this.getHorizontalAlignValue();
  var /** @type {number} */ verticalAlign = this.getVerticalAlignValue();
  var /** @type {number} */ mw = this.target.scaleX > 0 && this.target.scaleX != 1 ? this.target.minWidth / Math.abs(this.target.scaleX) : this.target.minWidth;
  var /** @type {number} */ mh = this.target.scaleY > 0 && this.target.scaleY != 1 ? this.target.minHeight / Math.abs(this.target.scaleY) : this.target.minHeight;
  if (this.host.isWidthSizedToContent() || this.host.isHeightSizedToContent()) {
    this.measure();
    if (this.host.isWidthSizedToContent())
      unscaledWidth = this.target.measuredWidth;
    if (this.host.isHeightSizedToContent())
      unscaledHeight = this.target.measuredHeight;
  }
  var /** @type {number} */ w = Math.max(unscaledWidth, mw) - vm.right - vm.left;
  var /** @type {number} */ h = Math.max(unscaledHeight, mh) - vm.bottom - vm.top;
  var /** @type {number} */ gap;
  //var /** @type {number} */ numChildrenWithOwnSpace = 0;
  var /** @type {number} */ excessSpace;
  var /** @type {number} */ top;
  var /** @type {number} */ left;
  //var /** @type {number} */ i = 0;
  var /** @type {mx.core.IUIComponent} */ obj;
  if (n == 1) {
    var /** @type {mx.core.IUIComponent} */ child = org.apache.royale.utils.Language.as(this.layoutView.getElementAt(0), mx.core.IUIComponent);
    var /** @type {mx.core.UIComponent} */ uic = org.apache.royale.utils.Language.as(child, mx.core.UIComponent);
    var /** @type {number} */ percentWidth = child.percentWidth;
    var /** @type {number} */ percentHeight = child.percentHeight;
    var /** @type {number} */ width;
    if (percentWidth) {
      width = Math.max(child.minWidth, Math.min(child.maxWidth, ((percentWidth >= 100) ? w : (w * percentWidth / 100))));
    } else if (uic != null && !isNaN(Number(uic.left)) && !isNaN(Number(uic.right))) {
      width = w - Number(uic.left) - Number(uic.right);
    } else {
      width = child.getExplicitOrMeasuredWidth();
    }
    var /** @type {number} */ height;
    if (percentHeight) {
      height = Math.max(child.minHeight, Math.min(child.maxHeight, ((percentHeight >= 100) ? h : (h * percentHeight / 100))));
    } else if (uic != null && !isNaN(Number(uic.top)) && !isNaN(Number(uic.bottom))) {
      height = h - Number(uic.top) - Number(uic.bottom);
    } else {
      height = child.getExplicitOrMeasuredHeight();
    }
    if (child.scaleX == 1 && child.scaleY == 1)
      child.setActualSize(Math.floor(width), Math.floor(height));
    else
      child.setActualSize(width, height);
    left = (w - child.width) * horizontalAlign + paddingLeft;
    top = (h - child.height) * verticalAlign + paddingTop;
    child.positioner.style.position = 'absolute';
    child.move(Math.floor(left), Math.floor(top));
  } else if (this.mx_containers_beads_BoxLayout_isVertical()) {
    gap = Number(this.target.getStyle("verticalGap"));
    numChildrenWithOwnSpace = n;
    for (i = 0; i < n; i++) {
      if (!org.apache.royale.utils.Language.as(this.layoutView.getElementAt(i), mx.core.IUIComponent, true).includeInLayout)
        numChildrenWithOwnSpace--;
    }
    excessSpace = mx.containers.utilityClasses.Flex.flexChildHeightsProportionally(this.layoutView, h - (numChildrenWithOwnSpace - 1) * gap, w);
    top = paddingTop + excessSpace * verticalAlign;
    for (i = 0; i < n; i++) {
      obj = org.apache.royale.utils.Language.as(this.layoutView.getElementAt(i), mx.core.IUIComponent);
      left = (w - obj.width) * horizontalAlign + paddingLeft;
      obj.positioner.style.position = 'absolute';
      obj.move(Math.floor(left), Math.floor(top));
      if (obj.includeInLayout)
        top += obj.height + gap;
    }
  } else {
    gap = Number(this.target.getStyle("horizontalGap"));
    numChildrenWithOwnSpace = n;
    for (i = 0; i < n; i++) {
      if (!org.apache.royale.utils.Language.as(this.layoutView.getElementAt(i), mx.core.IUIComponent, true).includeInLayout)
        numChildrenWithOwnSpace--;
    }
    excessSpace = mx.containers.utilityClasses.Flex.flexChildWidthsProportionally(this.layoutView, w - (numChildrenWithOwnSpace - 1) * gap, h);
    left = paddingLeft + excessSpace * horizontalAlign;
    for (i = 0; i < n; i++) {
      obj = org.apache.royale.utils.Language.as(this.layoutView.getElementAt(i), mx.core.IUIComponent);
      top = (h - obj.height) * verticalAlign + paddingTop;
      obj.positioner.style.position = 'absolute';
      obj.move(Math.floor(left), Math.floor(top));
      if (obj.includeInLayout)
        left += obj.width + gap;
    }
  }
};


/**
 *  @asprivate
 * @private
 * @return {boolean}
 */
mx.containers.beads.BoxLayout.prototype.mx_containers_beads_BoxLayout_isVertical = function() {
  return this.direction != mx.containers.BoxDirection.HORIZONTAL;
};


/**
 *  @asprivate
 * @export
 * @param {number} numChildren
 * @return {number}
 */
mx.containers.beads.BoxLayout.prototype.widthPadding = function(numChildren) {
  var /** @type {mx.core.EdgeMetrics} */ vm = this.target.viewMetricsAndPadding;
  var /** @type {number} */ padding = vm.left + vm.right;
  if (numChildren > 1 && this.mx_containers_beads_BoxLayout_isVertical() == false) {
    padding += this.target.getStyle("horizontalGap") * (numChildren - 1);
  }
  return padding;
};


/**
 *  @asprivate
 * @export
 * @param {number} numChildren
 * @return {number}
 */
mx.containers.beads.BoxLayout.prototype.heightPadding = function(numChildren) {
  var /** @type {mx.core.EdgeMetrics} */ vm = this.target.viewMetricsAndPadding;
  var /** @type {number} */ padding = vm.top + vm.bottom;
  if (numChildren > 1 && this.mx_containers_beads_BoxLayout_isVertical()) {
    padding += this.target.getStyle("verticalGap") * (numChildren - 1);
  }
  return padding;
};


/**
 *  @asprivate
 *  Returns a numeric value for the align setting.
 *  0 = left/top, 0.5 = center, 1 = right/bottom
 * @export
 * @return {number}
 */
mx.containers.beads.BoxLayout.prototype.getHorizontalAlignValue = function() {
  var /** @type {string} */ horizontalAlign = this.target.horizontalAlign;
  if (horizontalAlign == "center")
    return 0.5;
  else if (horizontalAlign == "right")
    return 1;
  return 0;
};


/**
 *  @asprivate
 *  Returns a numeric value for the align setting.
 *  0 = left/top, 0.5 = center, 1 = right/bottom
 * @export
 * @return {number}
 */
mx.containers.beads.BoxLayout.prototype.getVerticalAlignValue = function() {
  var /** @type {string} */ verticalAlign = org.apache.royale.utils.Language.string(this.target.getStyle("verticalAlign"));
  if (verticalAlign == "middle")
    return 0.5;
  else if (verticalAlign == "bottom")
    return 1;
  return 0;
};


mx.containers.beads.BoxLayout.prototype.set__strand = function(value) {
  this.mx_containers_beads_BoxLayout__strand = value;
  this.mx_containers_beads_BoxLayout__target = org.apache.royale.utils.Language.as(value, mx.core.Container);
  mx.containers.beads.BoxLayout.superClass_.set__strand.apply(this, [ value] );
};


mx.containers.beads.BoxLayout.prototype.get__target = function() {
  return this.mx_containers_beads_BoxLayout__target;
};


mx.containers.beads.BoxLayout.prototype.set__target = function(value) {
  this.mx_containers_beads_BoxLayout__target = value;
};


mx.containers.beads.BoxLayout.prototype.get__direction = function() {
  return this.mx_containers_beads_BoxLayout__direction;
};


mx.containers.beads.BoxLayout.prototype.set__direction = function(value) {
  this.mx_containers_beads_BoxLayout__direction = value;
};


Object.defineProperties(mx.containers.beads.BoxLayout.prototype, /** @lends {mx.containers.beads.BoxLayout.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IStrand} */
strand: {
set: mx.containers.beads.BoxLayout.prototype.set__strand},
/**
  * @export
  * @type {mx.core.Container} */
target: {
get: mx.containers.beads.BoxLayout.prototype.get__target,
set: mx.containers.beads.BoxLayout.prototype.set__target},
/**
  * @export
  * @type {string} */
direction: {
get: mx.containers.beads.BoxLayout.prototype.get__direction,
set: mx.containers.beads.BoxLayout.prototype.set__direction}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.containers.beads.BoxLayout.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'BoxLayout', qName: 'mx.containers.beads.BoxLayout', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.containers.beads.BoxLayout.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'mx.containers.beads.BoxLayout'},
        'target': { type: 'mx.core.Container', access: 'readwrite', declaredBy: 'mx.containers.beads.BoxLayout'},
        'direction': { type: 'String', access: 'readwrite', declaredBy: 'mx.containers.beads.BoxLayout'}
      };
    },
    methods: function () {
      return {
        'BoxLayout': { type: '', declaredBy: 'mx.containers.beads.BoxLayout'},
        'measure': { type: 'void', declaredBy: 'mx.containers.beads.BoxLayout'},
        'layout': { type: 'Boolean', declaredBy: 'mx.containers.beads.BoxLayout'},
        'updateDisplayList': { type: 'void', declaredBy: 'mx.containers.beads.BoxLayout', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'widthPadding': { type: 'Number', declaredBy: 'mx.containers.beads.BoxLayout', parameters: function () { return [ 'Number', false ]; }},
        'heightPadding': { type: 'Number', declaredBy: 'mx.containers.beads.BoxLayout', parameters: function () { return [ 'Number', false ]; }},
        'getHorizontalAlignValue': { type: 'Number', declaredBy: 'mx.containers.beads.BoxLayout'},
        'getVerticalAlignValue': { type: 'Number', declaredBy: 'mx.containers.beads.BoxLayout'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.containers.beads.BoxLayout.prototype.ROYALE_COMPILE_FLAGS = 26;
