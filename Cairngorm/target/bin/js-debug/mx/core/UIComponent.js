/**
 * Generated by Apache Royale Compiler from mx/core/UIComponent.as
 * mx.core.UIComponent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.core.UIComponent');
/* Royale Dependency List: mx.controls.beads.ToolTipBead,mx.core.FlexCSSStyles,mx.core.FlexGlobals,mx.core.IFlexModuleFactory,mx.core.LayoutElementUIComponentUtils,mx.core.UITextFormat,mx.core.mx_internal,mx.display.Graphics,mx.events.FlexEvent,mx.events.KeyboardEvent,mx.events.PropertyChangeEvent,mx.events.ValidationResultEvent,mx.managers.ICursorManager,mx.managers.IFocusManager,mx.managers.IFocusManagerContainer,mx.managers.ISystemManager,mx.resources.IResourceManager,mx.resources.ResourceManager,mx.styles.IStyleManager2,mx.styles.StyleManager,mx.validators.ValidationResult,org.apache.royale.core.CallLaterBead,org.apache.royale.core.IBorderPaddingMarginValuesImpl,org.apache.royale.core.IChild,org.apache.royale.core.IStatesImpl,org.apache.royale.core.IUIBase,org.apache.royale.core.TextLineMetrics,org.apache.royale.core.ValuesManager,org.apache.royale.core.styles.BorderStyles,org.apache.royale.effects.IEffect,org.apache.royale.events.Event,org.apache.royale.events.IEventDispatcher,org.apache.royale.events.MouseEvent,org.apache.royale.events.ValueChangeEvent,org.apache.royale.geom.Point,org.apache.royale.geom.Rectangle,org.apache.royale.html.beads.DisableBead,org.apache.royale.html.beads.DisabledAlphaBead,org.apache.royale.html.supportClasses.ContainerContentArea,org.apache.royale.utils.CSSUtils,org.apache.royale.utils.MXMLDataInterpreter,org.apache.royale.utils.PointUtils,org.apache.royale.utils.loadBeadFromValuesManager,org.apache.royale.utils.Language,XML*/
goog.provide('mx.core.UIComponent.EffectEventWatcher');
goog.provide('mx.core.UIComponent.MethodQueueElement');

goog.require('mx.core.IFlexModule');
goog.require('mx.core.IInvalidating');
goog.require('mx.core.IUIComponent');
goog.require('org.apache.royale.core.UIBase');
goog.require('mx.core.IChildList');
goog.require('mx.core.IFlexDisplayObject');
goog.require('mx.core.IVisualElement');
goog.require('mx.styles.ISimpleStyleClient');
goog.require('mx.validators.IValidatorListener');
goog.require('org.apache.royale.core.IStatesObject');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {org.apache.royale.core.UIBase}
 * @implements {mx.core.IChildList}
 * @implements {mx.core.IFlexDisplayObject}
 * @implements {mx.core.IInvalidating}
 * @implements {org.apache.royale.core.IStatesObject}
 * @implements {mx.styles.ISimpleStyleClient}
 * @implements {mx.core.IUIComponent}
 * @implements {mx.core.IVisualElement}
 * @implements {mx.core.IFlexModule}
 * @implements {mx.validators.IValidatorListener}
 */
mx.core.UIComponent = function() {
  
  this.mx_core_UIComponent__resourceManager = mx.resources.ResourceManager.getInstance();
  this._measuredWidth = Number.NaN;
  this._measuredHeight = Number.NaN;
  this.mx_core_UIComponent__states = [];
  this.mx_core_UIComponent__transitions = [];
  mx.core.UIComponent.base(this, 'constructor');
};
goog.inherits(mx.core.UIComponent, org.apache.royale.core.UIBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.core.UIComponent', mx.core.UIComponent);


/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UIComponent.DEFAULT_MEASURED_WIDTH = 160;


/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UIComponent.DEFAULT_MEASURED_MIN_WIDTH = 40;


/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UIComponent.DEFAULT_MEASURED_HEIGHT = 22;


/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UIComponent.DEFAULT_MEASURED_MIN_HEIGHT = 22;


/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UIComponent.DEFAULT_MAX_WIDTH = 10000;


/**
 * @export
 * @const
 * @type {number}
 */
mx.core.UIComponent.DEFAULT_MAX_HEIGHT = 10000;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__chromeColor = 0;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__initialized = false;


/**
 * @private
 * @type {mx.display.Graphics}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__graphics;


/**
 * @private
 * @type {mx.core.UIComponent}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__mask;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__rotation = 0;


/**
 * @private
 * @return {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_computeTransformString = function() {
  var /** @type {string} */ s = "";
  var /** @type {number} */ value = this.mx_core_UIComponent__rotation;
  if (this.mx_core_UIComponent__rotation != 0) {
    if (value < 0)
      value += 360;
    s += "rotate(" + value.toString() + "deg)";
  }
  if (this.mx_core_UIComponent__scaleX != 1.0) {
    if (s.length)
      s += " ";
    s += "scaleX(" + this.mx_core_UIComponent__scaleX.toString() + ")";
  }
  if (this.mx_core_UIComponent__scaleY != 1.0) {
    if (s.length)
      s += " ";
    s += "scaleY(" + this.mx_core_UIComponent__scaleY.toString() + ")";
  }
  return s;
};


/**
 * @private
 * @type {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__name;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldX = 0;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldY = 0;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldWidth = 0;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldHeight = 0;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldMinWidth;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldMinHeight;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldExplicitWidth;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldExplicitHeight;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__accessibilityEnabled = true;


/**
 * @type {string}
 */
mx.core.UIComponent.prototype.http_$$www_adobe_com$2006$flex$mx$internal___errorString = "";


/**
 * @private
 * @type {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_oldErrorString = "";


/**
 * @type {boolean}
 */
mx.core.UIComponent.prototype.http_$$www_adobe_com$2006$flex$mx$internal__saveBorderColor = true;


/**
 * @type {number}
 */
mx.core.UIComponent.prototype.http_$$www_adobe_com$2006$flex$mx$internal__origBorderColor;


/**
 *  @asprivate
 *  Set the appropriate borderColor based on errorString.
 *  If we have an errorString, use errorColor. If we don't
 *  have an errorString, restore the original borderColor.
 * @private
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_setBorderColorForErrorString = function() {
  var /** @type {boolean} */ showErrorSkin = true;
  if (showErrorSkin) {
    if (!this.http_$$www_adobe_com$2006$flex$mx$internal___errorString || this.http_$$www_adobe_com$2006$flex$mx$internal___errorString.length == 0) {
      if (!isNaN(this.http_$$www_adobe_com$2006$flex$mx$internal__origBorderColor)) {
        this.setStyle("borderColor", this.http_$$www_adobe_com$2006$flex$mx$internal__origBorderColor);
        this.http_$$www_adobe_com$2006$flex$mx$internal__saveBorderColor = true;
      }
    } else {
      if (this.http_$$www_adobe_com$2006$flex$mx$internal__saveBorderColor) {
        this.http_$$www_adobe_com$2006$flex$mx$internal__saveBorderColor = false;
        this.http_$$www_adobe_com$2006$flex$mx$internal__origBorderColor = Number(this.getStyle("borderColor"));
        if (isNaN(this.http_$$www_adobe_com$2006$flex$mx$internal__origBorderColor)) {
          var /** @type {org.apache.royale.core.IBorderPaddingMarginValuesImpl} */ borderImpl = org.apache.royale.utils.Language.as(org.apache.royale.core.ValuesManager["valuesImpl"], org.apache.royale.core.IBorderPaddingMarginValuesImpl);
          if (borderImpl) {
            var /** @type {org.apache.royale.core.styles.BorderStyles} */ bs = borderImpl.getBorderStyles(this);
            this.http_$$www_adobe_com$2006$flex$mx$internal__origBorderColor = bs.color;
          }
        }
      }
      this.setStyle("borderColor", this.getStyle("errorColor"));
    }
    this.styleChanged("themeColor");
  }
};


/**
 * @private
 * @type {mx.core.IUIComponent}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__owner;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__enabled = true;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__focusEnabled = true;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__hasFocusableChildren = false;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__tabEnabled = true;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__tabFocusEnabled = true;


/**
 * @private
 * @type {Array}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__filters;


/**
 * @private
 * @type {mx.managers.IFocusManager}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__focusManager;


/**
 * @private
 * @type {mx.resources.IResourceManager}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__resourceManager;


/**
 * @private
 * @type {mx.styles.IStyleManager2}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__styleManager;


/**
 * @private
 * @type {mx.managers.ISystemManager}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__systemManager;


/**
 * @private
 * @type {mx.core.IFlexModuleFactory}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__moduleFactory;


/**
 * @export
 * @type {Object}
 */
mx.core.UIComponent.prototype._mxmlDocument;


/**
 * @export
 * @type {boolean}
 */
mx.core.UIComponent.prototype.isAbsolute = true;


/**
 * @export
 * @override
 */
mx.core.UIComponent.prototype.addedToParent = function() {
  if (this.isAbsolute)
    this.element.style.position = "absolute";
  mx.core.UIComponent.superClass_.addedToParent.apply(this);
  if (!isNaN(this.mx_core_UIComponent__backgroundAlpha) && this.mx_core_UIComponent__backgroundColor !== null) {
    var /** @type {number} */ red = parseInt("0x" + this.mx_core_UIComponent__backgroundColor.substring(1, 3), undefined);
    var /** @type {number} */ green = parseInt("0x" + this.mx_core_UIComponent__backgroundColor.substring(3, 5), undefined);
    var /** @type {number} */ blue = parseInt("0x" + this.mx_core_UIComponent__backgroundColor.substring(5, 7), undefined);
    var /** @type {string} */ rgba = "rgba(" + red + "," + green + "," + blue + "," + this.mx_core_UIComponent__backgroundAlpha + ")";
    org.apache.royale.utils.Language.as(this.element, HTMLElement).style['backgroundColor'] = rgba;
  }
  if (!this.initialized) {
    this.initialize();
    this.initialized = true;
  }
  if (!this.mxmlDocument && org.apache.royale.utils.Language.is(this.parent, mx.core.UIComponent))
    this.mxmlDocument = org.apache.royale.utils.Language.as(this.parent, mx.core.UIComponent, true).mxmlDocument;
  else if (!this.mxmlDocument && org.apache.royale.utils.Language.is(this.parent, org.apache.royale.html.supportClasses.ContainerContentArea))
    this.mxmlDocument = org.apache.royale.utils.Language.as(org.apache.royale.utils.Language.as(this.parent, org.apache.royale.html.supportClasses.ContainerContentArea, true).parent, mx.core.UIComponent, true).mxmlDocument;
};


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__measuredMinWidth = 0;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__measuredMinHeight = 0;


/**
 * @export
 * @type {number}
 */
mx.core.UIComponent.prototype._measuredWidth;


/**
 * @export
 * @type {number}
 */
mx.core.UIComponent.prototype._measuredHeight;


/**
 * @export
 * @type {number}
 */
mx.core.UIComponent.prototype._explicitMinWidth;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__explicitMinHeight;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__explicitMaxWidth;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__explicitMaxHeight;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__scaleX = 1.0;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__scaleY = 1.0;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__alpha = 1.0;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__includeInLayout = true;


/**
 * @private
 * @type {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__currentState;


/**
 * @private
 * @type {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_requestedCurrentState;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_playStateTransition = true;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__currentStateChanged;


/**
 * @export
 * @param {string} stateName
 * @param {boolean=} playTransition
 */
mx.core.UIComponent.prototype.setCurrentState = function(stateName, playTransition) {
  playTransition = typeof playTransition !== 'undefined' ? playTransition : true;
  this.currentState = stateName;
};


/**
 * @private
 * @param {org.apache.royale.events.Event} event
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_stateChangeCompleteHandler = function(event) {
  this.callLater(org.apache.royale.utils.Language.closure(this.dispatchUpdateComplete, this, 'dispatchUpdateComplete'));
};


/**
 * @export
 */
mx.core.UIComponent.prototype.dispatchUpdateComplete = function() {
  this.dispatchEvent(new org.apache.royale.events.Event("updateComplete"));
};


/**
 * @private
 * @type {Array}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__states;


/**
 * @private
 * @type {Array}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__transitions;


/**
 * @private
 * @type {Object}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__styleName;


/**
 * @private
 * @type {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__toolTip;


/**
 * @private
 * @type {mx.controls.beads.ToolTipBead}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__toolTipBead;


/**
 * @private
 * @type {org.apache.royale.html.beads.DisableBead}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__disableBead;


/**
 * @private
 * @type {boolean}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__isPopUp;


/**
 *  @asprivate
 *  @royaleignorecoercion mx.core.IUIComponent
 * @export
 * @param {Object} child
 * @return {Object}
 */
mx.core.UIComponent.prototype.addChild = function(child) {
  return this.addElement(child);
};


/**
 * @export
 * @param {mx.core.IUIComponent} child
 * @return {mx.core.IUIComponent}
 */
mx.core.UIComponent.prototype.$uibase_addChild = function(child) {
  var /** @type {mx.core.IUIComponent} */ ret = org.apache.royale.utils.Language.as(mx.core.UIComponent.superClass_.addElement.apply(this, [ child] ), mx.core.IUIComponent);
  return ret;
};


/**
 *  @asprivate
 *  @royaleignorecoercion mx.core.IUIComponent
 * @export
 * @param {Object} child
 * @param {number} index
 * @return {Object}
 */
mx.core.UIComponent.prototype.addChildAt = function(child, index) {
  return this.addElementAt(child, index);
};


/**
 * @export
 * @param {mx.core.IUIComponent} child
 * @param {number} index
 * @return {mx.core.IUIComponent}
 */
mx.core.UIComponent.prototype.$uibase_addChildAt = function(child, index) {
  var /** @type {mx.core.IUIComponent} */ ret;
  if (index >= mx.core.UIComponent.superClass_.get__numElements.apply(this))
    ret = org.apache.royale.utils.Language.as(mx.core.UIComponent.superClass_.addElement.apply(this, [ child] ), mx.core.IUIComponent);
  else
    ret = org.apache.royale.utils.Language.as(mx.core.UIComponent.superClass_.addElementAt.apply(this, [ child, index] ), mx.core.IUIComponent);
  return ret;
};


/**
 *  @asprivate
 *  @royaleignorecoercion mx.core.IUIComponent
 * @export
 * @param {Object} child
 * @return {Object}
 */
mx.core.UIComponent.prototype.removeChild = function(child) {
  return this.removeElement(child);
};


/**
 * @export
 * @param {mx.core.IUIComponent} child
 * @return {mx.core.IUIComponent}
 */
mx.core.UIComponent.prototype.$uibase_removeChild = function(child) {
  var /** @type {mx.core.IUIComponent} */ ret = org.apache.royale.utils.Language.as(mx.core.UIComponent.superClass_.removeElement.apply(this, [ child] ), mx.core.IUIComponent);
  return ret;
};


/**
 * @export
 * @param {mx.core.IUIComponent} child1
 * @param {mx.core.IUIComponent} child2
 */
mx.core.UIComponent.prototype.swapChildren = function(child1, child2) {
};


/**
 *  @asprivate
 *  @royaleignorecoercion mx.core.IUIComponent
 * @export
 * @param {number} index
 * @return {Object}
 */
mx.core.UIComponent.prototype.removeChildAt = function(index) {
  return this.removeElement(this.getElementAt(index));
};


/**
 * @export
 * @param {number} index
 * @return {mx.core.IUIComponent}
 */
mx.core.UIComponent.prototype.$uibase_removeChildAt = function(index) {
  var /** @type {mx.core.IUIComponent} */ ret = org.apache.royale.utils.Language.as(mx.core.UIComponent.superClass_.removeElement.apply(this, [ this.getElementAt(index)] ), mx.core.IUIComponent);
  return ret;
};


/**
 *  @asprivate
 *  @royaleignorecoercion mx.core.IUIComponent
 * @export
 * @param {number} index
 * @return {Object}
 */
mx.core.UIComponent.prototype.getChildAt = function(index) {
  return this.getElementAt(index);
};


/**
 *  @asprivate
 * @export
 * @param {mx.core.IUIComponent} child
 * @param {number} index
 */
mx.core.UIComponent.prototype.setChildIndex = function(child, index) {
  org.apache.royale.utils.Language.trace("setChildIndex not implemented");
};


/**
 *  @asprivate
 * @export
 * @param {mx.core.IUIComponent} child
 * @return {number}
 */
mx.core.UIComponent.prototype.getChildIndex = function(child) {
  return this.getElementIndex(child);
};


/**
 *  @asprivate
 * @export
 * @param {string} name
 * @return {mx.core.IUIComponent}
 */
mx.core.UIComponent.prototype.getChildByName = function(name) {
  org.apache.royale.utils.Language.trace("getChildByName not implemented");
  return null;
};


/**
 *  @asprivate
 * @export
 * @param {mx.core.IUIComponent} child
 * @return {boolean}
 */
mx.core.UIComponent.prototype.contains = function(child) {
  
  return this.element.contains(child.element);
};


/**
 *  @asprivate
 * @export
 * @param {boolean=} lockCenter
 * @param {org.apache.royale.geom.Rectangle=} bounds
 */
mx.core.UIComponent.prototype.startDrag = function(lockCenter, bounds) {
  lockCenter = typeof lockCenter !== 'undefined' ? lockCenter : false;
  bounds = typeof bounds !== 'undefined' ? bounds : null;
  org.apache.royale.utils.Language.trace("startDrag not implemented");
};


/**
 *  @asprivate
 * @export
 */
mx.core.UIComponent.prototype.stopDrag = function() {
  org.apache.royale.utils.Language.trace("stopDrag not implemented");
};


/**
 *  Initializes the internal structure of this component.
 *
 *  <p>Initializing a UIComponent is the fourth step in the creation
 *  of a visual component instance, and happens automatically
 *  the first time that the instance is added to a parent.
 *  Therefore, you do not generally need to call
 *  <code>initialize()</code>; the Flex framework calls it for you
 *  from UIComponent's override of the <code>addChild()</code>
 *  and <code>addChildAt()</code> methods.</p>
 *
 *  <p>The first step in the creation of a visual component instance
 *  is construction, with the <code>new</code> operator:</p>
 *
 *  <pre>
 *  var okButton:Button = new Button();</pre>
 *
 *  <p>After construction, the new Button instance is a solitary
 *  DisplayObject; it does not yet have a UITextField as a child
 *  to display its label, and it doesn't have a parent.</p>
 *
 *  <p>The second step is configuring the newly-constructed instance
 *  with the appropriate properties, styles, and event handlers:</p>
 *
 *  <pre>
 *  okButton.label = "OK";
 *  okButton.setStyle("cornerRadius", 0);
 *  okButton.addEventListener(MouseEvent.CLICK, clickHandler);</pre>
 *
 *  <p>The third step is adding the instance to a parent:</p>
 *
 *  <pre>
 *  someContainer.addChild(okButton);</pre>
 *
 *  <p>A side effect of calling <code>addChild()</code>
 *  or <code>addChildAt()</code>, when adding a component to a parent
 *  for the first time, is that <code>initialize</code> gets
 *  automatically called.</p>
 *
 *  <p>This method first dispatches a <code>preinitialize</code> event,
 *  giving developers using this component a chance to affect it
 *  before its internal structure has been created.
 *  Next it calls the <code>createChildren()</code> method
 *  to create the component's internal structure; for a Button,
 *  this method creates and adds the UITextField for the label.
 *  Then it dispatches an <code>initialize</code> event,
 *  giving developers a chance to affect the component
 *  after its internal structure has been created.</p>
 *
 *  <p>Note that it is the act of attaching a component to a parent
 *  for the first time that triggers the creation of its internal structure.
 *  If its internal structure includes other UIComponents, then this is a
 *  recursive process in which the tree of DisplayObjects grows by one leaf
 *  node at a time.</p>
 *
 *  <p>If you are writing a component, you do not need
 *  to override this method.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.initialize = function() {
  if (this.initialized)
    return;
  this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.PREINITIALIZE));
  this.createChildren();
  this.initializationComplete();
};


/**
 *  Finalizes the initialization of this component.
 *
 *  <p>This method is the last code that executes when you add a component
 *  to a parent for the first time using <code>addChild()</code>
 *  or <code>addChildAt()</code>.
 *  It handles some housekeeping related to dispatching
 *  the <code>initialize</code> event.
 *  If you are writing a component, you do not need
 *  to override this method.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.initializationComplete = function() {
  this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.INITIALIZE));
};


/**
 *  Create child objects of the component.
 *  This is an advanced method that you might override
 *  when creating a subclass of UIComponent.
 *
 *  <p>A component that creates other components or objects within it is called a composite component.
 *  For example, the Flex ComboBox control is actually made up of a TextInput control
 *  to define the text area of the ComboBox, and a Button control to define the ComboBox arrow.
 *  Components implement the <code>createChildren()</code> method to create child
 *  objects (such as other components) within the component.</p>
 *
 *  <p>From within an override of the <code>createChildren()</code> method,
 *  you call the <code>addChild()</code> method to add each child object. </p>
 *
 *  <p>You do not call this method directly. Flex calls the
 *  <code>createChildren()</code> method in response to the call to
 *  the <code>addChild()</code> method to add the component to its parent. </p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.createChildren = function() {
  org.apache.royale.utils.MXMLDataInterpreter.generateMXMLInstances(this._mxmlDocument, this, this.MXMLDescriptor);
};


/**
 * @private
 * @type {Array}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__mxmlDescriptor;


/**
 *  @asprivate
 * @export
 * @param {Object} document
 * @param {Array} value
 */
mx.core.UIComponent.prototype.setMXMLDescriptor = function(document, value) {
  this._mxmlDocument = document;
  this.mx_core_UIComponent__mxmlDescriptor = value;
};


/**
 *  @copy org.apache.royale.core.Application#generateMXMLAttributes()
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 * @param {Array} data
 */
mx.core.UIComponent.prototype.generateMXMLAttributes = function(data) {
  if (!this._mxmlDocument)
    this._mxmlDocument = this;
  org.apache.royale.utils.MXMLDataInterpreter.generateMXMLProperties(this, data);
};


/**
 * @export
 * @type {Array}
 */
mx.core.UIComponent.prototype.mxmlContent;


/**
 *  Marks a component so that its <code>commitProperties()</code>
 *  method gets called during a later screen update.
 *
 *  <p>Invalidation is a useful mechanism for eliminating duplicate
 *  work by delaying processing of changes to a component until a
 *  later screen update.
 *  For example, if you want to change the text color and size,
 *  it would be wasteful to update the color immediately after you
 *  change it and then update the size when it gets set.
 *  It is more efficient to change both properties and then render
 *  the text with its new size and color once.</p>
 *
 *  <p>Invalidation methods rarely get called.
 *  In general, setting a property on a component automatically
 *  calls the appropriate invalidation method.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.invalidateProperties = function() {
  org.apache.royale.utils.Language.trace("invalidateProperties not implemented");
};


/**
 *  Marks a component so that its <code>measure()</code>
 *  method gets called during a later screen update.
 *
 *  <p>Invalidation is a useful mechanism for eliminating duplicate
 *  work by delaying processing of changes to a component until a
 *  later screen update.
 *  For example, if you want to change the text and font size,
 *  it would be wasteful to update the text immediately after you
 *  change it and then update the size when it gets set.
 *  It is more efficient to change both properties and then render
 *  the text with its new size once.</p>
 *
 *  <p>Invalidation methods rarely get called.
 *  In general, setting a property on a component automatically
 *  calls the appropriate invalidation method.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * 
 *  @royaleignorecoercion org.apache.royale.events.IEventDispatcher
 * @export
 */
mx.core.UIComponent.prototype.invalidateSize = function() {
  if (this.parent)
    this.parent.dispatchEvent(new org.apache.royale.events.Event("layoutNeeded"));
};


/**
 *  Helper method to invalidate parent size and display list if
 *  this object affects its layout (includeInLayout is true).
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.invalidateParentSizeAndDisplayList = function() {
  org.apache.royale.utils.Language.trace("invalidateParentSizeAndDisplayList not implemented");
};


/**
 * @export
 * @type {boolean}
 */
mx.core.UIComponent.prototype.invalidateDisplayListFlag = false;


/**
 *  Marks a component so that its <code>updateDisplayList()</code>
 *  method gets called during a later screen update.
 *
 *  <p>Invalidation is a useful mechanism for eliminating duplicate
 *  work by delaying processing of changes to a component until a
 *  later screen update.
 *  For example, if you want to change the width and height,
 *  it would be wasteful to update the component immediately after you
 *  change the width and then update again with the new height.
 *  It is more efficient to change both properties and then render
 *  the component with its new size once.</p>
 *
 *  <p>Invalidation methods rarely get called.
 *  In general, setting a property on a component automatically
 *  calls the appropriate invalidation method.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.invalidateDisplayList = function() {
  org.apache.royale.utils.Language.trace("invalidateDisplayList not implemented");
  this.invalidateDisplayListFlag = true;
};


/**
 *  localToGlobal
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {org.apache.royale.geom.Point} value
 * @return {org.apache.royale.geom.Point}
 */
mx.core.UIComponent.prototype.localToGlobal = function(value) {
  
  return org.apache.royale.utils.PointUtils.localToGlobal(value, this);
};


/**
 *  globalToLocal
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {org.apache.royale.geom.Point} value
 * @return {org.apache.royale.geom.Point}
 */
mx.core.UIComponent.prototype.globalToLocal = function(value) {
  
  return org.apache.royale.utils.PointUtils.globalToLocal(value, this);
};


/**
 * @export
 * @return {mx.core.UIComponent}
 */
mx.core.UIComponent.prototype.getFocus = function() {
  return null;
};


/**
 *  Detects changes to style properties. When any style property is set,
 *  Flex calls the <code>styleChanged()</code> method,
 *  passing to it the name of the style being set.
 *
 *  <p>This is an advanced method that you might override
 *  when creating a subclass of UIComponent. When you create a custom component,
 *  you can override the <code>styleChanged()</code> method
 *  to check the style name passed to it, and handle the change accordingly.
 *  This lets you override the default behavior of an existing style,
 *  or add your own custom style properties.</p>
 *
 *  <p>If you handle the style property, your override of
 *  the <code>styleChanged()</code> method should call the
 *  <code>invalidateDisplayList()</code> method to cause Flex to execute
 *  the component's <code>updateDisplayList()</code> method at the next screen update.</p>
 *
 *  @asparam styleProp The name of the style property, or null if all styles for this
 *  component have changed.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} styleProp
 */
mx.core.UIComponent.prototype.styleChanged = function(styleProp) {
  org.apache.royale.utils.Language.trace("styleChanged not implemented");
};


/**
 *  Validate and update the properties and layout of this object
 *  and redraw it, if necessary.
 *
 *  Processing properties that require substantial computation are normally
 *  not processed until the script finishes executing.
 *  For example setting the <code>width</code> property is delayed, because it can
 *  require recalculating the widths of the objects children or its parent.
 *  Delaying the processing prevents it from being repeated
 *  multiple times if the script sets the <code>width</code> property more than once.
 *  This method lets you manually override this behavior.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.validateNow = function() {
};


/**
 * @private
 * @type {org.apache.royale.core.CallLaterBead}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_callLaterBead;


/**
 *  Queues a function to be called later.
 *
 *  <p>Before each update of the screen, Flash Player or AIR calls
 *  the set of functions that are scheduled for the update.
 *  Sometimes, a function should be called in the next update
 *  to allow the rest of the code scheduled for the current
 *  update to be executed.
 *  Some features, like effects, can cause queued functions to be
 *  delayed until the feature completes.</p>
 *
 *  @asparam method Reference to a method to be executed later.
 *
 *  @asparam args Array of Objects that represent the arguments to pass to the method.
 *
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {Function} method
 * @param {Array=} args
 */
mx.core.UIComponent.prototype.callLater = function(method, args) {
  args = typeof args !== 'undefined' ? args : null;
  if (!this.mx_core_UIComponent_callLaterBead) {
    this.mx_core_UIComponent_callLaterBead = new org.apache.royale.core.CallLaterBead();
    this.addBead(this.mx_core_UIComponent_callLaterBead);
  }
  this.mx_core_UIComponent_callLaterBead.callLater(method, args, this);
};


/**
 *  Used by layout logic to validate the properties of a component
 *  by calling the <code>commitProperties()</code> method.
 *  In general, subclassers should
 *  override the <code>commitProperties()</code> method and not this method.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.validateProperties = function() {
  org.apache.royale.utils.Language.trace("validateProperties not implemented");
};


/**
 *  Processes the properties set on the component.
 *  This is an advanced method that you might override
 *  when creating a subclass of UIComponent.
 *
 *  <p>You do not call this method directly.
 *  Flex calls the <code>commitProperties()</code> method when you
 *  use the <code>addChild()</code> method to add a component to a container,
 *  or when you call the <code>invalidateProperties()</code> method of the component.
 *  Calls to the <code>commitProperties()</code> method occur before calls to the
 *  <code>measure()</code> method. This lets you set property values that might
 *  be used by the <code>measure()</code> method.</p>
 *
 *  <p>Some components have properties that affect the number or kinds
 *  of child objects that they need to create, or have properties that
 *  interact with each other, such as the <code>horizontalScrollPolicy</code>
 *  and <code>horizontalScrollPosition</code> properties.
 *  It is often best at startup time to process all of these
 *  properties at one time to avoid duplicating work.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.commitProperties = function() {
  org.apache.royale.utils.Language.trace("commitProperties not implemented");
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {boolean=} recursive
 */
mx.core.UIComponent.prototype.validateSize = function(recursive) {
  recursive = typeof recursive !== 'undefined' ? recursive : false;
  org.apache.royale.utils.Language.trace("validateSize not implemented");
};


/**
 *  Calculates the default size, and optionally the default minimum size,
 *  of the component. This is an advanced method that you might override when
 *  creating a subclass of UIComponent.
 *
 *  <p>You do not call this method directly. Flex calls the
 *  <code>measure()</code> method when the component is added to a container
 *  using the <code>addChild()</code> method, and when the component's
 *  <code>invalidateSize()</code> method is called. </p>
 *
 *  <p>When you set a specific height and width of a component,
 *  Flex does not call the <code>measure()</code> method,
 *  even if you explicitly call the <code>invalidateSize()</code> method.
 *  That is, Flex only calls the <code>measure()</code> method if
 *  the <code>explicitWidth</code> property or the <code>explicitHeight</code>
 *  property of the component is NaN. </p>
 *
 *  <p>In your override of this method, you must set the
 *  <code>measuredWidth</code> and <code>measuredHeight</code> properties
 *  to define the default size.
 *  You can optionally set the <code>measuredMinWidth</code> and
 *  <code>measuredMinHeight</code> properties to define the default
 *  minimum size.</p>
 *
 *  <p>Most components calculate these values based on the content they are
 *  displaying, and from the properties that affect content display.
 *  A few components simply have hard-coded default values. </p>
 *
 *  <p>The conceptual point of <code>measure()</code> is for the component to provide
 *  its own natural or intrinsic size as a default. Therefore, the
 *  <code>measuredWidth</code> and <code>measuredHeight</code> properties
 *  should be determined by factors such as:</p>
 *  <ul>
 *     <li>The amount of text the component needs to display.</li>
 *     <li>The styles, such as <code>fontSize</code>, for that text.</li>
 *     <li>The size of a JPEG image that the component displays.</li>
 *     <li>The measured or explicit sizes of the component's children.</li>
 *     <li>Any borders, margins, and gaps.</li>
 *  </ul>
 *
 *  <p>In some cases, there is no intrinsic way to determine default values.
 *  For example, a simple GreenCircle component might simply set
 *  measuredWidth = 100 and measuredHeight = 100 in its <code>measure()</code> method to
 *  provide a reasonable default size. In other cases, such as a TextArea,
 *  an appropriate computation (such as finding the right width and height
 *  that would just display all the text and have the aspect ratio of a Golden Rectangle)
 *  might be too time-consuming to be worthwhile.</p>
 *
 *  <p>The default implementation of <code>measure()</code>
 *  sets <code>measuredWidth</code>, <code>measuredHeight</code>,
 *  <code>measuredMinWidth</code>, and <code>measuredMinHeight</code>
 *  to <code>0</code>.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.measure = function() {
  this.measuredMinWidth = 0;
  this.measuredMinHeight = 0;
  this.measuredWidth = 0;
  this.measuredHeight = 0;
  
};


/**
 *  A convenience method for determining whether to use the
 *  explicit or measured width
 *
 *  @asreturn A Number which is explicitWidth if defined
 *  or measuredWidth if not.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @return {number}
 */
mx.core.UIComponent.prototype.getExplicitOrMeasuredWidth = function() {
  return !isNaN(this.explicitWidth) ? this.explicitWidth : this.measuredWidth;
};


/**
 *  A convenience method for determining whether to use the
 *  explicit or measured height
 *
 *  @asreturn A Number which is explicitHeight if defined
 *  or measuredHeight if not.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @return {number}
 */
mx.core.UIComponent.prototype.getExplicitOrMeasuredHeight = function() {
  return !isNaN(this.explicitHeight) ? this.explicitHeight : this.measuredHeight;
};


/**
 *  Measures the specified text, assuming that it is displayed
 *  in a single-line UITextField (or UIFTETextField) using a UITextFormat
 *  determined by the styles of this UIComponent.  Does not 
 *  work for Spark components since they don't use UITextField
 *  (or UIFTETextField).  To measure text in Spark components, 
 *  get the measurements of a spark.components.Label 
 *  or spark.components.RichText
 *
 *  @asparam text A String specifying the text to measure.
 *
 *  @asreturn A TextLineMetrics object containing the text measurements.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} text
 * @return {org.apache.royale.core.TextLineMetrics}
 */
mx.core.UIComponent.prototype.measureText = function(text) {
  var /** @type {mx.core.UITextFormat} */ uitf = new mx.core.UITextFormat(this.systemManager);
  return uitf.measureText(text);
};


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_lastUnscaledWidth;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_lastUnscaledHeight;


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.validateDisplayList = function() {
  org.apache.royale.utils.Language.trace("validateDisplayList not implemented");
};


/**
 *  Draws the object and/or sizes and positions its children.
 *  This is an advanced method that you might override
 *  when creating a subclass of UIComponent.
 *
 *  <p>You do not call this method directly. Flex calls the
 *  <code>updateDisplayList()</code> method when the component is added to a container
 *  using the <code>addChild()</code> method, and when the component's
 *  <code>invalidateDisplayList()</code> method is called. </p>
 *
 *  <p>If the component has no children, this method
 *  is where you would do programmatic drawing
 *  using methods on the component's Graphics object
 *  such as <code>graphics.drawRect()</code>.</p>
 *
 *  <p>If the component has children, this method is where
 *  you would call the <code>move()</code> and <code>setActualSize()</code>
 *  methods on its children.</p>
 *
 *  <p>Components can do programmatic drawing even if
 *  they have children. In doing either, use the
 *  component's <code>unscaledWidth</code> and <code>unscaledHeight</code>
 *  as its bounds.</p>
 *
 *  <p>It is important to use <code>unscaledWidth</code> and
 *  <code>unscaledHeight</code> instead of the <code>width</code>
 *  and <code>height</code> properties.</p>
 *
 *  @asparam unscaledWidth Specifies the width of the component, in pixels,
 *  in the component's coordinates, regardless of the value of the
 *  <code>scaleX</code> property of the component.
 *
 *  @asparam unscaledHeight Specifies the height of the component, in pixels,
 *  in the component's coordinates, regardless of the value of the
 *  <code>scaleY</code> property of the component.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {number} unscaledWidth
 * @param {number} unscaledHeight
 */
mx.core.UIComponent.prototype.updateDisplayList = function(unscaledWidth, unscaledHeight) {
  org.apache.royale.utils.Language.trace("updateDisplayList not implemented");
  this.invalidateDisplayListFlag = false;
};


/**
 * @export
 * @override
 */
mx.core.UIComponent.prototype.isWidthSizedToContent = function() {
  if (!isNaN(this._explicitWidth))
    return false;
  if (!isNaN(this.percentWidth))
    return false;
  var /** @type {*} */ left = org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "left");
  var /** @type {*} */ right = org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "right");
  if (typeof(left) === "string" && String(left).indexOf(":") != -1)
    left = undefined;
  if (typeof(right) === "string" && String(right).indexOf(":") != -1)
    right = undefined;
  if (left === undefined || right === undefined)
    return true;
  if (org.apache.royale.utils.Language.is(this.parent, mx.core.UIComponent))
    return org.apache.royale.utils.Language.as(this.parent, mx.core.UIComponent).isWidthSizedToContent();
  return false;
};


/**
 * @export
 * @override
 */
mx.core.UIComponent.prototype.isHeightSizedToContent = function() {
  if (!isNaN(this._explicitHeight))
    return false;
  if (!isNaN(this.percentHeight))
    return false;
  var /** @type {*} */ top = org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "top");
  var /** @type {*} */ bottom = org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "bottom");
  if (typeof(top) === "string" && String(top).indexOf(":") != -1)
    top = undefined;
  if (typeof(bottom) === "string" && String(bottom).indexOf(":") != -1)
    bottom = undefined;
  if (top === undefined || bottom === undefined)
    return true;
  if (org.apache.royale.utils.Language.is(this.parent, mx.core.UIComponent))
    return org.apache.royale.utils.Language.as(this.parent, mx.core.UIComponent).isHeightSizedToContent();
  return false;
};


/**
 * @private
 * @type {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__uid;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__contentMouseX;


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__contentMouseY;


/**
 *  Moves the component to a specified position within its parent.
 *  Calling this method is exactly the same as
 *  setting the component's <code>x</code> and <code>y</code> properties.
 *
 *  <p>If you are overriding the <code>updateDisplayList()</code> method
 *  in a custom component, call the <code>move()</code> method
 *  rather than setting the <code>x</code> and <code>y</code> properties.
 *  The difference is that the <code>move()</code> method changes the location
 *  of the component and then dispatches a <code>move</code> event when you
 *  call the method, while setting the <code>x</code> and <code>y</code>
 *  properties changes the location of the component and dispatches
 *  the event on the next screen refresh.</p>
 *
 *  @asparam x Left position of the component within its parent.
 *
 *  @asparam y Top position of the component within its parent.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {number} x
 * @param {number} y
 */
mx.core.UIComponent.prototype.move = function(x, y) {
  this.x = x;
  this.y = y;
};


/**
 *  Sizes the object.
 *  Unlike directly setting the <code>width</code> and <code>height</code>
 *  properties, calling the <code>setActualSize()</code> method
 *  does not set the <code>explictWidth</code> and
 *  <code>explicitHeight</code> properties, so a future layout
 *  calculation can result in the object returning to its previous size.
 *  This method is used primarily by component developers implementing
 *  the <code>updateDisplayList()</code> method, by Effects,
 *  and by the LayoutManager.
 *
 *  @asparam w Width of the object.
 *
 *  @asparam h Height of the object.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {number} w
 * @param {number} h
 */
mx.core.UIComponent.prototype.setActualSize = function(w, h) {
  this.setWidthAndHeight(w, h);
};


/**
 *  Sets the focus to this component.
 *  The component can in turn pass focus to a subcomponent.
 *
 *  <p><b>Note:</b> Only the TextInput and TextArea controls show a highlight
 *  when this method sets the focus.
 *  All controls show a highlight when the user tabs to the control.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.setFocus = function() {
  
  this.element.focus();
};


/**
 *  Deletes a style property from this component instance.
 *
 *  <p>This does not necessarily cause the <code>getStyle()</code> method
 *  to return <code>undefined</code>.</p>
 *
 *  @asparam styleProp The name of the style property.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} styleProp
 */
mx.core.UIComponent.prototype.clearStyle = function(styleProp) {
  this.setStyle(styleProp, undefined);
};


/**
 *  Gets a style property that has been set anywhere in this
 *  component's style lookup chain.
 *
 *  <p>This same method is used to get any kind of style property,
 *  so the value returned can be a Boolean, String, Number, int,
 *  uint (for an RGB color), Class (for a skin), or any kind of object.
 *  Therefore the return type is simply specified as ~~.</p>
 *
 *  <p>If you are getting a particular style property, you 
 *  know its type and often want to store the result in a
 *  variable of that type.
 *  No casting from ~~ to that type is necessary.</p>
 *
 *  <p>
 *  <code>
 *  var backgroundColor:uint = getStyle("backgroundColor");
 *  </code>
 *  </p>
 *
 *  <p>If the style property has not been set anywhere in the
 *  style lookup chain, the value returned by <code>getStyle()</code>
 *  is <code>undefined</code>.
 *  Note that <code>undefined</code> is a special value that is
 *  not the same as <code>false</code>, <code>""</code>,
 *  <code>NaN</code>, <code>0</code>, or <code>null</code>.
 *  No valid style value is ever <code>undefined</code>.
 *  You can use the method
 *  <code>IStyleManager2.isValidStyleValue()</code>
 *  to test whether the value was set.</p>
 *
 *  @asparam styleProp Name of the style property.
 *
 *  @asreturn Style value.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} styleProp
 * @return {*}
 */
mx.core.UIComponent.prototype.getStyle = function(styleProp) {
  var /** @type {*} */ value = org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, styleProp);
  if (value === undefined && typeof(this.mx_core_UIComponent__styleName) === "object")
    value = this.styleName.getStyle(styleProp);
  return value;
};


/**
 * @private
 * @type {number}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__backgroundAlpha = NaN;


/**
 * @private
 * @type {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__backgroundColor = null;


/**
 *  Sets a style property on this component instance.
 *
 *  <p>This can override a style that was set globally.</p>
 *
 *  <p>Calling the <code>setStyle()</code> method can result in decreased performance.
 *  Use it only when necessary.</p>
 *
 *  @asparam styleProp Name of the style property.
 *
 *  @asparam newValue New value for the style.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} styleProp
 * @param {*} newValue
 */
mx.core.UIComponent.prototype.setStyle = function(styleProp, newValue) {
  if (styleProp == "backgroundAlpha")
    this.mx_core_UIComponent__backgroundAlpha = Number(newValue); else {
    if (styleProp == "backgroundColor") {
      if (typeof(newValue) === 'number')
        this.mx_core_UIComponent__backgroundColor = org.apache.royale.utils.CSSUtils.attributeFromColor((newValue) >>> 0);
      else
        this.mx_core_UIComponent__backgroundColor = String(newValue);
    }
    if (!this.style)
      this.style = new mx.core.FlexCSSStyles();
    this.style[styleProp] = newValue;
    if (this.initialized) {
      org.apache.royale.core.ValuesManager["valuesImpl"].applyStyles(this, this.style);
    }
  }
  if (!isNaN(this.mx_core_UIComponent__backgroundAlpha) && this.mx_core_UIComponent__backgroundColor !== null) {
    var /** @type {number} */ red = parseInt("0x" + this.mx_core_UIComponent__backgroundColor.substring(1, 3), undefined);
    var /** @type {number} */ green = parseInt("0x" + this.mx_core_UIComponent__backgroundColor.substring(3, 5), undefined);
    var /** @type {number} */ blue = parseInt("0x" + this.mx_core_UIComponent__backgroundColor.substring(5, 7), undefined);
    var /** @type {string} */ rgba = "rgba(" + red + "," + green + "," + blue + "," + this.mx_core_UIComponent__backgroundAlpha + ")";
    org.apache.royale.utils.Language.as(this.element, HTMLElement).style['backgroundColor'] = rgba;
  }
};


/**
 *  The event handler called for a <code>keyDown</code> event.
 *  If you override this method, make sure to call the base class version.
 *
 *  @asparam event The event object.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.events.KeyboardEvent} event
 */
mx.core.UIComponent.prototype.keyDownHandler = function(event) {
};


/**
 *  The event handler called for a <code>keyUp</code> event.
 *  If you override this method, make sure to call the base class version.
 *
 *  @asparam event The event object.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.events.KeyboardEvent} event
 */
mx.core.UIComponent.prototype.keyUpHandler = function(event) {
};


/**
 *  Returns <code>true</code> if the chain of <code>owner</code> properties
 *  points from <code>child</code> to this UIComponent.
 *
 *  @asparam child A UIComponent.
 *
 *  @asreturn <code>true</code> if the child is parented or owned by this UIComponent.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} child
 * @return {boolean}
 */
mx.core.UIComponent.prototype.owns = function(child) {
  org.apache.royale.utils.Language.trace("owns not implemented");
  return true;
};


/**
 *  Same as visible setter but does not dispatch events
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {boolean} value
 */
mx.core.UIComponent.prototype.setVisible = function(value) {
  var /** @type {boolean} */ oldValue = (!this.positioner.style.visibility) || this.positioner.style.visibility == 'visible';
  if (Boolean(value) !== oldValue) {
    if (!value) {
      this.positioner.style.visibility = 'hidden';
    } else {
      this.positioner.style.visibility = 'visible';
    }
  }
  
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getPreferredBoundsWidth = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getPreferredBoundsWidth(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getPreferredBoundsHeight = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getPreferredBoundsHeight(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getMinBoundsWidth = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getMinBoundsWidth(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getMinBoundsHeight = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getMinBoundsHeight(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getMaxBoundsWidth = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getMaxBoundsWidth(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getMaxBoundsHeight = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getMaxBoundsHeight(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {number} width
 * @param {number} height
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getBoundsXAtSize = function(width, height, postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getBoundsXAtSize(this, width, height);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {number} width
 * @param {number} height
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getBoundsYAtSize = function(width, height, postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getBoundsYAtSize(this, width, height);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getLayoutBoundsWidth = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getLayoutBoundsWidth(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getLayoutBoundsHeight = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getLayoutBoundsHeight(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getLayoutBoundsX = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getLayoutBoundsX(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {boolean=} postLayoutTransform
 * @return {number}
 */
mx.core.UIComponent.prototype.getLayoutBoundsY = function(postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  return mx.core.LayoutElementUIComponentUtils.getLayoutBoundsY(this);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {number} x
 * @param {number} y
 * @param {boolean=} postLayoutTransform
 */
mx.core.UIComponent.prototype.setLayoutBoundsPosition = function(x, y, postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  mx.core.LayoutElementUIComponentUtils.setLayoutBoundsPosition(this, x, y);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {number} width
 * @param {number} height
 * @param {boolean=} postLayoutTransform
 */
mx.core.UIComponent.prototype.setLayoutBoundsSize = function(width, height, postLayoutTransform) {
  postLayoutTransform = typeof postLayoutTransform !== 'undefined' ? postLayoutTransform : true;
  mx.core.LayoutElementUIComponentUtils.setLayoutBoundsSize(this, width, height);
};


/** 
 *  Helper method for dispatching a PropertyChangeEvent
 *  when a property is updated.
 * 
 *  @asparam prop Name of the property that changed.
 *
 *  @asparam oldValue Old value of the property.
 *
 *  @asparam value New value of the property.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} prop
 * @param {*} oldValue
 * @param {*} value
 */
mx.core.UIComponent.prototype.dispatchPropertyChangeEvent = function(prop, oldValue, value) {
  if (this.hasEventListener("propertyChange"))
    this.dispatchEvent(mx.events.PropertyChangeEvent.createUpdateEvent(this, prop, oldValue, value));
};


/**
 * @private
 * @type {org.apache.royale.effects.IEffect}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__rollOverEffect;


/**
 * @private
 * @type {org.apache.royale.effects.IEffect}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__rollOutEffect;


/**
 * @private
 * @type {org.apache.royale.effects.IEffect}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__mouseDownEffect;


/**
 * @private
 * @type {org.apache.royale.effects.IEffect}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__mouseUpEffect;


/**
 * @private
 * @type {org.apache.royale.effects.IEffect}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__hideEffect;


/**
 * @private
 * @type {org.apache.royale.effects.IEffect}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__showEffect;


/**
 *  Creates a new object using a context
 *  based on the embedded font being used.
 *
 *  <p>This method is used to solve a problem
 *  with access to fonts embedded  in an application SWF
 *  when the framework is loaded as an RSL
 *  (the RSL has its own SWF context).
 *  Embedded fonts can only be accessed from the SWF file context
 *  in which they were created.
 *  By using the context of the application SWF,
 *  the RSL can create objects in the application SWF context
 *  that has access to the application's  embedded fonts.</p>
 *
 *  <p>Call this method only after the font styles
 *  for this object are set.</p>
 *
 *  @asparam class The class to create.
 *
 *  @asreturn The instance of the class created in the context
 *  of the SWF owning the embedded font.
 *  If this object is not using an embedded font,
 *  the class is created in the context of this object.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {Object} classObj
 * @return {Object}
 */
mx.core.UIComponent.prototype.createInFontContext = function(classObj) {
  return new classObj();
};


/**
 *  Flex calls the <code>stylesInitialized()</code> method when
 *  the styles for a component are first initialized.
 *
 *  <p>This is an advanced method that you might override
 *  when creating a subclass of UIComponent. Flex guarantees that
 *  your component's styles are fully initialized before
 *  the first time your component's <code>measure</code> and
 *  <code>updateDisplayList</code> methods are called.  For most
 *  components, that is sufficient. But if you need early access to
 *  your style values, you can override the stylesInitialized() function
 *  to access style properties as soon as they are initialized the first time.</p>
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.UIComponent.prototype.stylesInitialized = function() {
};


/**
 * @private
 * @type {Array}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_errorArray;


/**
 * @private
 * @type {Array}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent_errorObjectArray = null;


/**
 * @private
 * @type {string}
 */
mx.core.UIComponent.prototype.mx_core_UIComponent__validationSubField;


/**
 *  Handles both the <code>valid</code> and <code>invalid</code> events from a
 *  validator assigned to this component.
 *
 *  <p>You typically handle the <code>valid</code> and <code>invalid</code> events
 *  dispatched by a validator by assigning event listeners to the validators.
 *  If you want to handle validation events directly in the component that is being validated,
 *  you can override this method to handle the <code>valid</code>
 *  and <code>invalid</code> events. You typically call
 *  <code>super.validationResultHandler(event)</code> in your override.</p>
 *
 *  @asparam event The event object for the validation.
 *
 *  @see mx.events.ValidationResultEvent
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.events.ValidationResultEvent} event
 */
mx.core.UIComponent.prototype.validationResultHandler = function(event) {
  if (this.mx_core_UIComponent_errorObjectArray === null) {
    this.mx_core_UIComponent_errorObjectArray = [];
    this.mx_core_UIComponent_errorArray = [];
  }
  var /** @type {number} */ validatorIndex = (this.mx_core_UIComponent_errorObjectArray.indexOf(event.target)) >> 0;
  if (event.type == mx.events.ValidationResultEvent.VALID) {
    if (validatorIndex != -1) {
      this.mx_core_UIComponent_errorObjectArray.splice(validatorIndex, 1);
      this.mx_core_UIComponent_errorArray.splice(validatorIndex, 1);
      this.errorString = this.mx_core_UIComponent_errorArray.join("\n");
      if (this.mx_core_UIComponent_errorArray.length == 0)
        this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.VALID));
    }
  } else {
    var /** @type {string} */ msg;
    var /** @type {mx.validators.ValidationResult} */ result;
    if (this.validationSubField != null && this.validationSubField != "" && event.results) {
      for (var /** @type {number} */ i = 0; i < event.results.length; i++) {
        result = event.results[i];
        if (result.subField == this.validationSubField) {
          if (result.isError) {
            msg = result.errorMessage;
          } else {
            if (validatorIndex != -1) {
              this.mx_core_UIComponent_errorObjectArray.splice(validatorIndex, 1);
              this.mx_core_UIComponent_errorArray.splice(validatorIndex, 1);
              this.errorString = this.mx_core_UIComponent_errorArray.join("\n");
              if (this.mx_core_UIComponent_errorArray.length == 0)
                this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.VALID));
            }
          }
          break;
        }
      }
    } else if (event.results && event.results.length > 0) {
      msg = org.apache.royale.utils.Language.string(event.results[0].errorMessage);
    }
    if (msg && validatorIndex != -1) {
      this.mx_core_UIComponent_errorArray[validatorIndex] = msg;
      this.errorString = this.mx_core_UIComponent_errorArray.join("\n");
      this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.INVALID));
    } else if (msg && validatorIndex == -1) {
      this.mx_core_UIComponent_errorObjectArray.push(event.target);
      this.mx_core_UIComponent_errorArray.push(msg);
      this.errorString = this.mx_core_UIComponent_errorArray.join("\n");
      this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.INVALID));
    }
  }
};


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.core.IUIBase} child
 */
mx.core.UIComponent.prototype.http_$$www_adobe_com$2006$flex$mx$internal__addingChild = function(child) {
  if (org.apache.royale.utils.Language.is(child, mx.core.IUIComponent) && !org.apache.royale.utils.Language.as(child, mx.core.IUIComponent, true).mxmlDocument) {
    org.apache.royale.utils.Language.as(child, mx.core.IUIComponent, true).mxmlDocument = this.mxmlDocument ? this.mxmlDocument : mx.core.FlexGlobals.topLevelApplication;
  }
  if (org.apache.royale.utils.Language.is(child, mx.core.IFlexModule) && org.apache.royale.utils.Language.as(child, mx.core.IFlexModule, true).moduleFactory == null) {
    if (this.moduleFactory != null)
      org.apache.royale.utils.Language.as(child, mx.core.IFlexModule, true).moduleFactory = this.moduleFactory;
    else if (org.apache.royale.utils.Language.is(this.mxmlDocument, mx.core.IFlexModule) && this.mxmlDocument.moduleFactory != null)
      org.apache.royale.utils.Language.as(child, mx.core.IFlexModule, true).moduleFactory = this.mxmlDocument.moduleFactory;
    else if (org.apache.royale.utils.Language.is(this.parent, mx.core.IFlexModule) && org.apache.royale.utils.Language.as(this.parent, mx.core.IFlexModule, true).moduleFactory != null)
      org.apache.royale.utils.Language.as(child, mx.core.IFlexModule, true).moduleFactory = org.apache.royale.utils.Language.as(this.parent, mx.core.IFlexModule, true).moduleFactory;
  }
  if (org.apache.royale.utils.Language.is(child, mx.core.IUIComponent))
    org.apache.royale.utils.Language.as(child, mx.core.IUIComponent, true).systemManager = this.systemManager;
};


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.core.IUIBase} child
 */
mx.core.UIComponent.prototype.http_$$www_adobe_com$2006$flex$mx$internal__childAdded = function(child) {
};


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.core.IUIBase} child
 */
mx.core.UIComponent.prototype.http_$$www_adobe_com$2006$flex$mx$internal__removingChild = function(child) {
};


/**
 *  @asprivate
 * @export
 * @param {org.apache.royale.core.IUIBase} child
 */
mx.core.UIComponent.prototype.http_$$www_adobe_com$2006$flex$mx$internal__childRemoved = function(child) {
  if (org.apache.royale.utils.Language.is(child, mx.core.IUIComponent)) {
    if (org.apache.royale.utils.Language.as(child, mx.core.IUIComponent, true).mxmlDocument != child)
      org.apache.royale.utils.Language.as(child, mx.core.IUIComponent, true).mxmlDocument = null;
  }
};


/**
 * @export
 * @override
 */
mx.core.UIComponent.prototype.addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  this.http_$$www_adobe_com$2006$flex$mx$internal__addingChild(org.apache.royale.utils.Language.as(c, org.apache.royale.core.IUIBase));
  mx.core.UIComponent.superClass_.addElement.apply(this, [ c, dispatchEvent] );
  this.http_$$www_adobe_com$2006$flex$mx$internal__childAdded(org.apache.royale.utils.Language.as(c, org.apache.royale.core.IUIBase));
};


/**
 * @export
 * @override
 */
mx.core.UIComponent.prototype.addElementAt = function(c, index, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  this.http_$$www_adobe_com$2006$flex$mx$internal__addingChild(org.apache.royale.utils.Language.as(c, org.apache.royale.core.IUIBase));
  mx.core.UIComponent.superClass_.addElementAt.apply(this, [ c, index, dispatchEvent] );
  this.http_$$www_adobe_com$2006$flex$mx$internal__childAdded(org.apache.royale.utils.Language.as(c, org.apache.royale.core.IUIBase));
};


/**
 * @export
 * @override
 */
mx.core.UIComponent.prototype.removeElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  this.http_$$www_adobe_com$2006$flex$mx$internal__removingChild(org.apache.royale.utils.Language.as(c, org.apache.royale.core.IUIBase));
  mx.core.UIComponent.superClass_.removeElement.apply(this, [ c, dispatchEvent] );
  this.http_$$www_adobe_com$2006$flex$mx$internal__childRemoved(org.apache.royale.utils.Language.as(c, org.apache.royale.core.IUIBase));
};


/**
 * @export
 * @override
 */
mx.core.UIComponent.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  opt_capture = typeof opt_capture !== 'undefined' ? opt_capture : false;
  opt_handlerScope = typeof opt_handlerScope !== 'undefined' ? opt_handlerScope : null;
  if (type == "keyDown")
    type = "keydown";
  else if (type == "keyUp")
    type = "keyup";
  else if (type == "focusIn")
    type = "focusin";
  else if (type == "focusOut")
    type = "focusout";
  mx.core.UIComponent.superClass_.addEventListener.apply(this, [ type, handler, opt_capture, opt_handlerScope] );
};


/**
 * @export
 * @override
 */
mx.core.UIComponent.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  opt_capture = typeof opt_capture !== 'undefined' ? opt_capture : false;
  opt_handlerScope = typeof opt_handlerScope !== 'undefined' ? opt_handlerScope : null;
  if (type == "keyDown")
    type = "keydown";
  else if (type == "keyUp")
    type = "keyup";
  else if (type == "focusIn")
    type = "focusin";
  else if (type == "focusOut")
    type = "focusout";
  mx.core.UIComponent.superClass_.removeEventListener.apply(this, [ type, handler, opt_capture, opt_handlerScope] );
};


mx.core.UIComponent.prototype.get__maintainAspectRatio = function() {
  return true;
};


mx.core.UIComponent.prototype.set__maintainAspectRatio = function(value) {
};


mx.core.UIComponent.prototype.get__chromeColor = function() {
  return this.mx_core_UIComponent__chromeColor;
};


mx.core.UIComponent.prototype.set__chromeColor = function(value) {
  this.mx_core_UIComponent__chromeColor = value;
};


mx.core.UIComponent.prototype.get__mouseFocusEnabled = function() {
  return false;
};


mx.core.UIComponent.prototype.set__mouseFocusEnabled = function(value) {
};


mx.core.UIComponent.prototype.get__initialized = function() {
  return this.mx_core_UIComponent__initialized;
};


mx.core.UIComponent.prototype.set__initialized = function(value) {
  this.mx_core_UIComponent__initialized = value;
  if (value) {
    this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.CREATION_COMPLETE));
  }
};


mx.core.UIComponent.prototype.get__graphics = function() {
  if (this.mx_core_UIComponent__graphics == null)
    this.mx_core_UIComponent__graphics = new mx.display.Graphics(this);
  return this.mx_core_UIComponent__graphics;
};


mx.core.UIComponent.prototype.get__royalegraphics = function() {
  if (this.mx_core_UIComponent__graphics == null)
    this.mx_core_UIComponent__graphics = new mx.display.Graphics(this);
  return this.mx_core_UIComponent__graphics;
};


mx.core.UIComponent.prototype.get__mask = function() {
  return this.mx_core_UIComponent__mask;
};


mx.core.UIComponent.prototype.set__mask = function(value) {
};


mx.core.UIComponent.prototype.get__rotation = function() {
  return this.mx_core_UIComponent__rotation;
};


mx.core.UIComponent.prototype.set__rotation = function(value) {
  this.mx_core_UIComponent__rotation = value;
  this.element.style.transform = this.mx_core_UIComponent_computeTransformString();
  this.element.style["transform-origin-x"] = "0px";
  this.element.style["transform-origin-y"] = "0px";
};


mx.core.UIComponent.prototype.get__name = function() {
  return this.mx_core_UIComponent__name;
};


mx.core.UIComponent.prototype.set__name = function(value) {
  this.mx_core_UIComponent__name = value;
};


mx.core.UIComponent.prototype.get__baselinePosition = function() {
  return 0;
};


mx.core.UIComponent.prototype.get__tabChildren = function() {
  return false;
};


mx.core.UIComponent.prototype.set__tabChildren = function(value) {
};


mx.core.UIComponent.prototype.get__accessibilityEnabled = function() {
  return this.mx_core_UIComponent__accessibilityEnabled;
};


mx.core.UIComponent.prototype.set__accessibilityEnabled = function(value) {
  this.mx_core_UIComponent__accessibilityEnabled = value;
};


mx.core.UIComponent.prototype.get__useHandCursor = function() {
  org.apache.royale.utils.Language.trace("useHandCursor not implemented");
  return false;
};


mx.core.UIComponent.prototype.set__useHandCursor = function(value) {
  org.apache.royale.utils.Language.trace("useHandCursor not implemented");
};


mx.core.UIComponent.prototype.get__mouseEnabled = function() {
  org.apache.royale.utils.Language.trace("mouseEnabled not implemented");
  return false;
};


mx.core.UIComponent.prototype.set__mouseEnabled = function(value) {
  org.apache.royale.utils.Language.trace("mouseEnabled not implemented");
};


mx.core.UIComponent.prototype.get__mouseChildren = function() {
  org.apache.royale.utils.Language.trace("mouseChildren not implemented");
  return false;
};


mx.core.UIComponent.prototype.set__mouseChildren = function(value) {
  org.apache.royale.utils.Language.trace("mouseChildren not implemented");
};


mx.core.UIComponent.prototype.get__buttonMode = function() {
  org.apache.royale.utils.Language.trace("buttonMode not implemented");
  return false;
};


mx.core.UIComponent.prototype.set__buttonMode = function(value) {
  org.apache.royale.utils.Language.trace("buttonMode not implemented");
};


mx.core.UIComponent.prototype.get__errorString = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal___errorString;
};


mx.core.UIComponent.prototype.set__errorString = function(value) {
  if (value == this.http_$$www_adobe_com$2006$flex$mx$internal___errorString)
    return;
  this.mx_core_UIComponent_oldErrorString = this.http_$$www_adobe_com$2006$flex$mx$internal___errorString;
  this.http_$$www_adobe_com$2006$flex$mx$internal___errorString = value;
  this.toolTip = value;
  if (this.mx_core_UIComponent__toolTipBead)
    this.mx_core_UIComponent__toolTipBead.isError = value != null && value != "";
  this.mx_core_UIComponent_setBorderColorForErrorString();
  this.dispatchEvent(new org.apache.royale.events.Event("errorStringChanged"));
};


mx.core.UIComponent.prototype.get__owner = function() {
  return this.mx_core_UIComponent__owner ? this.mx_core_UIComponent__owner : this.parent;
};


mx.core.UIComponent.prototype.set__owner = function(value) {
  this.mx_core_UIComponent__owner = value;
};


mx.core.UIComponent.prototype.get__doubleClickEnabled = function() {
  org.apache.royale.utils.Language.trace("doubleClickEnabled not implemented");
  return false;
};


mx.core.UIComponent.prototype.set__doubleClickEnabled = function(value) {
  org.apache.royale.utils.Language.trace("doubleClickEnabled not implemented");
};


mx.core.UIComponent.prototype.get__enabled = function() {
  return this.mx_core_UIComponent__enabled;
};


mx.core.UIComponent.prototype.set__enabled = function(value) {
  this.mx_core_UIComponent__enabled = value;
  if (this.mx_core_UIComponent__disableBead == null) {
    this.mx_core_UIComponent__disableBead = new org.apache.royale.html.beads.DisableBead();
    this.addBead(this.mx_core_UIComponent__disableBead);
    this.addBead(new org.apache.royale.html.beads.DisabledAlphaBead());
  }
  this.mx_core_UIComponent__disableBead.disabled = !this.mx_core_UIComponent__enabled;
};


mx.core.UIComponent.prototype.get__focusEnabled = function() {
  return this.mx_core_UIComponent__focusEnabled;
};


mx.core.UIComponent.prototype.set__focusEnabled = function(value) {
  this.mx_core_UIComponent__focusEnabled = value;
};


mx.core.UIComponent.prototype.get__hasFocusableChildren = function() {
  return this.mx_core_UIComponent__hasFocusableChildren;
};


mx.core.UIComponent.prototype.set__hasFocusableChildren = function(value) {
  if (value != this.mx_core_UIComponent__hasFocusableChildren) {
    this.mx_core_UIComponent__hasFocusableChildren = value;
    this.dispatchEvent(new org.apache.royale.events.Event("hasFocusableChildrenChange"));
  }
};


mx.core.UIComponent.prototype.get__tabEnabled = function() {
  return this.mx_core_UIComponent__tabEnabled;
};


mx.core.UIComponent.prototype.set__tabEnabled = function(value) {
  this.mx_core_UIComponent__tabEnabled = value;
};


mx.core.UIComponent.prototype.get__tabFocusEnabled = function() {
  return this.mx_core_UIComponent__tabFocusEnabled;
};


mx.core.UIComponent.prototype.set__tabFocusEnabled = function(value) {
  if (value != this.mx_core_UIComponent__tabFocusEnabled) {
    this.mx_core_UIComponent__tabFocusEnabled = value;
    this.dispatchEvent(new org.apache.royale.events.Event("tabFocusEnabledChange"));
  }
};


mx.core.UIComponent.prototype.get__tabIndex = function() {
  return (this.element.tabIndex) >> 0;
};


mx.core.UIComponent.prototype.set__tabIndex = function(value) {
  this.element.tabIndex = value;
};


mx.core.UIComponent.prototype.get__cacheAsBitmap = function() {
  org.apache.royale.utils.Language.trace("cacheAsBitmap not implemented");
  return false;
};


mx.core.UIComponent.prototype.set__cacheAsBitmap = function(value) {
  org.apache.royale.utils.Language.trace("cacheAsBitmap not implemented");
};


mx.core.UIComponent.prototype.get__filters = function() {
  return this.mx_core_UIComponent__filters;
};


mx.core.UIComponent.prototype.set__filters = function(value) {
  org.apache.royale.utils.Language.trace("filters not implemented");
};


mx.core.UIComponent.prototype.get__cursorManager = function() {
  org.apache.royale.utils.Language.trace("cursorManager not implemented");
  return null;
};


mx.core.UIComponent.prototype.get__focusManager = function() {
  if (this.mx_core_UIComponent__focusManager)
    return this.mx_core_UIComponent__focusManager;
  var /** @type {org.apache.royale.core.IUIBase} */ o = org.apache.royale.utils.Language.as(this.parent, org.apache.royale.core.IUIBase);
  while (o) {
    if (org.apache.royale.utils.Language.is(o, mx.managers.IFocusManagerContainer))
      return org.apache.royale.utils.Language.as(o, mx.managers.IFocusManagerContainer, true).focusManager;
    o = org.apache.royale.utils.Language.as(o.parent, org.apache.royale.core.IUIBase);
  }
  return null;
};


mx.core.UIComponent.prototype.set__focusManager = function(value) {
  this.mx_core_UIComponent__focusManager = value;
};


mx.core.UIComponent.prototype.get__resourceManager = function() {
  return this.mx_core_UIComponent__resourceManager;
};


mx.core.UIComponent.prototype.get__styleManager = function() {
  if (!this.mx_core_UIComponent__styleManager)
    this.mx_core_UIComponent__styleManager = mx.styles.StyleManager.getStyleManager(this.moduleFactory);
  return this.mx_core_UIComponent__styleManager;
};


mx.core.UIComponent.prototype.get__systemManager = function() {
  if (this.mx_core_UIComponent__systemManager == null && this.parent != null && org.apache.royale.utils.Language.is(this.parent, mx.core.UIComponent))
    this.mx_core_UIComponent__systemManager = org.apache.royale.utils.Language.as(this.parent, mx.core.UIComponent).systemManager;
  return this.mx_core_UIComponent__systemManager;
};


mx.core.UIComponent.prototype.set__systemManager = function(value) {
  this.mx_core_UIComponent__systemManager = value;
};


mx.core.UIComponent.prototype.get__stage = function() {
  org.apache.royale.utils.Language.trace("stage not implemented");
  return null;
};


mx.core.UIComponent.prototype.get__moduleFactory = function() {
  return this.mx_core_UIComponent__moduleFactory;
};


mx.core.UIComponent.prototype.set__moduleFactory = function(factory) {
  var /** @type {number} */ n = this.numChildren;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    var /** @type {mx.core.IFlexModule} */ child = org.apache.royale.utils.Language.as(this.getChildAt(i), mx.core.IFlexModule);
    if (!child)
      continue;
    if (child == this)
      continue;
    if (child.moduleFactory == null || child.moduleFactory == this.mx_core_UIComponent__moduleFactory) {
      child.moduleFactory = factory;
    }
  }
  this.mx_core_UIComponent__moduleFactory = factory;
};


mx.core.UIComponent.prototype.get__mxmlDocument = function() {
  if (!this._mxmlDocument && this.MXMLDescriptor != null)
    this._mxmlDocument = this;
  return this._mxmlDocument;
};


mx.core.UIComponent.prototype.set__mxmlDocument = function(value) {
  var /** @type {number} */ n = this.numChildren;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    var /** @type {mx.core.IUIComponent} */ child = org.apache.royale.utils.Language.as(this.getChildAt(i), mx.core.IUIComponent);
    if (!child)
      continue;
    if (child == this)
      continue;
    if (child.mxmlDocument == this._mxmlDocument || child.mxmlDocument == mx.core.FlexGlobals.topLevelApplication) {
      child.mxmlDocument = value;
    }
  }
  this._mxmlDocument = value;
};


mx.core.UIComponent.prototype.get__parentApplication = function() {
  var /** @type {Object} */ o = this.systemManager.mxmlDocument;
  if (o == this) {
    var /** @type {mx.core.UIComponent} */ p = org.apache.royale.utils.Language.as(o.systemManager.parent, mx.core.UIComponent);
    o = p ? p.systemManager.mxmlDocument : null;
  }
  return o;
};


mx.core.UIComponent.prototype.get__parentMxmlDocument = function() {
  if (this.mxmlDocument == this) {
    var /** @type {mx.core.IUIComponent} */ p = org.apache.royale.utils.Language.as(this.parent, mx.core.IUIComponent);
    if (p)
      return p.mxmlDocument;
    var /** @type {mx.managers.ISystemManager} */ sm = org.apache.royale.utils.Language.as(this.parent, mx.managers.ISystemManager);
    if (sm)
      return sm.mxmlDocument;
    return null;
  } else {
    return this.mxmlDocument;
  }
};


mx.core.UIComponent.prototype.get__measuredMinWidth = function() {
  return this.mx_core_UIComponent__measuredMinWidth;
};


mx.core.UIComponent.prototype.set__measuredMinWidth = function(value) {
  this.mx_core_UIComponent__measuredMinWidth = value;
};


mx.core.UIComponent.prototype.get__measuredMinHeight = function() {
  return this.mx_core_UIComponent__measuredMinHeight;
};


mx.core.UIComponent.prototype.set__measuredMinHeight = function(value) {
  this.mx_core_UIComponent__measuredMinHeight = value;
};


mx.core.UIComponent.prototype.get__measuredWidth = function() {
  
  if (isNaN(this._measuredWidth) || this._measuredWidth <= 0) {
    var /** @type {Object} */ oldWidth;
    var /** @type {string} */ oldLeft;
    var /** @type {string} */ oldRight;
    oldWidth = this.positioner.style.width;
    oldLeft = this.positioner.style.left;
    oldRight = this.positioner.style.right;
    if (oldWidth.length)
      this.positioner.style.width = "";
    if (oldLeft.length && oldRight.length)
      return 0;
    var /** @type {number} */ mw = this.positioner.offsetWidth;
    if (mw == 0 && this.numChildren > 0) {
      for (var /** @type {number} */ i = 0; i < this.numChildren; i++) {
        var /** @type {mx.core.IUIComponent} */ child = this.getChildAt(i);
        if (child)
          mw = Math.max(mw, child.getExplicitOrMeasuredWidth());
      }
    }
    if (oldWidth.length)
      this.positioner.style.width = oldWidth;
    if (oldLeft.length && oldRight.length)
      this.positioner.style.left = oldLeft;
    if (!isNaN(this.percentWidth))
      this.mx_core_UIComponent__measuredMinWidth = mw;
    return mw;
  }
  return this._measuredWidth;
};


mx.core.UIComponent.prototype.set__measuredWidth = function(value) {
  this._measuredWidth = value;
};


mx.core.UIComponent.prototype.get__measuredHeight = function() {
  
  if (isNaN(this._measuredHeight) || this._measuredHeight <= 0) {
    var /** @type {Object} */ oldHeight;
    var /** @type {string} */ oldTop;
    var /** @type {string} */ oldBottom;
    oldTop = this.positioner.style.top;
    oldBottom = this.positioner.style.bottom;
    oldHeight = this.positioner.style.height;
    if (oldHeight.length)
      this.positioner.style.height = "";
    if (oldTop.length && oldBottom.length)
      return 0;
    var /** @type {number} */ mh = this.positioner.offsetHeight;
    if (mh == 0 && this.numChildren > 0) {
      for (var /** @type {number} */ i = 0; i < this.numChildren; i++) {
        var /** @type {mx.core.IUIComponent} */ child = this.getChildAt(i);
        if (child)
          mh = Math.max(mh, child.getExplicitOrMeasuredHeight());
      }
    }
    if (oldHeight.length)
      this.positioner.style.height = oldHeight;
    if (oldTop.length && oldBottom.length)
      this.positioner.style.top = oldTop;
    if (!isNaN(this.percentHeight))
      this.mx_core_UIComponent__measuredMinHeight = mh;
    return mh;
  }
  return this._measuredHeight;
};


mx.core.UIComponent.prototype.set__measuredHeight = function(value) {
  this._measuredHeight = value;
};


mx.core.UIComponent.prototype.get__percentWidth = function() {
  return mx.core.UIComponent.superClass_.get__percentWidth.apply(this);
};


mx.core.UIComponent.prototype.set__percentWidth = function(value) {
  mx.core.UIComponent.superClass_.set__percentWidth.apply(this, [ value] );
  this.invalidateParentSizeAndDisplayList();
};


mx.core.UIComponent.prototype.get__percentHeight = function() {
  return mx.core.UIComponent.superClass_.get__percentHeight.apply(this);
};


mx.core.UIComponent.prototype.set__percentHeight = function(value) {
  mx.core.UIComponent.superClass_.set__percentHeight.apply(this, [ value] );
  this.invalidateParentSizeAndDisplayList();
};


mx.core.UIComponent.prototype.get__minWidth = function() {
  if (!isNaN(this.explicitMinWidth))
    return this.explicitMinWidth;
  return this.measuredMinWidth;
};


mx.core.UIComponent.prototype.set__minWidth = function(value) {
  if (this.explicitMinWidth == value)
    return;
  this.explicitMinWidth = value;
};


mx.core.UIComponent.prototype.get__minHeight = function() {
  if (!isNaN(this.explicitMinHeight))
    return this.explicitMinHeight;
  return this.measuredMinHeight;
};


mx.core.UIComponent.prototype.set__minHeight = function(value) {
  if (this.explicitMinHeight == value)
    return;
  this.explicitMinHeight = value;
};


mx.core.UIComponent.prototype.get__maxWidth = function() {
  return !isNaN(this.explicitMaxWidth) ? this.explicitMaxWidth : mx.core.UIComponent.DEFAULT_MAX_WIDTH;
};


mx.core.UIComponent.prototype.set__maxWidth = function(value) {
  if (this.explicitMaxWidth == value)
    return;
  this.explicitMaxWidth = value;
};


mx.core.UIComponent.prototype.get__maxHeight = function() {
  return !isNaN(this.explicitMaxHeight) ? this.explicitMaxHeight : mx.core.UIComponent.DEFAULT_MAX_HEIGHT;
};


mx.core.UIComponent.prototype.set__maxHeight = function(value) {
  if (this.explicitMaxHeight == value)
    return;
  this.explicitMaxHeight = value;
};


mx.core.UIComponent.prototype.get__explicitMinWidth = function() {
  return this._explicitMinWidth;
};


mx.core.UIComponent.prototype.set__explicitMinWidth = function(value) {
  if (this._explicitMinWidth == value)
    return;
  this._explicitMinWidth = value;
  this.invalidateSize();
  this.invalidateParentSizeAndDisplayList();
  this.dispatchEvent(new org.apache.royale.events.Event("explicitMinWidthChanged"));
};


mx.core.UIComponent.prototype.get__explicitMinHeight = function() {
  return this.mx_core_UIComponent__explicitMinHeight;
};


mx.core.UIComponent.prototype.set__explicitMinHeight = function(value) {
  if (this.mx_core_UIComponent__explicitMinHeight == value)
    return;
  this.mx_core_UIComponent__explicitMinHeight = value;
  this.invalidateSize();
  this.invalidateParentSizeAndDisplayList();
  this.dispatchEvent(new org.apache.royale.events.Event("explicitMinHeightChanged"));
};


mx.core.UIComponent.prototype.get__explicitMaxWidth = function() {
  return this.mx_core_UIComponent__explicitMaxWidth;
};


mx.core.UIComponent.prototype.set__explicitMaxWidth = function(value) {
  if (this.mx_core_UIComponent__explicitMaxWidth == value)
    return;
  this.mx_core_UIComponent__explicitMaxWidth = value;
  this.invalidateSize();
  this.invalidateParentSizeAndDisplayList();
  this.dispatchEvent(new org.apache.royale.events.Event("explicitMaxWidthChanged"));
};


mx.core.UIComponent.prototype.get__explicitMaxHeight = function() {
  return this.mx_core_UIComponent__explicitMaxHeight;
};


mx.core.UIComponent.prototype.set__explicitMaxHeight = function(value) {
  if (this.mx_core_UIComponent__explicitMaxHeight == value)
    return;
  this.mx_core_UIComponent__explicitMaxHeight = value;
  this.invalidateSize();
  this.invalidateParentSizeAndDisplayList();
  this.dispatchEvent(new org.apache.royale.events.Event("explicitMaxHeightChanged"));
};


mx.core.UIComponent.prototype.get__scaleX = function() {
  return this.mx_core_UIComponent__scaleX;
};


mx.core.UIComponent.prototype.set__scaleX = function(value) {
  this.mx_core_UIComponent__scaleX = value;
  this.element.style.transform = this.mx_core_UIComponent_computeTransformString();
};


mx.core.UIComponent.prototype.get__scaleY = function() {
  return this.mx_core_UIComponent__scaleY;
};


mx.core.UIComponent.prototype.set__scaleY = function(value) {
  this.mx_core_UIComponent__scaleY = value;
  this.element.style.transform = this.mx_core_UIComponent_computeTransformString();
};


mx.core.UIComponent.prototype.get__alpha = function() {
  return org.apache.royale.utils.Language._int(this.mx_core_UIComponent__alpha * 256.0) / 256.0;
};


mx.core.UIComponent.prototype.set__alpha = function(value) {
  if (this.mx_core_UIComponent__alpha != value) {
    this.mx_core_UIComponent__alpha = value;
    mx.core.UIComponent.superClass_.set__alpha.apply(this, [ value] );
    this.dispatchEvent(new org.apache.royale.events.Event("alphaChanged"));
  }
};


mx.core.UIComponent.prototype.get__includeInLayout = function() {
  return this.mx_core_UIComponent__includeInLayout;
};


mx.core.UIComponent.prototype.set__includeInLayout = function(value) {
  if (this.mx_core_UIComponent__includeInLayout != value) {
    this.mx_core_UIComponent__includeInLayout = value;
    var /** @type {mx.core.IInvalidating} */ p = org.apache.royale.utils.Language.as(this.parent, mx.core.IInvalidating);
    if (p) {
      p.invalidateSize();
      p.invalidateDisplayList();
    }
    this.dispatchEvent(new org.apache.royale.events.Event("includeInLayoutChanged"));
  }
};


mx.core.UIComponent.prototype.get__currentState = function() {
  return this.mx_core_UIComponent__currentStateChanged ? this.mx_core_UIComponent_requestedCurrentState : this.mx_core_UIComponent__currentState;
};


mx.core.UIComponent.prototype.set__currentState = function(value) {
  if (value == this.mx_core_UIComponent__currentState)
    return;
  var /** @type {org.apache.royale.events.ValueChangeEvent} */ event = new org.apache.royale.events.ValueChangeEvent("currentStateChange", false, false, this.mx_core_UIComponent__currentState, value);
  this.mx_core_UIComponent__currentState = value;
  this.addEventListener("stateChangeComplete", org.apache.royale.utils.Language.closure(this.mx_core_UIComponent_stateChangeCompleteHandler, this, 'stateChangeCompleteHandler'));
  this.dispatchEvent(event);
};


mx.core.UIComponent.prototype.get__states = function() {
  return this.mx_core_UIComponent__states;
};


mx.core.UIComponent.prototype.set__states = function(value) {
  this.mx_core_UIComponent__states = value;
  this.mx_core_UIComponent__currentState = org.apache.royale.utils.Language.string(this.mx_core_UIComponent__states[0].name);
  try {
    org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IStatesImpl, "iStatesImpl", this);
  } catch (e) {
    
  }
};


mx.core.UIComponent.prototype.get__transitions = function() {
  return this.mx_core_UIComponent__transitions;
};


mx.core.UIComponent.prototype.set__transitions = function(value) {
  this.mx_core_UIComponent__transitions = value;
};


mx.core.UIComponent.prototype.get__styleName = function() {
  return this.mx_core_UIComponent__styleName;
};


mx.core.UIComponent.prototype.set__styleName = function(value) {
  if (this.mx_core_UIComponent__styleName === value)
    return;
  this.mx_core_UIComponent__styleName = value;
  org.apache.royale.utils.Language.trace("styleName not implemented");
};


mx.core.UIComponent.prototype.get__toolTip = function() {
  return this.mx_core_UIComponent__toolTip;
};


mx.core.UIComponent.prototype.set__toolTip = function(value) {
  var /** @type {string} */ oldValue = this.mx_core_UIComponent__toolTip;
  this.mx_core_UIComponent__toolTip = value;
  if (this.mx_core_UIComponent__toolTip != null && this.mx_core_UIComponent__toolTip != "" && this.mx_core_UIComponent__toolTipBead == null) {
    this.mx_core_UIComponent__toolTipBead = new mx.controls.beads.ToolTipBead();
    this.addBead(this.mx_core_UIComponent__toolTipBead);
  } else if ((this.mx_core_UIComponent__toolTip == null || this.mx_core_UIComponent__toolTip == "") && this.mx_core_UIComponent__toolTipBead != null) {
  }
  if (this.mx_core_UIComponent__toolTipBead) {
    this.mx_core_UIComponent__toolTipBead.toolTip = this.mx_core_UIComponent__toolTip;
  }
  this.dispatchEvent(new org.apache.royale.events.Event("toolTipChanged"));
};


mx.core.UIComponent.prototype.get__isPopUp = function() {
  return this.mx_core_UIComponent__isPopUp;
};


mx.core.UIComponent.prototype.set__isPopUp = function(value) {
  this.mx_core_UIComponent__isPopUp = value;
};


mx.core.UIComponent.prototype.get__numChildren = function() {
  return this.numElements;
};


mx.core.UIComponent.prototype.get__MXMLDescriptor = function() {
  return this.mx_core_UIComponent__mxmlDescriptor;
};


mx.core.UIComponent.prototype.get__mouseX = function() {
  org.apache.royale.utils.Language.trace("mouseX not implemented");
  return 0;
};


mx.core.UIComponent.prototype.get__mouseY = function() {
  org.apache.royale.utils.Language.trace("mouseX not implemented");
  return 0;
};


mx.core.UIComponent.prototype.get__unscaledWidth = function() {
  return this.width;
};


mx.core.UIComponent.prototype.get__unscaledHeight = function() {
  return this.height;
};


mx.core.UIComponent.prototype.get__screen = function() {
  
  var /** @type {HTMLBodyElement} */ body = org.apache.royale.utils.Language.as(document.getElementsByTagName('body')[0], HTMLBodyElement);
  return new org.apache.royale.geom.Rectangle(0, 0, body.clientWidth, body.clientHeight);
};


mx.core.UIComponent.prototype.get__left = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "left");
};


mx.core.UIComponent.prototype.set__left = function(value) {
  this.setStyle("left", value);
};


mx.core.UIComponent.prototype.get__right = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "right");
};


mx.core.UIComponent.prototype.set__right = function(value) {
  this.setStyle("right", value);
};


mx.core.UIComponent.prototype.get__top = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "top");
};


mx.core.UIComponent.prototype.set__top = function(value) {
  this.setStyle("top", value);
};


mx.core.UIComponent.prototype.get__bottom = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "bottom");
};


mx.core.UIComponent.prototype.set__bottom = function(value) {
  this.setStyle("bottom", value);
};


mx.core.UIComponent.prototype.get__paddingLeft = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "paddingLeft");
};


mx.core.UIComponent.prototype.set__paddingLeft = function(value) {
  this.setStyle("paddingLeft", value);
};


mx.core.UIComponent.prototype.get__paddingRight = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "paddingRight");
};


mx.core.UIComponent.prototype.set__paddingRight = function(value) {
  this.setStyle("paddingRight", value);
};


mx.core.UIComponent.prototype.get__paddingTop = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "paddingTop");
};


mx.core.UIComponent.prototype.set__paddingTop = function(value) {
  this.setStyle("paddingTop", value);
};


mx.core.UIComponent.prototype.get__paddingBottom = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "paddingBottom");
};


mx.core.UIComponent.prototype.set__paddingBottom = function(value) {
  this.setStyle("paddingBottom", value);
};


mx.core.UIComponent.prototype.get__horizontalCenter = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "horizontalCenter");
};


mx.core.UIComponent.prototype.set__horizontalCenter = function(value) {
  this.setStyle("horizontalCenter", value);
};


mx.core.UIComponent.prototype.get__verticalCenter = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "verticalCenter");
};


mx.core.UIComponent.prototype.set__verticalCenter = function(value) {
  this.setStyle("verticalCenter", value);
};


mx.core.UIComponent.prototype.get__fontWeight = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "fontWeight");
};


mx.core.UIComponent.prototype.set__fontWeight = function(value) {
  this.setStyle("fontWeight", value);
};


mx.core.UIComponent.prototype.get__cornerRadius = function() {
  return this.getStyle("borderRadius");
};


mx.core.UIComponent.prototype.set__cornerRadius = function(value) {
  this.setStyle("borderRadius", value);
};


mx.core.UIComponent.prototype.get__fontFamily = function() {
  org.apache.royale.utils.Language.trace("fontFamily not implemented");
  return 0;
};


mx.core.UIComponent.prototype.set__fontFamily = function(value) {
  org.apache.royale.utils.Language.trace("fontFamily not implemented");
};


mx.core.UIComponent.prototype.get__uid = function() {
  if (!this.mx_core_UIComponent__uid)
    this.mx_core_UIComponent__uid = this.toString();
  return this.mx_core_UIComponent__uid;
};


mx.core.UIComponent.prototype.set__uid = function(uid) {
  this.mx_core_UIComponent__uid = uid;
};


mx.core.UIComponent.prototype.get__showErrorSkin = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "showErrorSkin");
};


mx.core.UIComponent.prototype.set__showErrorSkin = function(value) {
  this.setStyle("showErrorSkin", value);
};


mx.core.UIComponent.prototype.get__showErrorTip = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "showErrorTip");
};


mx.core.UIComponent.prototype.set__showErrorTip = function(value) {
  this.setStyle("showErrorTip", value);
};


mx.core.UIComponent.prototype.get__baseline = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "baseline");
};


mx.core.UIComponent.prototype.set__baseline = function(value) {
  this.setStyle("baseline", value);
};


mx.core.UIComponent.prototype.get__fontSize = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "fontSize");
};


mx.core.UIComponent.prototype.set__fontSize = function(value) {
  this.setStyle("fontSize", value);
};


mx.core.UIComponent.prototype.get__fontStyle = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "fontStyle");
};


mx.core.UIComponent.prototype.set__fontStyle = function(value) {
  this.setStyle("fontStyle", value);
};


mx.core.UIComponent.prototype.get__textAlign = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "textAlign");
};


mx.core.UIComponent.prototype.set__textAlign = function(value) {
  this.setStyle("textAlign", value);
};


mx.core.UIComponent.prototype.get__color = function() {
  org.apache.royale.utils.Language.trace("color not implemented");
  return 0;
};


mx.core.UIComponent.prototype.set__color = function(value) {
  org.apache.royale.utils.Language.trace("color not implemented");
};


mx.core.UIComponent.prototype.get__selectedField = function() {
  org.apache.royale.utils.Language.trace("selectedField not implemented");
  return 0;
};


mx.core.UIComponent.prototype.set__selectedField = function(value) {
  org.apache.royale.utils.Language.trace("selectedField not implemented");
};


mx.core.UIComponent.prototype.get__contentMouseX = function() {
  return 0;
};


mx.core.UIComponent.prototype.get__contentMouseY = function() {
  return 0;
};


mx.core.UIComponent.prototype.get__backgroundColor = function() {
  return org.apache.royale.core.ValuesManager["valuesImpl"].getValue(this, "backgroundColor");
};


mx.core.UIComponent.prototype.set__backgroundColor = function(value) {
  this.setStyle("backgroundColor", value);
};


mx.core.UIComponent.prototype.get__rollOverEffect = function() {
  return this.mx_core_UIComponent__rollOverEffect;
};


mx.core.UIComponent.prototype.set__rollOverEffect = function(value) {
  this.mx_core_UIComponent__rollOverEffect = org.apache.royale.utils.Language.as(value, org.apache.royale.effects.IEffect);
};


mx.core.UIComponent.prototype.get__rollOutEffect = function() {
  return this.mx_core_UIComponent__rollOutEffect;
};


mx.core.UIComponent.prototype.set__rollOutEffect = function(value) {
  this.mx_core_UIComponent__rollOutEffect = org.apache.royale.utils.Language.as(value, org.apache.royale.effects.IEffect);
};


mx.core.UIComponent.prototype.get__mouseDownEffect = function() {
  return this.mx_core_UIComponent__mouseDownEffect;
};


mx.core.UIComponent.prototype.set__mouseDownEffect = function(value) {
  this.mx_core_UIComponent__mouseDownEffect = org.apache.royale.utils.Language.as(value, org.apache.royale.effects.IEffect);
  this.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(new mx.core.UIComponent.EffectEventWatcher(this.mx_core_UIComponent__mouseDownEffect).listener, new mx.core.UIComponent.EffectEventWatcher(this.mx_core_UIComponent__mouseDownEffect), 'listener'));
};


mx.core.UIComponent.prototype.get__mouseUpEffect = function() {
  return this.mx_core_UIComponent__mouseUpEffect;
};


mx.core.UIComponent.prototype.set__mouseUpEffect = function(value) {
  this.mx_core_UIComponent__mouseUpEffect = org.apache.royale.utils.Language.as(value, org.apache.royale.effects.IEffect);
  this.addEventListener(org.apache.royale.events.MouseEvent.MOUSE_UP, org.apache.royale.utils.Language.closure(new mx.core.UIComponent.EffectEventWatcher(this.mx_core_UIComponent__mouseUpEffect).listener, new mx.core.UIComponent.EffectEventWatcher(this.mx_core_UIComponent__mouseUpEffect), 'listener'));
};


mx.core.UIComponent.prototype.get__hideEffect = function() {
  return this.mx_core_UIComponent__hideEffect;
};


mx.core.UIComponent.prototype.set__hideEffect = function(value) {
  this.mx_core_UIComponent__hideEffect = org.apache.royale.utils.Language.as(value, org.apache.royale.effects.IEffect);
  this.addEventListener("hide", org.apache.royale.utils.Language.closure(new mx.core.UIComponent.EffectEventWatcher(this.mx_core_UIComponent__hideEffect).listener, new mx.core.UIComponent.EffectEventWatcher(this.mx_core_UIComponent__hideEffect), 'listener'));
};


mx.core.UIComponent.prototype.get__showEffect = function() {
  return this.mx_core_UIComponent__showEffect;
};


mx.core.UIComponent.prototype.set__showEffect = function(value) {
  this.mx_core_UIComponent__showEffect = org.apache.royale.utils.Language.as(value, org.apache.royale.effects.IEffect);
  this.addEventListener("hide", org.apache.royale.utils.Language.closure(new mx.core.UIComponent.EffectEventWatcher(this.mx_core_UIComponent__showEffect).listener, new mx.core.UIComponent.EffectEventWatcher(this.mx_core_UIComponent__showEffect), 'listener'));
};


mx.core.UIComponent.prototype.get__validationSubField = function() {
  return this.mx_core_UIComponent__validationSubField;
};


mx.core.UIComponent.prototype.set__validationSubField = function(value) {
  this.mx_core_UIComponent__validationSubField = value;
};


mx.core.UIComponent.prototype.get__topMostEventDispatcher = function() {
  return mx.core.FlexGlobals.topLevelApplication.parent;
};


mx.core.UIComponent.prototype.get__visible = function() {
  if (!this.positioner.style.visibility)
    return true;
  return this.positioner.style.visibility == 'visible';
};


mx.core.UIComponent.prototype.set__visible = function(value) {
  var /** @type {boolean} */ oldValue = (!this.positioner.style.visibility) || this.positioner.style.visibility == 'visible';
  if (Boolean(value) !== oldValue) {
    if (!value) {
      this.positioner.style.visibility = 'hidden';
      this.dispatchEvent(new org.apache.royale.events.Event('hide'));
    } else {
      this.positioner.style.visibility = 'visible';
      this.dispatchEvent(new org.apache.royale.events.Event('show'));
    }
    this.dispatchEvent(new org.apache.royale.events.Event('visibleChanged'));
  }
};


Object.defineProperties(mx.core.UIComponent.prototype, /** @lends {mx.core.UIComponent.prototype} */ {
/**
  * @export
  * @type {boolean} */
maintainAspectRatio: {
get: mx.core.UIComponent.prototype.get__maintainAspectRatio,
set: mx.core.UIComponent.prototype.set__maintainAspectRatio},
/**
  * @export
  * @type {number} */
chromeColor: {
get: mx.core.UIComponent.prototype.get__chromeColor,
set: mx.core.UIComponent.prototype.set__chromeColor},
/**
  * @export
  * @type {boolean} */
mouseFocusEnabled: {
get: mx.core.UIComponent.prototype.get__mouseFocusEnabled,
set: mx.core.UIComponent.prototype.set__mouseFocusEnabled},
/**
  * @export
  * @type {boolean} */
initialized: {
get: mx.core.UIComponent.prototype.get__initialized,
set: mx.core.UIComponent.prototype.set__initialized},
/**
  * @export
  * @type {mx.display.Graphics} */
graphics: {
get: mx.core.UIComponent.prototype.get__graphics},
/**
  * @export
  * @type {mx.display.Graphics} */
royalegraphics: {
get: mx.core.UIComponent.prototype.get__royalegraphics},
/**
  * @export
  * @type {mx.core.UIComponent} */
mask: {
get: mx.core.UIComponent.prototype.get__mask,
set: mx.core.UIComponent.prototype.set__mask},
/**
  * @export
  * @type {number} */
rotation: {
get: mx.core.UIComponent.prototype.get__rotation,
set: mx.core.UIComponent.prototype.set__rotation},
/**
  * @export
  * @type {string} */
name: {
get: mx.core.UIComponent.prototype.get__name,
set: mx.core.UIComponent.prototype.set__name},
/**
  * @export
  * @type {number} */
baselinePosition: {
get: mx.core.UIComponent.prototype.get__baselinePosition},
/**
  * @export
  * @type {boolean} */
tabChildren: {
get: mx.core.UIComponent.prototype.get__tabChildren,
set: mx.core.UIComponent.prototype.set__tabChildren},
/**
  * @export
  * @type {boolean} */
accessibilityEnabled: {
get: mx.core.UIComponent.prototype.get__accessibilityEnabled,
set: mx.core.UIComponent.prototype.set__accessibilityEnabled},
/**
  * @export
  * @type {boolean} */
useHandCursor: {
get: mx.core.UIComponent.prototype.get__useHandCursor,
set: mx.core.UIComponent.prototype.set__useHandCursor},
/**
  * @export
  * @type {boolean} */
mouseEnabled: {
get: mx.core.UIComponent.prototype.get__mouseEnabled,
set: mx.core.UIComponent.prototype.set__mouseEnabled},
/**
  * @export
  * @type {boolean} */
mouseChildren: {
get: mx.core.UIComponent.prototype.get__mouseChildren,
set: mx.core.UIComponent.prototype.set__mouseChildren},
/**
  * @export
  * @type {boolean} */
buttonMode: {
get: mx.core.UIComponent.prototype.get__buttonMode,
set: mx.core.UIComponent.prototype.set__buttonMode},
/**
  * @export
  * @type {string} */
errorString: {
get: mx.core.UIComponent.prototype.get__errorString,
set: mx.core.UIComponent.prototype.set__errorString},
/**
  * @export
  * @type {mx.core.IUIComponent} */
owner: {
get: mx.core.UIComponent.prototype.get__owner,
set: mx.core.UIComponent.prototype.set__owner},
/**
  * @export
  * @type {boolean} */
doubleClickEnabled: {
get: mx.core.UIComponent.prototype.get__doubleClickEnabled,
set: mx.core.UIComponent.prototype.set__doubleClickEnabled},
/**
  * @export
  * @type {boolean} */
enabled: {
get: mx.core.UIComponent.prototype.get__enabled,
set: mx.core.UIComponent.prototype.set__enabled},
/**
  * @export
  * @type {boolean} */
focusEnabled: {
get: mx.core.UIComponent.prototype.get__focusEnabled,
set: mx.core.UIComponent.prototype.set__focusEnabled},
/**
  * @export
  * @type {boolean} */
hasFocusableChildren: {
get: mx.core.UIComponent.prototype.get__hasFocusableChildren,
set: mx.core.UIComponent.prototype.set__hasFocusableChildren},
/**
  * @export
  * @type {boolean} */
tabEnabled: {
get: mx.core.UIComponent.prototype.get__tabEnabled,
set: mx.core.UIComponent.prototype.set__tabEnabled},
/**
  * @export
  * @type {boolean} */
tabFocusEnabled: {
get: mx.core.UIComponent.prototype.get__tabFocusEnabled,
set: mx.core.UIComponent.prototype.set__tabFocusEnabled},
/**
  * @export
  * @type {number} */
tabIndex: {
get: mx.core.UIComponent.prototype.get__tabIndex,
set: mx.core.UIComponent.prototype.set__tabIndex},
/**
  * @export
  * @type {boolean} */
cacheAsBitmap: {
get: mx.core.UIComponent.prototype.get__cacheAsBitmap,
set: mx.core.UIComponent.prototype.set__cacheAsBitmap},
/**
  * @export
  * @type {Array} */
filters: {
get: mx.core.UIComponent.prototype.get__filters,
set: mx.core.UIComponent.prototype.set__filters},
/**
  * @export
  * @type {mx.managers.ICursorManager} */
cursorManager: {
get: mx.core.UIComponent.prototype.get__cursorManager},
/**
  * @export
  * @type {mx.managers.IFocusManager} */
focusManager: {
get: mx.core.UIComponent.prototype.get__focusManager,
set: mx.core.UIComponent.prototype.set__focusManager},
/**
  * @type {mx.resources.IResourceManager} */
resourceManager: {
get: mx.core.UIComponent.prototype.get__resourceManager},
/**
  * @export
  * @type {mx.styles.IStyleManager2} */
styleManager: {
get: mx.core.UIComponent.prototype.get__styleManager},
/**
  * @export
  * @type {mx.managers.ISystemManager} */
systemManager: {
get: mx.core.UIComponent.prototype.get__systemManager,
set: mx.core.UIComponent.prototype.set__systemManager},
/**
  * @export
  * @type {Object} */
stage: {
get: mx.core.UIComponent.prototype.get__stage},
/**
  * @export
  * @type {mx.core.IFlexModuleFactory} */
moduleFactory: {
get: mx.core.UIComponent.prototype.get__moduleFactory,
set: mx.core.UIComponent.prototype.set__moduleFactory},
/**
  * @export
  * @type {Object} */
mxmlDocument: {
get: mx.core.UIComponent.prototype.get__mxmlDocument,
set: mx.core.UIComponent.prototype.set__mxmlDocument},
/**
  * @export
  * @type {Object} */
parentApplication: {
get: mx.core.UIComponent.prototype.get__parentApplication},
/**
  * @export
  * @type {Object} */
parentMxmlDocument: {
get: mx.core.UIComponent.prototype.get__parentMxmlDocument},
/**
  * @export
  * @type {number} */
measuredMinWidth: {
get: mx.core.UIComponent.prototype.get__measuredMinWidth,
set: mx.core.UIComponent.prototype.set__measuredMinWidth},
/**
  * @export
  * @type {number} */
measuredMinHeight: {
get: mx.core.UIComponent.prototype.get__measuredMinHeight,
set: mx.core.UIComponent.prototype.set__measuredMinHeight},
/**
  * @export
  * @type {number} */
measuredWidth: {
get: mx.core.UIComponent.prototype.get__measuredWidth,
set: mx.core.UIComponent.prototype.set__measuredWidth},
/**
  * @export
  * @type {number} */
measuredHeight: {
get: mx.core.UIComponent.prototype.get__measuredHeight,
set: mx.core.UIComponent.prototype.set__measuredHeight},
/**
  * @export
  * @type {number} */
percentWidth: {
get: mx.core.UIComponent.prototype.get__percentWidth,
set: mx.core.UIComponent.prototype.set__percentWidth},
/**
  * @export
  * @type {number} */
percentHeight: {
get: mx.core.UIComponent.prototype.get__percentHeight,
set: mx.core.UIComponent.prototype.set__percentHeight},
/**
  * @export
  * @type {number} */
minWidth: {
get: mx.core.UIComponent.prototype.get__minWidth,
set: mx.core.UIComponent.prototype.set__minWidth},
/**
  * @export
  * @type {number} */
minHeight: {
get: mx.core.UIComponent.prototype.get__minHeight,
set: mx.core.UIComponent.prototype.set__minHeight},
/**
  * @export
  * @type {number} */
maxWidth: {
get: mx.core.UIComponent.prototype.get__maxWidth,
set: mx.core.UIComponent.prototype.set__maxWidth},
/**
  * @export
  * @type {number} */
maxHeight: {
get: mx.core.UIComponent.prototype.get__maxHeight,
set: mx.core.UIComponent.prototype.set__maxHeight},
/**
  * @export
  * @type {number} */
explicitMinWidth: {
get: mx.core.UIComponent.prototype.get__explicitMinWidth,
set: mx.core.UIComponent.prototype.set__explicitMinWidth},
/**
  * @export
  * @type {number} */
explicitMinHeight: {
get: mx.core.UIComponent.prototype.get__explicitMinHeight,
set: mx.core.UIComponent.prototype.set__explicitMinHeight},
/**
  * @export
  * @type {number} */
explicitMaxWidth: {
get: mx.core.UIComponent.prototype.get__explicitMaxWidth,
set: mx.core.UIComponent.prototype.set__explicitMaxWidth},
/**
  * @export
  * @type {number} */
explicitMaxHeight: {
get: mx.core.UIComponent.prototype.get__explicitMaxHeight,
set: mx.core.UIComponent.prototype.set__explicitMaxHeight},
/**
  * @export
  * @type {number} */
scaleX: {
get: mx.core.UIComponent.prototype.get__scaleX,
set: mx.core.UIComponent.prototype.set__scaleX},
/**
  * @export
  * @type {number} */
scaleY: {
get: mx.core.UIComponent.prototype.get__scaleY,
set: mx.core.UIComponent.prototype.set__scaleY},
/**
  * @export
  * @type {number} */
alpha: {
get: mx.core.UIComponent.prototype.get__alpha,
set: mx.core.UIComponent.prototype.set__alpha},
/**
  * @export
  * @type {boolean} */
includeInLayout: {
get: mx.core.UIComponent.prototype.get__includeInLayout,
set: mx.core.UIComponent.prototype.set__includeInLayout},
/**
  * @export
  * @type {string} */
currentState: {
get: mx.core.UIComponent.prototype.get__currentState,
set: mx.core.UIComponent.prototype.set__currentState},
/**
  * @export
  * @type {Array} */
states: {
get: mx.core.UIComponent.prototype.get__states,
set: mx.core.UIComponent.prototype.set__states},
/**
  * @export
  * @type {Array} */
transitions: {
get: mx.core.UIComponent.prototype.get__transitions,
set: mx.core.UIComponent.prototype.set__transitions},
/**
  * @export
  * @type {Object} */
styleName: {
get: mx.core.UIComponent.prototype.get__styleName,
set: mx.core.UIComponent.prototype.set__styleName},
/**
  * @export
  * @type {string} */
toolTip: {
get: mx.core.UIComponent.prototype.get__toolTip,
set: mx.core.UIComponent.prototype.set__toolTip},
/**
  * @export
  * @type {boolean} */
isPopUp: {
get: mx.core.UIComponent.prototype.get__isPopUp,
set: mx.core.UIComponent.prototype.set__isPopUp},
/**
  * @export
  * @type {number} */
numChildren: {
get: mx.core.UIComponent.prototype.get__numChildren},
/**
  * @export
  * @type {Array} */
MXMLDescriptor: {
get: mx.core.UIComponent.prototype.get__MXMLDescriptor},
/**
  * @export
  * @type {number} */
mouseX: {
get: mx.core.UIComponent.prototype.get__mouseX},
/**
  * @export
  * @type {number} */
mouseY: {
get: mx.core.UIComponent.prototype.get__mouseY},
/**
  * @type {number} */
unscaledWidth: {
get: mx.core.UIComponent.prototype.get__unscaledWidth},
/**
  * @type {number} */
unscaledHeight: {
get: mx.core.UIComponent.prototype.get__unscaledHeight},
/**
  * @export
  * @type {org.apache.royale.geom.Rectangle} */
screen: {
get: mx.core.UIComponent.prototype.get__screen},
/**
  * @export
  * @type {Object} */
left: {
get: mx.core.UIComponent.prototype.get__left,
set: mx.core.UIComponent.prototype.set__left},
/**
  * @export
  * @type {Object} */
right: {
get: mx.core.UIComponent.prototype.get__right,
set: mx.core.UIComponent.prototype.set__right},
/**
  * @export
  * @type {Object} */
top: {
get: mx.core.UIComponent.prototype.get__top,
set: mx.core.UIComponent.prototype.set__top},
/**
  * @export
  * @type {Object} */
bottom: {
get: mx.core.UIComponent.prototype.get__bottom,
set: mx.core.UIComponent.prototype.set__bottom},
/**
  * @export
  * @type {Object} */
paddingLeft: {
get: mx.core.UIComponent.prototype.get__paddingLeft,
set: mx.core.UIComponent.prototype.set__paddingLeft},
/**
  * @export
  * @type {Object} */
paddingRight: {
get: mx.core.UIComponent.prototype.get__paddingRight,
set: mx.core.UIComponent.prototype.set__paddingRight},
/**
  * @export
  * @type {Object} */
paddingTop: {
get: mx.core.UIComponent.prototype.get__paddingTop,
set: mx.core.UIComponent.prototype.set__paddingTop},
/**
  * @export
  * @type {Object} */
paddingBottom: {
get: mx.core.UIComponent.prototype.get__paddingBottom,
set: mx.core.UIComponent.prototype.set__paddingBottom},
/**
  * @export
  * @type {Object} */
horizontalCenter: {
get: mx.core.UIComponent.prototype.get__horizontalCenter,
set: mx.core.UIComponent.prototype.set__horizontalCenter},
/**
  * @export
  * @type {Object} */
verticalCenter: {
get: mx.core.UIComponent.prototype.get__verticalCenter,
set: mx.core.UIComponent.prototype.set__verticalCenter},
/**
  * @export
  * @type {Object} */
fontWeight: {
get: mx.core.UIComponent.prototype.get__fontWeight,
set: mx.core.UIComponent.prototype.set__fontWeight},
/**
  * @export
  * @type {Object} */
cornerRadius: {
get: mx.core.UIComponent.prototype.get__cornerRadius,
set: mx.core.UIComponent.prototype.set__cornerRadius},
/**
  * @export
  * @type {Object} */
fontFamily: {
get: mx.core.UIComponent.prototype.get__fontFamily,
set: mx.core.UIComponent.prototype.set__fontFamily},
/**
  * @export
  * @type {string} */
uid: {
get: mx.core.UIComponent.prototype.get__uid,
set: mx.core.UIComponent.prototype.set__uid},
/**
  * @export
  * @type {Object} */
showErrorSkin: {
get: mx.core.UIComponent.prototype.get__showErrorSkin,
set: mx.core.UIComponent.prototype.set__showErrorSkin},
/**
  * @export
  * @type {Object} */
showErrorTip: {
get: mx.core.UIComponent.prototype.get__showErrorTip,
set: mx.core.UIComponent.prototype.set__showErrorTip},
/**
  * @export
  * @type {Object} */
baseline: {
get: mx.core.UIComponent.prototype.get__baseline,
set: mx.core.UIComponent.prototype.set__baseline},
/**
  * @export
  * @type {Object} */
fontSize: {
get: mx.core.UIComponent.prototype.get__fontSize,
set: mx.core.UIComponent.prototype.set__fontSize},
/**
  * @export
  * @type {Object} */
fontStyle: {
get: mx.core.UIComponent.prototype.get__fontStyle,
set: mx.core.UIComponent.prototype.set__fontStyle},
/**
  * @export
  * @type {Object} */
textAlign: {
get: mx.core.UIComponent.prototype.get__textAlign,
set: mx.core.UIComponent.prototype.set__textAlign},
/**
  * @export
  * @type {Object} */
color: {
get: mx.core.UIComponent.prototype.get__color,
set: mx.core.UIComponent.prototype.set__color},
/**
  * @export
  * @type {Object} */
selectedField: {
get: mx.core.UIComponent.prototype.get__selectedField,
set: mx.core.UIComponent.prototype.set__selectedField},
/**
  * @export
  * @type {number} */
contentMouseX: {
get: mx.core.UIComponent.prototype.get__contentMouseX},
/**
  * @export
  * @type {number} */
contentMouseY: {
get: mx.core.UIComponent.prototype.get__contentMouseY},
/**
  * @export
  * @type {Object} */
backgroundColor: {
get: mx.core.UIComponent.prototype.get__backgroundColor,
set: mx.core.UIComponent.prototype.set__backgroundColor},
/**
  * @export
  * @type {Object} */
rollOverEffect: {
get: mx.core.UIComponent.prototype.get__rollOverEffect,
set: mx.core.UIComponent.prototype.set__rollOverEffect},
/**
  * @export
  * @type {Object} */
rollOutEffect: {
get: mx.core.UIComponent.prototype.get__rollOutEffect,
set: mx.core.UIComponent.prototype.set__rollOutEffect},
/**
  * @export
  * @type {Object} */
mouseDownEffect: {
get: mx.core.UIComponent.prototype.get__mouseDownEffect,
set: mx.core.UIComponent.prototype.set__mouseDownEffect},
/**
  * @export
  * @type {Object} */
mouseUpEffect: {
get: mx.core.UIComponent.prototype.get__mouseUpEffect,
set: mx.core.UIComponent.prototype.set__mouseUpEffect},
/**
  * @export
  * @type {Object} */
hideEffect: {
get: mx.core.UIComponent.prototype.get__hideEffect,
set: mx.core.UIComponent.prototype.set__hideEffect},
/**
  * @export
  * @type {Object} */
showEffect: {
get: mx.core.UIComponent.prototype.get__showEffect,
set: mx.core.UIComponent.prototype.set__showEffect},
/**
  * @export
  * @type {string} */
validationSubField: {
get: mx.core.UIComponent.prototype.get__validationSubField,
set: mx.core.UIComponent.prototype.set__validationSubField},
/**
  * @export
  * @type {org.apache.royale.events.IEventDispatcher} */
topMostEventDispatcher: {
get: mx.core.UIComponent.prototype.get__topMostEventDispatcher},
/**
  * @export
  * @type {boolean} */
visible: {
get: mx.core.UIComponent.prototype.get__visible,
set: mx.core.UIComponent.prototype.set__visible}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.core.UIComponent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'UIComponent', qName: 'mx.core.UIComponent', kind: 'class' }], interfaces: [mx.core.IChildList, mx.core.IFlexDisplayObject, mx.core.IInvalidating, org.apache.royale.core.IStatesObject, mx.styles.ISimpleStyleClient, mx.core.IUIComponent, mx.core.IVisualElement, mx.core.IFlexModule, mx.validators.IValidatorListener] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.core.UIComponent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'http://www.adobe.com/2006/flex/mx/internal::_errorString': { type: 'String', get_set: function (/** mx.core.UIComponent */ inst, /** * */ v) {return v !== undefined ? inst.http_$$www_adobe_com$2006$flex$mx$internal___errorString = v : inst.http_$$www_adobe_com$2006$flex$mx$internal___errorString;}},
        'http://www.adobe.com/2006/flex/mx/internal::saveBorderColor': { type: 'Boolean', get_set: function (/** mx.core.UIComponent */ inst, /** * */ v) {return v !== undefined ? inst.http_$$www_adobe_com$2006$flex$mx$internal__saveBorderColor = v : inst.http_$$www_adobe_com$2006$flex$mx$internal__saveBorderColor;}},
        'http://www.adobe.com/2006/flex/mx/internal::origBorderColor': { type: 'Number', get_set: function (/** mx.core.UIComponent */ inst, /** * */ v) {return v !== undefined ? inst.http_$$www_adobe_com$2006$flex$mx$internal__origBorderColor = v : inst.http_$$www_adobe_com$2006$flex$mx$internal__origBorderColor;}},
        'isAbsolute': { type: 'Boolean', get_set: function (/** mx.core.UIComponent */ inst, /** * */ v) {return v !== undefined ? inst.isAbsolute = v : inst.isAbsolute;}},
        'mxmlContent': { type: 'Array', get_set: function (/** mx.core.UIComponent */ inst, /** * */ v) {return v !== undefined ? inst.mxmlContent = v : inst.mxmlContent;}}
      };
    },
    accessors: function () {
      return {
        'maintainAspectRatio': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'chromeColor': { type: 'uint', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'mouseFocusEnabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'initialized': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'graphics': { type: 'mx.display.Graphics', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'royalegraphics': { type: 'mx.display.Graphics', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'mask': { type: 'mx.core.UIComponent', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'rotation': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'name': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'baselinePosition': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'tabChildren': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'accessibilityEnabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'useHandCursor': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'mouseEnabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'mouseChildren': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'buttonMode': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'errorString': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'errorStringChanged' } ] } ]; }},
        'owner': { type: 'mx.core.IUIComponent', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'doubleClickEnabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'enabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'focusEnabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'hasFocusableChildren': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'hasFocusableChildrenChange' } ] } ]; }},
        'tabEnabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'tabFocusEnabled': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'tabFocusEnabledChange' } ] } ]; }},
        'tabIndex': { type: 'int', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'cacheAsBitmap': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'filters': { type: 'Array', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'cursorManager': { type: 'mx.managers.ICursorManager', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'focusManager': { type: 'mx.managers.IFocusManager', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'styleManager': { type: 'mx.styles.IStyleManager2', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'systemManager': { type: 'mx.managers.ISystemManager', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'stage': { type: 'Object', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'moduleFactory': { type: 'mx.core.IFlexModuleFactory', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'mxmlDocument': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'parentApplication': { type: 'Object', access: 'readonly', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'initialize' } ] } ]; }},
        'parentMxmlDocument': { type: 'Object', access: 'readonly', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'initialize' } ] } ]; }},
        'measuredMinWidth': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'measuredMinHeight': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'measuredWidth': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'measuredHeight': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'percentWidth': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resize' } ] } ]; }},
        'percentHeight': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resize' } ] } ]; }},
        'minWidth': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'explicitMinWidthChanged' } ] } ]; }},
        'minHeight': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'explicitMinHeightChanged' } ] } ]; }},
        'maxWidth': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'explicitMaxWidthChanged' } ] } ]; }},
        'maxHeight': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'explicitMaxHeightChanged' } ] } ]; }},
        'explicitMinWidth': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'explicitMinWidthChanged' } ] } ]; }},
        'explicitMinHeight': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'explictMinHeightChanged' } ] } ]; }},
        'explicitMaxWidth': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'explicitMaxWidthChanged' } ] } ]; }},
        'explicitMaxHeight': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'explicitMaxHeightChanged' } ] } ]; }},
        'scaleX': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'scaleY': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'alpha': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'alphaChanged' } ] } ]; }},
        'includeInLayout': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'includeInLayoutChanged' } ] } ]; }},
        'currentState': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'currentStateChange' } ] } ]; }},
        'states': { type: 'Array', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'transitions': { type: 'Array', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'styleName': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'toolTip': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'toolTipChanged' } ] } ]; }},
        'isPopUp': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'numChildren': { type: 'int', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'MXMLDescriptor': { type: 'Array', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'mouseX': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'mouseY': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'screen': { type: 'org.apache.royale.geom.Rectangle', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'left': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'right': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'top': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'bottom': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'paddingLeft': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'paddingRight': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'paddingTop': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'paddingBottom': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'horizontalCenter': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'verticalCenter': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'fontWeight': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'cornerRadius': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'fontFamily': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'uid': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'showErrorSkin': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'showErrorTip': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'baseline': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'fontSize': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'fontStyle': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'textAlign': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'color': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'selectedField': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'contentMouseX': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'contentMouseY': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'backgroundColor': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'rollOverEffect': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'rollOutEffect': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'mouseDownEffect': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'mouseUpEffect': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'hideEffect': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'showEffect': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'validationSubField': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.UIComponent'},
        'topMostEventDispatcher': { type: 'org.apache.royale.events.IEventDispatcher', access: 'readonly', declaredBy: 'mx.core.UIComponent'},
        'visible': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.UIComponent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'visibleChanged' } ] } ]; }}
      };
    },
    methods: function () {
      return {
        'UIComponent': { type: '', declaredBy: 'mx.core.UIComponent'},
        'addedToParent': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'setCurrentState': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ,'Boolean', true ]; }},
        'addChild': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '$uibase_addChild': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        'addChildAt': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ,'int', false ]; }},
        '$uibase_addChildAt': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ,'int', false ]; }},
        'removeChild': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '$uibase_removeChild': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        'swapChildren': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ,'mx.core.IUIComponent', false ]; }},
        'removeChildAt': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'int', false ]; }},
        '$uibase_removeChildAt': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'int', false ]; }},
        'getChildAt': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'int', false ]; }},
        'setChildIndex': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ,'int', false ]; }},
        'getChildIndex': { type: 'int', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        'getChildByName': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ]; }},
        'contains': { type: 'Boolean', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        'startDrag': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ,'org.apache.royale.geom.Rectangle', true ]; }},
        'stopDrag': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'initialize': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'setMXMLDescriptor': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Object', false ,'Array', false ]; }},
        'generateMXMLAttributes': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Array', false ]; }},
        'invalidateProperties': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'invalidateSize': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'invalidateDisplayList': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'localToGlobal': { type: 'org.apache.royale.geom.Point', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.geom.Point', false ]; }},
        'globalToLocal': { type: 'org.apache.royale.geom.Point', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.geom.Point', false ]; }},
        'getFocus': { type: 'mx.core.UIComponent', declaredBy: 'mx.core.UIComponent'},
        'styleChanged': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ]; }},
        'validateNow': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'callLater': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Function', false ,'Array', true ]; }},
        'validateProperties': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'validateSize': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getExplicitOrMeasuredWidth': { type: 'Number', declaredBy: 'mx.core.UIComponent'},
        'getExplicitOrMeasuredHeight': { type: 'Number', declaredBy: 'mx.core.UIComponent'},
        'measureText': { type: 'org.apache.royale.core.TextLineMetrics', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ]; }},
        'validateDisplayList': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'isWidthSizedToContent': { type: 'Boolean', declaredBy: 'mx.core.UIComponent'},
        'isHeightSizedToContent': { type: 'Boolean', declaredBy: 'mx.core.UIComponent'},
        'move': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'setActualSize': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Number', false ,'Number', false ]; }},
        'setFocus': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'clearStyle': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ]; }},
        'getStyle': { type: '*', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ]; }, metadata: function () { return [ { name: 'Bindable', args: [ { key: 'style', value: 'true' } ] } ]; }},
        'setStyle': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ,'*', false ]; }},
        'owns': { type: 'Boolean', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        'setVisible': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', false ]; }},
        'getPreferredBoundsWidth': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getPreferredBoundsHeight': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getMinBoundsWidth': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getMinBoundsHeight': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getMaxBoundsWidth': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getMaxBoundsHeight': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getBoundsXAtSize': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Number', false ,'Number', false ,'Boolean', true ]; }},
        'getBoundsYAtSize': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Number', false ,'Number', false ,'Boolean', true ]; }},
        'getLayoutBoundsWidth': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getLayoutBoundsHeight': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getLayoutBoundsX': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'getLayoutBoundsY': { type: 'Number', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Boolean', true ]; }},
        'setLayoutBoundsPosition': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Number', false ,'Number', false ,'Boolean', true ]; }},
        'setLayoutBoundsSize': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'Number', false ,'Number', false ,'Boolean', true ]; }},
        'stylesInitialized': { type: 'void', declaredBy: 'mx.core.UIComponent'},
        'validationResultHandler': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'mx.events.ValidationResultEvent', false ]; }},
        'http://www.adobe.com/2006/flex/mx/internal::addingChild': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.core.IUIBase', false ]; }},
        'http://www.adobe.com/2006/flex/mx/internal::childAdded': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.core.IUIBase', false ]; }},
        'http://www.adobe.com/2006/flex/mx/internal::removingChild': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.core.IUIBase', false ]; }},
        'http://www.adobe.com/2006/flex/mx/internal::childRemoved': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.core.IUIBase', false ]; }},
        'addElement': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        'addElementAt': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'int', false ,'Boolean', true ]; }},
        'removeElement': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        'addEventListener': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ,'Function', false ,'Boolean', true ,'Object', true ]; }},
        'removeEventListener': { type: 'void', declaredBy: 'mx.core.UIComponent', parameters: function () { return [ 'String', false ,'Function', false ,'Boolean', true ,'Object', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.core.UIComponent.prototype.ROYALE_COMPILE_FLAGS = 26;



/**
 * @constructor
 * @param {org.apache.royale.effects.IEffect} effect
 */
mx.core.UIComponent.EffectEventWatcher = function(effect) {
  this.EffectEventWatcher__effect = effect;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.core.UIComponent.EffectEventWatcher', mx.core.UIComponent.EffectEventWatcher);


/**
 * @private
 * @type {org.apache.royale.effects.IEffect}
 */
mx.core.UIComponent.EffectEventWatcher.prototype.EffectEventWatcher__effect;


/**
 * @export
 * @param {org.apache.royale.events.Event} event
 */
mx.core.UIComponent.EffectEventWatcher.prototype.listener = function(event) {
  this.EffectEventWatcher__effect.play();
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.core.UIComponent.EffectEventWatcher.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'EffectEventWatcher', qName: 'mx.core.UIComponent.EffectEventWatcher', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.core.UIComponent.EffectEventWatcher.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'EffectEventWatcher': { type: '', declaredBy: 'mx.core.UIComponent.EffectEventWatcher', parameters: function () { return [ 'org.apache.royale.effects.IEffect', false ]; }},
        'listener': { type: 'void', declaredBy: 'mx.core.UIComponent.EffectEventWatcher', parameters: function () { return [ 'org.apache.royale.events.Event', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.core.UIComponent.EffectEventWatcher.prototype.ROYALE_COMPILE_FLAGS = 26;



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @param {Function} method
 * @param {Array=} args
 */
mx.core.UIComponent.MethodQueueElement = function(method, args) {
  args = typeof args !== 'undefined' ? args : null;
  ;
  this.method = method;
  this.args = args;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.core.UIComponent.MethodQueueElement', mx.core.UIComponent.MethodQueueElement);


/**
 * @export
 * @type {Function}
 */
mx.core.UIComponent.MethodQueueElement.prototype.method;


/**
 * @export
 * @type {Array}
 */
mx.core.UIComponent.MethodQueueElement.prototype.args;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.core.UIComponent.MethodQueueElement.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MethodQueueElement', qName: 'mx.core.UIComponent.MethodQueueElement', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.core.UIComponent.MethodQueueElement.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'method': { type: 'Function', get_set: function (/** mx.core.UIComponent.MethodQueueElement */ inst, /** * */ v) {return v !== undefined ? inst.method = v : inst.method;}},
        'args': { type: 'Array', get_set: function (/** mx.core.UIComponent.MethodQueueElement */ inst, /** * */ v) {return v !== undefined ? inst.args = v : inst.args;}}
      };
    },
    methods: function () {
      return {
        'MethodQueueElement': { type: '', declaredBy: 'mx.core.UIComponent.MethodQueueElement', parameters: function () { return [ 'Function', false ,'Array', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.core.UIComponent.MethodQueueElement.prototype.ROYALE_COMPILE_FLAGS = 26;
