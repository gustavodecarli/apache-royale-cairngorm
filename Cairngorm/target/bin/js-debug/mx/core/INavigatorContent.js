/**
 * Generated by Apache Royale Compiler from mx/core/INavigatorContent.as
 * mx.core.INavigatorContent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.core.INavigatorContent');
/* Royale Dependency List: XML*/

goog.require('org.apache.royale.events.IEventDispatcher');



/**
 * @interface
 * @extends {org.apache.royale.events.IEventDispatcher}
 */
mx.core.INavigatorContent = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.core.INavigatorContent', mx.core.INavigatorContent);
/**  * @type {string}
 */mx.core.INavigatorContent.prototype.label;
/**  * @type {Object}
 */mx.core.INavigatorContent.prototype.icon;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.core.INavigatorContent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'INavigatorContent', qName: 'mx.core.INavigatorContent', kind: 'interface' }], interfaces: [org.apache.royale.events.IEventDispatcher] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.core.INavigatorContent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'label': { type: 'String', access: 'readonly', declaredBy: 'mx.core.INavigatorContent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'labelChanged' } ] } ]; }},
        'icon': { type: 'Class', access: 'readonly', declaredBy: 'mx.core.INavigatorContent', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'iconChanged' } ] } ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.core.INavigatorContent.prototype.ROYALE_COMPILE_FLAGS = 26;
