/**
 * Generated by Apache Royale Compiler from mx/core/LayoutElementUIComponentUtils.as
 * mx.core.LayoutElementUIComponentUtils
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.core.LayoutElementUIComponentUtils');
/* Royale Dependency List: mx.core.IUIComponent,XML*/




/**
 * @constructor
 */
mx.core.LayoutElementUIComponentUtils = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.core.LayoutElementUIComponentUtils', mx.core.LayoutElementUIComponentUtils);


/**
 * @private
 * @const
 * @type {number}
 */
mx.core.LayoutElementUIComponentUtils.DEFAULT_MAX_WIDTH = 10000;


/**
 * @private
 * @const
 * @type {number}
 */
mx.core.LayoutElementUIComponentUtils.DEFAULT_MAX_HEIGHT = 10000;


/**
 *  @asreturn Returns the preferred width (untransformed) of the IUIComponent.
 *  Takes into account measured width, explicit width, explicit min width
 *  and explicit max width.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @private
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getPreferredUBoundsWidth = function(obj) {
  var /** @type {number} */ result = obj.getExplicitOrMeasuredWidth();
  return result;
};


/**
 *  @asreturn Returns the preferred height (untransformed) of the IUIComponent.
 *  Takes into account measured height, explicit height, explicit min height
 *  and explicit max height.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @private
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getPreferredUBoundsHeight = function(obj) {
  var /** @type {number} */ result = obj.getExplicitOrMeasuredHeight();
  return result;
};


/**
 * @private
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getMinUBoundsWidth = function(obj) {
  var /** @type {number} */ minWidth;
  if (!isNaN(obj.explicitMinWidth)) {
    minWidth = obj.explicitMinWidth;
  } else {
    minWidth = isNaN(obj.measuredMinWidth) ? 0 : obj.measuredMinWidth;
    if (!isNaN(obj.explicitMaxWidth))
      minWidth = Math.min(minWidth, obj.explicitMaxWidth);
  }
  return minWidth;
};


/**
 * @private
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getMinUBoundsHeight = function(obj) {
  var /** @type {number} */ minHeight;
  if (!isNaN(obj.explicitMinHeight)) {
    minHeight = obj.explicitMinHeight;
  } else {
    minHeight = isNaN(obj.measuredMinHeight) ? 0 : obj.measuredMinHeight;
    if (!isNaN(obj.explicitMaxHeight))
      minHeight = Math.min(minHeight, obj.explicitMaxHeight);
  }
  return minHeight;
};


/**
 * @private
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getMaxUBoundsWidth = function(obj) {
  var /** @type {number} */ maxWidth;
  if (!isNaN(obj.explicitMaxWidth))
    maxWidth = obj.explicitMaxWidth;
  else
    maxWidth = mx.core.LayoutElementUIComponentUtils.DEFAULT_MAX_WIDTH;
  return maxWidth;
};


/**
 * @private
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getMaxUBoundsHeight = function(obj) {
  var /** @type {number} */ maxHeight;
  if (!isNaN(obj.explicitMaxHeight))
    maxHeight = obj.explicitMaxHeight;
  else
    maxHeight = mx.core.LayoutElementUIComponentUtils.DEFAULT_MAX_HEIGHT;
  return maxHeight;
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getPreferredBoundsWidth = function(obj) {
  var /** @type {number} */ width = mx.core.LayoutElementUIComponentUtils.getPreferredUBoundsWidth(obj);
  return width;
};


/**
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getPreferredBoundsHeight = function(obj) {
  var /** @type {number} */ height = mx.core.LayoutElementUIComponentUtils.getPreferredUBoundsHeight(obj);
  return height;
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getMinBoundsWidth = function(obj) {
  var /** @type {number} */ width = mx.core.LayoutElementUIComponentUtils.getMinUBoundsWidth(obj);
  return width;
};


/**
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getMinBoundsHeight = function(obj) {
  var /** @type {number} */ height = mx.core.LayoutElementUIComponentUtils.getMinUBoundsHeight(obj);
  return height;
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getMaxBoundsWidth = function(obj) {
  var /** @type {number} */ width = mx.core.LayoutElementUIComponentUtils.getMaxUBoundsWidth(obj);
  return width;
};


/**
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getMaxBoundsHeight = function(obj) {
  var /** @type {number} */ height = mx.core.LayoutElementUIComponentUtils.getMaxUBoundsHeight(obj);
  return height;
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @param {number} width
 * @param {number} height
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getBoundsXAtSize = function(obj, width, height) {
  return obj.x;
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @param {number} width
 * @param {number} height
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getBoundsYAtSize = function(obj, width, height) {
  return obj.y;
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getLayoutBoundsWidth = function(obj) {
  var /** @type {number} */ width = obj.width;
  return width;
};


/**
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getLayoutBoundsHeight = function(obj) {
  var /** @type {number} */ height = obj.height;
  return height;
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getLayoutBoundsX = function(obj) {
  return obj.x;
};


/**
 * @export
 * @param {mx.core.IUIComponent} obj
 * @return {number}
 */
mx.core.LayoutElementUIComponentUtils.getLayoutBoundsY = function(obj) {
  return obj.y;
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @param {number} x
 * @param {number} y
 */
mx.core.LayoutElementUIComponentUtils.setLayoutBoundsPosition = function(obj, x, y) {
  obj.element.style.position = "absolute";
  obj.move(x, y);
};


/**
 *  @inheritDoc
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.core.IUIComponent} obj
 * @param {number} width
 * @param {number} height
 */
mx.core.LayoutElementUIComponentUtils.setLayoutBoundsSize = function(obj, width, height) {
  if (isNaN(width))
    width = mx.core.LayoutElementUIComponentUtils.getPreferredUBoundsWidth(obj);
  if (isNaN(height))
    height = mx.core.LayoutElementUIComponentUtils.getPreferredUBoundsHeight(obj);
  obj.setActualSize(width, height);
  return;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.core.LayoutElementUIComponentUtils.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'LayoutElementUIComponentUtils', qName: 'mx.core.LayoutElementUIComponentUtils', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.core.LayoutElementUIComponentUtils.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'LayoutElementUIComponentUtils': { type: '', declaredBy: 'mx.core.LayoutElementUIComponentUtils'},
        '|getPreferredBoundsWidth': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getPreferredBoundsHeight': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getMinBoundsWidth': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getMinBoundsHeight': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getMaxBoundsWidth': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getMaxBoundsHeight': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getBoundsXAtSize': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ,'Number', false ,'Number', false ]; }},
        '|getBoundsYAtSize': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ,'Number', false ,'Number', false ]; }},
        '|getLayoutBoundsWidth': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getLayoutBoundsHeight': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getLayoutBoundsX': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|getLayoutBoundsY': { type: 'Number', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ]; }},
        '|setLayoutBoundsPosition': { type: 'void', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ,'Number', false ,'Number', false ]; }},
        '|setLayoutBoundsSize': { type: 'void', declaredBy: 'mx.core.LayoutElementUIComponentUtils', parameters: function () { return [ 'mx.core.IUIComponent', false ,'Number', false ,'Number', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.core.LayoutElementUIComponentUtils.prototype.ROYALE_COMPILE_FLAGS = 26;
