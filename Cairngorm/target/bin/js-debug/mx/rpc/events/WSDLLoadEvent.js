/**
 * Generated by Apache Royale Compiler from mx/rpc/events/WSDLLoadEvent.as
 * mx.rpc.events.WSDLLoadEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.events.WSDLLoadEvent');
/* Royale Dependency List: mx.rpc.wsdl.WSDL,org.apache.royale.events.IRoyaleEvent,XML*/

goog.require('mx.rpc.events.XMLLoadEvent');



/**
 * Constructor.
 *
 * @asparam type The event type; indicates the action that caused the event.
 *
 * @asparam bubbles Specifies whether the event can bubble up the display list hierarchy.
 *
 * @asparam cancelable Specifies whether the behavior associated with the event can be prevented.
 *
 * @asparam wsdl The full WSDL document.
 *
 * @asparam location The path used to load the document.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {mx.rpc.events.XMLLoadEvent}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {mx.rpc.wsdl.WSDL=} wsdl
 * @param {string=} location
 */
mx.rpc.events.WSDLLoadEvent = function(type, bubbles, cancelable, wsdl, location) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : true;
  wsdl = typeof wsdl !== 'undefined' ? wsdl : null;
  location = typeof location !== 'undefined' ? location : null;
  mx.rpc.events.WSDLLoadEvent.base(this, 'constructor', type == null ? mx.rpc.events.WSDLLoadEvent.LOAD : type, bubbles, cancelable, wsdl == null ? null : wsdl.xml, location);
  this.wsdl = wsdl;
};
goog.inherits(mx.rpc.events.WSDLLoadEvent, mx.rpc.events.XMLLoadEvent);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.events.WSDLLoadEvent', mx.rpc.events.WSDLLoadEvent);


/**
 * @export
 * @type {mx.rpc.wsdl.WSDL}
 */
mx.rpc.events.WSDLLoadEvent.prototype.wsdl;


/**
 *  Returns a copy of this WSDLLoadEvent object.
 *
 *  @asreturn A copy of this WSDLLoadEvent object.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @override
 */
mx.rpc.events.WSDLLoadEvent.prototype.cloneEvent = function() {
  return new mx.rpc.events.WSDLLoadEvent(this.type, this.bubbles, this.cancelable, this.wsdl, this.location);
};


/**
 *  Returns a String representation of this WSDLLoadEvent object.
 *
 *  @asreturn A String representation of this WSDLLoadEvent object.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @override
 */
mx.rpc.events.WSDLLoadEvent.prototype.toString = function() {
  return this.formatToString("WSDLLoadEvent", "location", "type", "bubbles", "cancelable", "eventPhase");
};


/**
 * A helper method to create a new WSDLLoadEvent.
 * @asprivate
 * @export
 * @param {mx.rpc.wsdl.WSDL} wsdl
 * @param {string=} location
 * @return {mx.rpc.events.WSDLLoadEvent}
 */
mx.rpc.events.WSDLLoadEvent.createEvent = function(wsdl, location) {
  location = typeof location !== 'undefined' ? location : null;
  return new mx.rpc.events.WSDLLoadEvent(mx.rpc.events.WSDLLoadEvent.LOAD, false, true, wsdl, location);
};


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.events.WSDLLoadEvent.LOAD = "wsdlLoad";


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.events.WSDLLoadEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'WSDLLoadEvent', qName: 'mx.rpc.events.WSDLLoadEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.events.WSDLLoadEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'wsdl': { type: 'mx.rpc.wsdl.WSDL', get_set: function (/** mx.rpc.events.WSDLLoadEvent */ inst, /** * */ v) {return v !== undefined ? inst.wsdl = v : inst.wsdl;}}
      };
    },
    methods: function () {
      return {
        'WSDLLoadEvent': { type: '', declaredBy: 'mx.rpc.events.WSDLLoadEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'mx.rpc.wsdl.WSDL', true ,'String', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'mx.rpc.events.WSDLLoadEvent'},
        'toString': { type: 'String', declaredBy: 'mx.rpc.events.WSDLLoadEvent'},
        '|createEvent': { type: 'mx.rpc.events.WSDLLoadEvent', declaredBy: 'mx.rpc.events.WSDLLoadEvent', parameters: function () { return [ 'mx.rpc.wsdl.WSDL', false ,'String', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.events.WSDLLoadEvent.prototype.ROYALE_COMPILE_FLAGS = 26;
