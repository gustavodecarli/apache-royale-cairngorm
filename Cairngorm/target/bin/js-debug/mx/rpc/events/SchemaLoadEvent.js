/**
 * Generated by Apache Royale Compiler from mx/rpc/events/SchemaLoadEvent.as
 * mx.rpc.events.SchemaLoadEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.events.SchemaLoadEvent');
/* Royale Dependency List: mx.rpc.xml.Schema,org.apache.royale.events.IRoyaleEvent,XML*/

goog.require('mx.rpc.events.XMLLoadEvent');



/**
 * Creates a new SchemaLoadEvent.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {mx.rpc.events.XMLLoadEvent}
 * @param {string} type
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 * @param {mx.rpc.xml.Schema=} schema
 * @param {string=} location
 */
mx.rpc.events.SchemaLoadEvent = function(type, bubbles, cancelable, schema, location) {
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : true;
  schema = typeof schema !== 'undefined' ? schema : null;
  location = typeof location !== 'undefined' ? location : null;
  mx.rpc.events.SchemaLoadEvent.base(this, 'constructor', type == null ? mx.rpc.events.SchemaLoadEvent.LOAD : type, bubbles, cancelable, schema == null ? null : schema.xml, location);
  this.schema = schema;
};
goog.inherits(mx.rpc.events.SchemaLoadEvent, mx.rpc.events.XMLLoadEvent);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.events.SchemaLoadEvent', mx.rpc.events.SchemaLoadEvent);


/**
 * @export
 * @type {mx.rpc.xml.Schema}
 */
mx.rpc.events.SchemaLoadEvent.prototype.schema;


/**
 * Returns a copy of this SchemaLoadEvent.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @override
 */
mx.rpc.events.SchemaLoadEvent.prototype.cloneEvent = function() {
  return new mx.rpc.events.SchemaLoadEvent(this.type, this.bubbles, this.cancelable, this.schema, this.location);
};


/**
 * Returns a String representation of this SchemaLoadEvent.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @override
 */
mx.rpc.events.SchemaLoadEvent.prototype.toString = function() {
  return this.formatToString("SchemaLoadEvent", "location", "type", "bubbles", "cancelable", "eventPhase");
};


/**
 * A helper method to create a new SchemaLoadEvent.
 * @asprivate
 * @export
 * @param {mx.rpc.xml.Schema} schema
 * @param {string=} location
 * @return {mx.rpc.events.SchemaLoadEvent}
 */
mx.rpc.events.SchemaLoadEvent.createEvent = function(schema, location) {
  location = typeof location !== 'undefined' ? location : null;
  return new mx.rpc.events.SchemaLoadEvent(mx.rpc.events.SchemaLoadEvent.LOAD, false, true, schema, location);
};


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.events.SchemaLoadEvent.LOAD = "schemaLoad";


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.events.SchemaLoadEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SchemaLoadEvent', qName: 'mx.rpc.events.SchemaLoadEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.events.SchemaLoadEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'schema': { type: 'mx.rpc.xml.Schema', get_set: function (/** mx.rpc.events.SchemaLoadEvent */ inst, /** * */ v) {return v !== undefined ? inst.schema = v : inst.schema;}}
      };
    },
    methods: function () {
      return {
        'SchemaLoadEvent': { type: '', declaredBy: 'mx.rpc.events.SchemaLoadEvent', parameters: function () { return [ 'String', false ,'Boolean', true ,'Boolean', true ,'mx.rpc.xml.Schema', true ,'String', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'mx.rpc.events.SchemaLoadEvent'},
        'toString': { type: 'String', declaredBy: 'mx.rpc.events.SchemaLoadEvent'},
        '|createEvent': { type: 'mx.rpc.events.SchemaLoadEvent', declaredBy: 'mx.rpc.events.SchemaLoadEvent', parameters: function () { return [ 'mx.rpc.xml.Schema', false ,'String', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.events.SchemaLoadEvent.prototype.ROYALE_COMPILE_FLAGS = 26;
