/**
 * Generated by Apache Royale Compiler from mx/rpc/wsdl/WSDLOperation.as
 * mx.rpc.wsdl.WSDLOperation
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.wsdl.WSDLOperation');
/* Royale Dependency List: mx.rpc.soap.SOAPConstants,mx.rpc.wsdl.WSDLConstants,mx.rpc.wsdl.WSDLMessage,mx.rpc.xml.SchemaManager,XML*/




/**
 * Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @param {string} name
 */
mx.rpc.wsdl.WSDLOperation = function(name) {
  ;
  this.mx_rpc_wsdl_WSDLOperation__name = name;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.wsdl.WSDLOperation', mx.rpc.wsdl.WSDLOperation);


/**
 * @export
 * @type {mx.rpc.wsdl.WSDLMessage}
 */
mx.rpc.wsdl.WSDLOperation.prototype.inputMessage;


/**
 * @export
 * @type {Object}
 */
mx.rpc.wsdl.WSDLOperation.prototype.namespaces;


/**
 * @export
 * @type {mx.rpc.wsdl.WSDLMessage}
 */
mx.rpc.wsdl.WSDLOperation.prototype.outputMessage;


/**
 * @export
 * @type {string}
 */
mx.rpc.wsdl.WSDLOperation.prototype.style;


/**
 * Registers the encoding and type information for a potential fault for
 * this operation.
 * @asprivate
 * @export
 * @param {mx.rpc.wsdl.WSDLMessage} fault
 */
mx.rpc.wsdl.WSDLOperation.prototype.addFault = function(fault) {
  if (this.mx_rpc_wsdl_WSDLOperation__faultsMap == null)
    this.mx_rpc_wsdl_WSDLOperation__faultsMap = {};
  this.mx_rpc_wsdl_WSDLOperation__faultsMap[fault.name] = fault;
};


/**
 * Locates a fault by name.
 * @asprivate
 * @export
 * @param {string} name
 * @return {mx.rpc.wsdl.WSDLMessage}
 */
mx.rpc.wsdl.WSDLOperation.prototype.getFault = function(name) {
  var /** @type {mx.rpc.wsdl.WSDLMessage} */ fault;
  if (this.mx_rpc_wsdl_WSDLOperation__faultsMap != null)
    fault = this.mx_rpc_wsdl_WSDLOperation__faultsMap[name];
  return fault;
};


/**
 * @private
 * @type {Object}
 */
mx.rpc.wsdl.WSDLOperation.prototype.mx_rpc_wsdl_WSDLOperation__faultsMap;


/**
 * @private
 * @type {string}
 */
mx.rpc.wsdl.WSDLOperation.prototype.mx_rpc_wsdl_WSDLOperation__name;


/**
 * @private
 * @type {string}
 */
mx.rpc.wsdl.WSDLOperation.prototype.mx_rpc_wsdl_WSDLOperation__soapAction;


/**
 * @private
 * @type {mx.rpc.soap.SOAPConstants}
 */
mx.rpc.wsdl.WSDLOperation.prototype.mx_rpc_wsdl_WSDLOperation__soapConstants;


/**
 * @private
 * @type {mx.rpc.xml.SchemaManager}
 */
mx.rpc.wsdl.WSDLOperation.prototype.mx_rpc_wsdl_WSDLOperation__schemaManager;


/**
 * @private
 * @type {mx.rpc.wsdl.WSDLConstants}
 */
mx.rpc.wsdl.WSDLOperation.prototype.mx_rpc_wsdl_WSDLOperation__wsdlConstants;


mx.rpc.wsdl.WSDLOperation.prototype.get__name = function() {
  return this.mx_rpc_wsdl_WSDLOperation__name;
};


mx.rpc.wsdl.WSDLOperation.prototype.get__schemaManager = function() {
  return this.mx_rpc_wsdl_WSDLOperation__schemaManager;
};


mx.rpc.wsdl.WSDLOperation.prototype.set__schemaManager = function(manager) {
  this.mx_rpc_wsdl_WSDLOperation__schemaManager = manager;
};


mx.rpc.wsdl.WSDLOperation.prototype.get__soapAction = function() {
  if (this.mx_rpc_wsdl_WSDLOperation__soapAction == null)
    this.mx_rpc_wsdl_WSDLOperation__soapAction = "";
  return this.mx_rpc_wsdl_WSDLOperation__soapAction;
};


mx.rpc.wsdl.WSDLOperation.prototype.set__soapAction = function(value) {
  this.mx_rpc_wsdl_WSDLOperation__soapAction = value;
};


mx.rpc.wsdl.WSDLOperation.prototype.get__soapConstants = function() {
  if (this.mx_rpc_wsdl_WSDLOperation__soapConstants == null)
    this.mx_rpc_wsdl_WSDLOperation__soapConstants = mx.rpc.soap.SOAPConstants.getConstants(null);
  return this.mx_rpc_wsdl_WSDLOperation__soapConstants;
};


mx.rpc.wsdl.WSDLOperation.prototype.set__soapConstants = function(value) {
  this.mx_rpc_wsdl_WSDLOperation__soapConstants = value;
};


mx.rpc.wsdl.WSDLOperation.prototype.get__wsdlConstants = function() {
  if (this.mx_rpc_wsdl_WSDLOperation__wsdlConstants == null)
    this.mx_rpc_wsdl_WSDLOperation__wsdlConstants = mx.rpc.wsdl.WSDLConstants.getConstants(null);
  return this.mx_rpc_wsdl_WSDLOperation__wsdlConstants;
};


mx.rpc.wsdl.WSDLOperation.prototype.set__wsdlConstants = function(value) {
  this.mx_rpc_wsdl_WSDLOperation__wsdlConstants = value;
};


Object.defineProperties(mx.rpc.wsdl.WSDLOperation.prototype, /** @lends {mx.rpc.wsdl.WSDLOperation.prototype} */ {
/**
  * @export
  * @type {string} */
name: {
get: mx.rpc.wsdl.WSDLOperation.prototype.get__name},
/**
  * @export
  * @type {mx.rpc.xml.SchemaManager} */
schemaManager: {
get: mx.rpc.wsdl.WSDLOperation.prototype.get__schemaManager,
set: mx.rpc.wsdl.WSDLOperation.prototype.set__schemaManager},
/**
  * @export
  * @type {string} */
soapAction: {
get: mx.rpc.wsdl.WSDLOperation.prototype.get__soapAction,
set: mx.rpc.wsdl.WSDLOperation.prototype.set__soapAction},
/**
  * @export
  * @type {mx.rpc.soap.SOAPConstants} */
soapConstants: {
get: mx.rpc.wsdl.WSDLOperation.prototype.get__soapConstants,
set: mx.rpc.wsdl.WSDLOperation.prototype.set__soapConstants},
/**
  * @export
  * @type {mx.rpc.wsdl.WSDLConstants} */
wsdlConstants: {
get: mx.rpc.wsdl.WSDLOperation.prototype.get__wsdlConstants,
set: mx.rpc.wsdl.WSDLOperation.prototype.set__wsdlConstants}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.wsdl.WSDLOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'WSDLOperation', qName: 'mx.rpc.wsdl.WSDLOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.wsdl.WSDLOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'inputMessage': { type: 'mx.rpc.wsdl.WSDLMessage', get_set: function (/** mx.rpc.wsdl.WSDLOperation */ inst, /** * */ v) {return v !== undefined ? inst.inputMessage = v : inst.inputMessage;}},
        'namespaces': { type: 'Object', get_set: function (/** mx.rpc.wsdl.WSDLOperation */ inst, /** * */ v) {return v !== undefined ? inst.namespaces = v : inst.namespaces;}},
        'outputMessage': { type: 'mx.rpc.wsdl.WSDLMessage', get_set: function (/** mx.rpc.wsdl.WSDLOperation */ inst, /** * */ v) {return v !== undefined ? inst.outputMessage = v : inst.outputMessage;}},
        'style': { type: 'String', get_set: function (/** mx.rpc.wsdl.WSDLOperation */ inst, /** * */ v) {return v !== undefined ? inst.style = v : inst.style;}}
      };
    },
    accessors: function () {
      return {
        'name': { type: 'String', access: 'readonly', declaredBy: 'mx.rpc.wsdl.WSDLOperation'},
        'schemaManager': { type: 'mx.rpc.xml.SchemaManager', access: 'readwrite', declaredBy: 'mx.rpc.wsdl.WSDLOperation'},
        'soapAction': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.wsdl.WSDLOperation'},
        'soapConstants': { type: 'mx.rpc.soap.SOAPConstants', access: 'readwrite', declaredBy: 'mx.rpc.wsdl.WSDLOperation'},
        'wsdlConstants': { type: 'mx.rpc.wsdl.WSDLConstants', access: 'readwrite', declaredBy: 'mx.rpc.wsdl.WSDLOperation'}
      };
    },
    methods: function () {
      return {
        'WSDLOperation': { type: '', declaredBy: 'mx.rpc.wsdl.WSDLOperation', parameters: function () { return [ 'String', false ]; }},
        'addFault': { type: 'void', declaredBy: 'mx.rpc.wsdl.WSDLOperation', parameters: function () { return [ 'mx.rpc.wsdl.WSDLMessage', false ]; }},
        'getFault': { type: 'mx.rpc.wsdl.WSDLMessage', declaredBy: 'mx.rpc.wsdl.WSDLOperation', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.wsdl.WSDLOperation.prototype.ROYALE_COMPILE_FLAGS = 26;
