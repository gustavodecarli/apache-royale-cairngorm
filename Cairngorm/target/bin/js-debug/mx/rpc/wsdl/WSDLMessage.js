/**
 * Generated by Apache Royale Compiler from mx/rpc/wsdl/WSDLMessage.as
 * mx.rpc.wsdl.WSDLMessage
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.wsdl.WSDLMessage');
/* Royale Dependency List: QName,mx.rpc.wsdl.WSDLEncoding,mx.rpc.wsdl.WSDLMessagePart,XML*/




/**
 * @constructor
 * @param {string=} name
 */
mx.rpc.wsdl.WSDLMessage = function(name) {
  name = typeof name !== 'undefined' ? name : null;
  ;
  this.name = name;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.wsdl.WSDLMessage', mx.rpc.wsdl.WSDLMessage);


/**
 * @export
 * @type {mx.rpc.wsdl.WSDLEncoding}
 */
mx.rpc.wsdl.WSDLMessage.prototype.encoding;


/**
 * @export
 * @type {boolean}
 */
mx.rpc.wsdl.WSDLMessage.prototype.isWrapped;


/**
 * @export
 * @type {string}
 */
mx.rpc.wsdl.WSDLMessage.prototype.name;


/**
 * @export
 * @type {Array}
 */
mx.rpc.wsdl.WSDLMessage.prototype.parts;


/**
 * @export
 * @type {QName}
 */
mx.rpc.wsdl.WSDLMessage.prototype.wrappedQName;


/**
 * Add a part to this message. The parts Array tracks the order in which
 * parts were added; an internal map allows a part to be located by name.
 * @see #getPart(String)
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {mx.rpc.wsdl.WSDLMessagePart} part
 */
mx.rpc.wsdl.WSDLMessage.prototype.addPart = function(part) {
  if (this.mx_rpc_wsdl_WSDLMessage__partsMap == null)
    this.mx_rpc_wsdl_WSDLMessage__partsMap = {};
  if (this.parts == null)
    this.parts = [];
  this.mx_rpc_wsdl_WSDLMessage__partsMap[part.name.localName] = part;
  this.parts.push(part);
};


/**
 * Locates a message part by name.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} name
 * @return {mx.rpc.wsdl.WSDLMessagePart}
 */
mx.rpc.wsdl.WSDLMessage.prototype.getPart = function(name) {
  var /** @type {mx.rpc.wsdl.WSDLMessagePart} */ part;
  if (this.mx_rpc_wsdl_WSDLMessage__partsMap != null)
    part = this.mx_rpc_wsdl_WSDLMessage__partsMap[name];
  return part;
};


/**
 * @asprivate
 * @export
 * @param {mx.rpc.wsdl.WSDLMessage} header
 */
mx.rpc.wsdl.WSDLMessage.prototype.addHeader = function(header) {
  if (this.mx_rpc_wsdl_WSDLMessage__headersMap == null)
    this.mx_rpc_wsdl_WSDLMessage__headersMap = {};
  this.mx_rpc_wsdl_WSDLMessage__headersMap[header.name] = header;
};


/**
 * @asprivate
 * @export
 * @param {string} name
 * @return {mx.rpc.wsdl.WSDLMessage}
 */
mx.rpc.wsdl.WSDLMessage.prototype.getHeader = function(name) {
  var /** @type {mx.rpc.wsdl.WSDLMessage} */ header;
  if (this.mx_rpc_wsdl_WSDLMessage__headersMap != null)
    header = this.mx_rpc_wsdl_WSDLMessage__headersMap[name];
  return header;
};


/**
 * @asprivate
 * @export
 * @param {mx.rpc.wsdl.WSDLMessage} headerFault
 */
mx.rpc.wsdl.WSDLMessage.prototype.addHeaderFault = function(headerFault) {
  if (this.mx_rpc_wsdl_WSDLMessage__headerFaultsMap == null)
    this.mx_rpc_wsdl_WSDLMessage__headerFaultsMap = {};
  this.mx_rpc_wsdl_WSDLMessage__headerFaultsMap[headerFault.name] = headerFault;
};


/**
 * @asprivate
 * @export
 * @param {string} name
 * @return {mx.rpc.wsdl.WSDLMessage}
 */
mx.rpc.wsdl.WSDLMessage.prototype.getHeaderFault = function(name) {
  var /** @type {mx.rpc.wsdl.WSDLMessage} */ headerFault;
  if (this.mx_rpc_wsdl_WSDLMessage__headerFaultsMap != null)
    headerFault = this.mx_rpc_wsdl_WSDLMessage__headerFaultsMap[name];
  return headerFault;
};


/**
 * @private
 * @type {Object}
 */
mx.rpc.wsdl.WSDLMessage.prototype.mx_rpc_wsdl_WSDLMessage__partsMap;


/**
 * @private
 * @type {Object}
 */
mx.rpc.wsdl.WSDLMessage.prototype.mx_rpc_wsdl_WSDLMessage__headersMap;


/**
 * @private
 * @type {Object}
 */
mx.rpc.wsdl.WSDLMessage.prototype.mx_rpc_wsdl_WSDLMessage__headerFaultsMap;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.wsdl.WSDLMessage.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'WSDLMessage', qName: 'mx.rpc.wsdl.WSDLMessage', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.wsdl.WSDLMessage.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'encoding': { type: 'mx.rpc.wsdl.WSDLEncoding', get_set: function (/** mx.rpc.wsdl.WSDLMessage */ inst, /** * */ v) {return v !== undefined ? inst.encoding = v : inst.encoding;}},
        'isWrapped': { type: 'Boolean', get_set: function (/** mx.rpc.wsdl.WSDLMessage */ inst, /** * */ v) {return v !== undefined ? inst.isWrapped = v : inst.isWrapped;}},
        'name': { type: 'String', get_set: function (/** mx.rpc.wsdl.WSDLMessage */ inst, /** * */ v) {return v !== undefined ? inst.name = v : inst.name;}},
        'parts': { type: 'Array', get_set: function (/** mx.rpc.wsdl.WSDLMessage */ inst, /** * */ v) {return v !== undefined ? inst.parts = v : inst.parts;}},
        'wrappedQName': { type: 'QName', get_set: function (/** mx.rpc.wsdl.WSDLMessage */ inst, /** * */ v) {return v !== undefined ? inst.wrappedQName = v : inst.wrappedQName;}}
      };
    },
    methods: function () {
      return {
        'WSDLMessage': { type: '', declaredBy: 'mx.rpc.wsdl.WSDLMessage', parameters: function () { return [ 'String', true ]; }},
        'addPart': { type: 'void', declaredBy: 'mx.rpc.wsdl.WSDLMessage', parameters: function () { return [ 'mx.rpc.wsdl.WSDLMessagePart', false ]; }},
        'getPart': { type: 'mx.rpc.wsdl.WSDLMessagePart', declaredBy: 'mx.rpc.wsdl.WSDLMessage', parameters: function () { return [ 'String', false ]; }},
        'addHeader': { type: 'void', declaredBy: 'mx.rpc.wsdl.WSDLMessage', parameters: function () { return [ 'mx.rpc.wsdl.WSDLMessage', false ]; }},
        'getHeader': { type: 'mx.rpc.wsdl.WSDLMessage', declaredBy: 'mx.rpc.wsdl.WSDLMessage', parameters: function () { return [ 'String', false ]; }},
        'addHeaderFault': { type: 'void', declaredBy: 'mx.rpc.wsdl.WSDLMessage', parameters: function () { return [ 'mx.rpc.wsdl.WSDLMessage', false ]; }},
        'getHeaderFault': { type: 'mx.rpc.wsdl.WSDLMessage', declaredBy: 'mx.rpc.wsdl.WSDLMessage', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.wsdl.WSDLMessage.prototype.ROYALE_COMPILE_FLAGS = 26;
