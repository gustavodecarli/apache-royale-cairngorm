/**
 * Generated by Apache Royale Compiler from mx/utils/IXMLNotifiable.as
 * mx.utils.IXMLNotifiable
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.utils.IXMLNotifiable');
/* Royale Dependency List: XML*/



/**
 * @interface
 */
mx.utils.IXMLNotifiable = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.utils.IXMLNotifiable', mx.utils.IXMLNotifiable);
/**
 *  @asprivate
 * @export
 * @param {Object} currentTarget
 * @param {string} type
 * @param {Object} target
 * @param {Object} value
 * @param {Object} detail
 */
mx.utils.IXMLNotifiable.prototype.xmlNotification = function(currentTarget, type, target, value, detail) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.utils.IXMLNotifiable.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IXMLNotifiable', qName: 'mx.utils.IXMLNotifiable', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.utils.IXMLNotifiable.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'xmlNotification': { type: 'void', declaredBy: 'mx.utils.IXMLNotifiable', parameters: function () { return [ 'Object', false ,'String', false ,'Object', false ,'Object', false ,'Object', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.utils.IXMLNotifiable.prototype.ROYALE_COMPILE_FLAGS = 26;
