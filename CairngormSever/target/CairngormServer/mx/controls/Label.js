/**
 * Generated by Apache Royale Compiler from mx/controls/Label.as
 * mx.controls.Label
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.controls.Label');
/* Royale Dependency List: mx.events.FlexEvent,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.html.util.addElementToWrapper,org.apache.royale.utils.Language,XML*/

goog.require('mx.core.UIComponent');
goog.require('mx.core.IDataRenderer');



/**
 *  Constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {mx.core.UIComponent}
 * @implements {mx.core.IDataRenderer}
 */
mx.controls.Label = function() {
  mx.controls.Label.base(this, 'constructor');
  this.typeNames = "Label";
};
goog.inherits(mx.controls.Label, mx.core.UIComponent);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.controls.Label', mx.controls.Label);


/**
 * @private
 * @type {boolean}
 */
mx.controls.Label.prototype.mx_controls_Label_enabledChanged = false;


/**
 * @private
 * @type {boolean}
 */
mx.controls.Label.prototype.mx_controls_Label__selectable = true;


/**
 * @private
 * @type {boolean}
 */
mx.controls.Label.prototype.mx_controls_Label_selectableChanged;


/**
 * @private
 * @type {Object}
 */
mx.controls.Label.prototype.mx_controls_Label__data;


/**
 * @export
 * @type {Text}
 */
mx.controls.Label.prototype.textNode;


/**
 * @private
 * @type {string}
 */
mx.controls.Label.prototype.mx_controls_Label__text = "";


/**
 * @royaleignorecoercion window.Text
 * @export
 * @override
 */
mx.controls.Label.prototype.createElement = function() {
  org.apache.royale.html.util.addElementToWrapper(this, 'span');
  this.textNode = org.apache.royale.utils.Language.as(document.createTextNode(this.mx_controls_Label__text), Text);
  this.element.appendChild(this.textNode);
  this.element.style.whiteSpace = "nowrap";
  this.element.style.display = "inline-block";
  return this.element;
};


mx.controls.Label.prototype.set__enabled = function(value) {
  if (value == this.enabled)
    return;
  mx.controls.Label.superClass_.set__enabled.apply(this, [ value] );
  this.mx_controls_Label_enabledChanged = true;
  this.invalidateProperties();
};


mx.controls.Label.prototype.get__selectable = function() {
  return this.mx_controls_Label__selectable;
};


mx.controls.Label.prototype.set__selectable = function(value) {
  if (value == this.selectable)
    return;
  this.mx_controls_Label__selectable = value;
  this.mx_controls_Label_selectableChanged = true;
  this.element.style["-webkit-touch-callout"] = value ? "auto" : "none";
  this.element.style["-webkit-user-select"] = value ? "auto" : "none";
  this.element.style["-khtml-user-select"] = value ? "auto" : "none";
  this.element.style["-moz-user-select"] = value ? "auto" : "none";
  this.element.style["-ms-user-select"] = value ? "auto" : "none";
  this.element.style["-user-select"] = value ? "auto" : "none";
  this.invalidateProperties();
};


mx.controls.Label.prototype.get__data = function() {
  return this.mx_controls_Label__data;
};


mx.controls.Label.prototype.set__data = function(value) {
  var /** @type {*} */ newText;
  this.mx_controls_Label__data = value;
  this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.DATA_CHANGE));
};


mx.controls.Label.prototype.get__htmlText = function() {
  
  return this.element.innerHTML;
};


mx.controls.Label.prototype.set__htmlText = function(value) {
  
  this.element.innerHTML = value;
  this.dispatchEvent('textChange');
  this.invalidateSize();
};


mx.controls.Label.prototype.get__text = function() {
  
  return this.mx_controls_Label__text;
};


mx.controls.Label.prototype.set__text = function(value) {
  if (!value)
    value = "";
  
  if (this.textNode) {
    this.mx_controls_Label__text = value;
    this.textNode.nodeValue = value;
    this.dispatchEvent('textChange');
  }
  this.invalidateSize();
};


Object.defineProperties(mx.controls.Label.prototype, /** @lends {mx.controls.Label.prototype} */ {
/**
  * @export
  * @type {boolean} */
enabled: {
get: mx.core.UIComponent.prototype.get__enabled,
set: mx.controls.Label.prototype.set__enabled},
/**
  * @export
  * @type {boolean} */
selectable: {
get: mx.controls.Label.prototype.get__selectable,
set: mx.controls.Label.prototype.set__selectable},
/**
  * @export
  * @type {Object} */
data: {
get: mx.controls.Label.prototype.get__data,
set: mx.controls.Label.prototype.set__data},
/**
  * @export
  * @type {string} */
htmlText: {
get: mx.controls.Label.prototype.get__htmlText,
set: mx.controls.Label.prototype.set__htmlText},
/**
  * @export
  * @type {string} */
text: {
get: mx.controls.Label.prototype.get__text,
set: mx.controls.Label.prototype.set__text}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.controls.Label.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Label', qName: 'mx.controls.Label', kind: 'class' }], interfaces: [mx.core.IDataRenderer] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.controls.Label.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'enabled': { type: 'Boolean', access: 'writeonly', declaredBy: 'mx.controls.Label'},
        'selectable': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.controls.Label'},
        'data': { type: 'Object', access: 'readwrite', declaredBy: 'mx.controls.Label', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'dataChange' } ] } ]; }},
        'htmlText': { type: 'String', access: 'readwrite', declaredBy: 'mx.controls.Label', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'htmlChange' } ] } ]; }},
        'text': { type: 'String', access: 'readwrite', declaredBy: 'mx.controls.Label', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'textChange' } ] } ]; }}
      };
    },
    methods: function () {
      return {
        'Label': { type: '', declaredBy: 'mx.controls.Label'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.controls.Label.prototype.ROYALE_COMPILE_FLAGS = 26;
