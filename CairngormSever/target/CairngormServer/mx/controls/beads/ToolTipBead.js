/**
 * Generated by Apache Royale Compiler from mx/controls/beads/ToolTipBead.as
 * mx.controls.beads.ToolTipBead
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.controls.beads.ToolTipBead');
/* Royale Dependency List: org.apache.royale.core.IStrand,org.apache.royale.events.IEventDispatcher,org.apache.royale.events.MouseEvent,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.html.accessories.ToolTipBead');



/**
 * @constructor
 * @extends {org.apache.royale.html.accessories.ToolTipBead}
 */
mx.controls.beads.ToolTipBead = function() {
  mx.controls.beads.ToolTipBead.base(this, 'constructor');
};
goog.inherits(mx.controls.beads.ToolTipBead, org.apache.royale.html.accessories.ToolTipBead);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.controls.beads.ToolTipBead', mx.controls.beads.ToolTipBead);


/**
 * @asprivate
 * @private
 * @param {org.apache.royale.events.MouseEvent} event
 */
mx.controls.beads.ToolTipBead.prototype.mx_controls_beads_ToolTipBead_mouseDownHandler = function(event) {
  mx.controls.beads.ToolTipBead.superClass_.rollOutHandler.apply(this, [ event] );
};


/**
 * @private
 * @type {boolean}
 */
mx.controls.beads.ToolTipBead.prototype.mx_controls_beads_ToolTipBead__isError;


/**
 * @export
 * @override
 */
mx.controls.beads.ToolTipBead.prototype.rollOverHandler = function(event) {
  mx.controls.beads.ToolTipBead.superClass_.rollOverHandler.apply(this, [ event] );
  if (this.tt) {
    this.tt.element.style.color = this.isError ? "#ff0000" : "#000";
  }
};


mx.controls.beads.ToolTipBead.prototype.set__strand = function(value) {
  mx.controls.beads.ToolTipBead.superClass_.set__strand.apply(this, [ value] );
  org.apache.royale.utils.Language.as(value, org.apache.royale.events.IEventDispatcher, true).addEventListener(org.apache.royale.events.MouseEvent.MOUSE_DOWN, org.apache.royale.utils.Language.closure(this.mx_controls_beads_ToolTipBead_mouseDownHandler, this, 'mouseDownHandler'), false);
};


mx.controls.beads.ToolTipBead.prototype.get__isError = function() {
  return this.mx_controls_beads_ToolTipBead__isError;
};


mx.controls.beads.ToolTipBead.prototype.set__isError = function(value) {
  this.mx_controls_beads_ToolTipBead__isError = value;
};


Object.defineProperties(mx.controls.beads.ToolTipBead.prototype, /** @lends {mx.controls.beads.ToolTipBead.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IStrand} */
strand: {
set: mx.controls.beads.ToolTipBead.prototype.set__strand},
/**
  * @export
  * @type {boolean} */
isError: {
get: mx.controls.beads.ToolTipBead.prototype.get__isError,
set: mx.controls.beads.ToolTipBead.prototype.set__isError}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.controls.beads.ToolTipBead.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ToolTipBead', qName: 'mx.controls.beads.ToolTipBead', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.controls.beads.ToolTipBead.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'mx.controls.beads.ToolTipBead'},
        'isError': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.controls.beads.ToolTipBead'}
      };
    },
    methods: function () {
      return {
        'ToolTipBead': { type: '', declaredBy: 'mx.controls.beads.ToolTipBead'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.controls.beads.ToolTipBead.prototype.ROYALE_COMPILE_FLAGS = 26;
