/**
 * Generated by Apache Royale Compiler from mx/core/EdgeMetrics.as
 * mx.core.EdgeMetrics
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.core.EdgeMetrics');
/* Royale Dependency List: org.apache.royale.geom.Rectangle,XML*/




/**
 *  Constructor.
 *
 *  @asparam left The width, in pixels, of the left edge region.
 *
 *  @asparam top The height, in pixels, of the top edge region.
 *
 *  @asparam right The width, in pixels, of the right edge region.
 *
 *  @asparam bottom The height, in pixels, of the bottom edge region.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @param {number=} left
 * @param {number=} top
 * @param {number=} right
 * @param {number=} bottom
 */
mx.core.EdgeMetrics = function(left, top, right, bottom) {
  left = typeof left !== 'undefined' ? left : 0;
  top = typeof top !== 'undefined' ? top : 0;
  right = typeof right !== 'undefined' ? right : 0;
  bottom = typeof bottom !== 'undefined' ? bottom : 0;
  ;
  this.left = left;
  this.top = top;
  this.right = right;
  this.bottom = bottom;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.core.EdgeMetrics', mx.core.EdgeMetrics);


/**
 * @export
 * @const
 * @type {mx.core.EdgeMetrics}
 */
mx.core.EdgeMetrics.EMPTY;


/**
 * @export
 * @param {org.apache.royale.geom.Rectangle} rect
 */
mx.core.EdgeMetrics.prototype.convertFromRectangle = function(rect) {
  this.left = rect.x;
  this.top = rect.y;
  this.right = rect.x + rect.width;
  this.bottom = rect.y + rect.height;
};


/**
 * @private
 * @type {number}
 */
mx.core.EdgeMetrics.prototype.mx_core_EdgeMetrics__bottom;


/**
 * @private
 * @type {number}
 */
mx.core.EdgeMetrics.prototype.mx_core_EdgeMetrics__left;


/**
 * @private
 * @type {number}
 */
mx.core.EdgeMetrics.prototype.mx_core_EdgeMetrics__right;


/**
 * @private
 * @type {number}
 */
mx.core.EdgeMetrics.prototype.mx_core_EdgeMetrics__top;


/**
 *  Returns a copy of this EdgeMetrics object.
 *
 *  @asreturn A copy of this EdgeMetrics object.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @return {mx.core.EdgeMetrics}
 */
mx.core.EdgeMetrics.prototype.clone = function() {
  return new mx.core.EdgeMetrics(this.left, this.top, this.right, this.bottom);
};


mx.core.EdgeMetrics.prototype.get__bottom = function() {
  return this.mx_core_EdgeMetrics__bottom;
};


mx.core.EdgeMetrics.prototype.set__bottom = function(value) {
  this.mx_core_EdgeMetrics__bottom = value;
};


mx.core.EdgeMetrics.prototype.get__left = function() {
  return this.mx_core_EdgeMetrics__left;
};


mx.core.EdgeMetrics.prototype.set__left = function(value) {
  this.mx_core_EdgeMetrics__left = value;
};


mx.core.EdgeMetrics.prototype.get__right = function() {
  return this.mx_core_EdgeMetrics__right;
};


mx.core.EdgeMetrics.prototype.set__right = function(value) {
  this.mx_core_EdgeMetrics__right = value;
};


mx.core.EdgeMetrics.prototype.get__top = function() {
  return this.mx_core_EdgeMetrics__top;
};


mx.core.EdgeMetrics.prototype.set__top = function(value) {
  this.mx_core_EdgeMetrics__top = value;
};


Object.defineProperties(mx.core.EdgeMetrics.prototype, /** @lends {mx.core.EdgeMetrics.prototype} */ {
/**
  * @export
  * @type {number} */
bottom: {
get: mx.core.EdgeMetrics.prototype.get__bottom,
set: mx.core.EdgeMetrics.prototype.set__bottom},
/**
  * @export
  * @type {number} */
left: {
get: mx.core.EdgeMetrics.prototype.get__left,
set: mx.core.EdgeMetrics.prototype.set__left},
/**
  * @export
  * @type {number} */
right: {
get: mx.core.EdgeMetrics.prototype.get__right,
set: mx.core.EdgeMetrics.prototype.set__right},
/**
  * @export
  * @type {number} */
top: {
get: mx.core.EdgeMetrics.prototype.get__top,
set: mx.core.EdgeMetrics.prototype.set__top}}
);

mx.core.EdgeMetrics.EMPTY = new mx.core.EdgeMetrics(0, 0, 0, 0);




/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.core.EdgeMetrics.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'EdgeMetrics', qName: 'mx.core.EdgeMetrics', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.core.EdgeMetrics.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'bottom': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.EdgeMetrics'},
        'left': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.EdgeMetrics'},
        'right': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.EdgeMetrics'},
        'top': { type: 'Number', access: 'readwrite', declaredBy: 'mx.core.EdgeMetrics'}
      };
    },
    methods: function () {
      return {
        'EdgeMetrics': { type: '', declaredBy: 'mx.core.EdgeMetrics', parameters: function () { return [ 'Number', true ,'Number', true ,'Number', true ,'Number', true ]; }},
        'convertFromRectangle': { type: 'void', declaredBy: 'mx.core.EdgeMetrics', parameters: function () { return [ 'org.apache.royale.geom.Rectangle', false ]; }},
        'clone': { type: 'mx.core.EdgeMetrics', declaredBy: 'mx.core.EdgeMetrics'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.core.EdgeMetrics.prototype.ROYALE_COMPILE_FLAGS = 26;
