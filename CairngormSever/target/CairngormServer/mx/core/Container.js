/**
 * Generated by Apache Royale Compiler from mx/core/Container.as
 * mx.core.Container
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.core.Container');
/* Royale Dependency List: mx.core.EdgeMetrics,mx.core.IFlexDisplayObject,mx.core.IUIComponent,mx.core.ScrollPolicy,mx.events.FlexEvent,org.apache.royale.binding.ContainerDataBinding,org.apache.royale.binding.DataBindingBase,org.apache.royale.core.ContainerBaseStrandChildren,org.apache.royale.core.IBeadLayout,org.apache.royale.core.IBorderPaddingMarginValuesImpl,org.apache.royale.core.IChild,org.apache.royale.core.ILayoutHost,org.apache.royale.core.IParent,org.apache.royale.core.ValuesManager,org.apache.royale.core.WrappedHTMLElement,org.apache.royale.core.layout.EdgeData,org.apache.royale.events.Event,org.apache.royale.events.ValueEvent,org.apache.royale.html.util.addElementToWrapper,org.apache.royale.utils.loadBeadFromValuesManager,org.apache.royale.utils.Language,XML*/

goog.require('mx.core.UIComponent');
goog.require('mx.core.IChildList');
goog.require('mx.core.IDataRenderer');
goog.require('mx.core.INavigatorContent');
goog.require('mx.managers.IFocusManagerContainer');
goog.require('org.apache.royale.core.IContainer');
goog.require('org.apache.royale.core.IContainerBaseStrandChildrenHost');
goog.require('org.apache.royale.core.IContentViewHost');
goog.require('org.apache.royale.core.ILayoutParent');
goog.require('org.apache.royale.core.ILayoutView');
goog.require('org.apache.royale.core.IMXMLDocument');



/**
 *  Constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @constructor
 * @extends {mx.core.UIComponent}
 * @implements {mx.core.IDataRenderer}
 * @implements {mx.core.IChildList}
 * @implements {org.apache.royale.core.IContainer}
 * @implements {org.apache.royale.core.ILayoutParent}
 * @implements {org.apache.royale.core.ILayoutView}
 * @implements {org.apache.royale.core.IContentViewHost}
 * @implements {org.apache.royale.core.IContainerBaseStrandChildrenHost}
 * @implements {org.apache.royale.core.IMXMLDocument}
 * @implements {mx.managers.IFocusManagerContainer}
 * @implements {mx.core.INavigatorContent}
 */
mx.core.Container = function() {
  
  this.mx_core_Container__horizontalScrollPolicy = mx.core.ScrollPolicy.OFF;
  this.mx_core_Container__verticalScrollPolicy = mx.core.ScrollPolicy.AUTO;
  mx.core.Container.base(this, 'constructor');
  this.typeNames = "Container";
};
goog.inherits(mx.core.Container, mx.core.UIComponent);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.core.Container', mx.core.Container);


/**
 * @private
 * @type {mx.core.IFlexDisplayObject}
 */
mx.core.Container.prototype.mx_core_Container__defaultButton;


/**
 * @private
 * @type {string}
 */
mx.core.Container.prototype.mx_core_Container__horizontalScrollPolicy;


/**
 * @private
 * @type {string}
 */
mx.core.Container.prototype.mx_core_Container__verticalScrollPolicy;


/**
 * @private
 * @type {string}
 */
mx.core.Container.prototype.mx_core_Container__horizontalAlign;


/**
 * @private
 * @type {Object}
 */
mx.core.Container.prototype.mx_core_Container__icon = null;


/**
 * @private
 * @type {string}
 */
mx.core.Container.prototype.mx_core_Container__label;


/**
 * @royaleignorecoercion org.apache.royale.core.WrappedHTMLElement
 * @export
 * @override
 */
mx.core.Container.prototype.createElement = function() {
  return org.apache.royale.html.util.addElementToWrapper(this, 'div');
};


/**
 * @export
 * @override
 */
mx.core.Container.prototype.addedToParent = function() {
  if (!this.initialized) {
    org.apache.royale.core.ValuesManager["valuesImpl"].init(this);
  }
  mx.core.Container.superClass_.addedToParent.apply(this);
  org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IBeadLayout, "iBeadLayout", this);
  this.dispatchEvent(new org.apache.royale.events.Event("initComplete"));
  if ((this.isHeightSizedToContent() || !isNaN(this.explicitHeight)) && (this.isWidthSizedToContent() || !isNaN(this.explicitWidth)))
    this.dispatchEvent(new org.apache.royale.events.Event("layoutNeeded"));
};


/**
 * @export
 * @override
 */
mx.core.Container.prototype.createChildren = function() {
  mx.core.Container.superClass_.createChildren.apply(this);
  if (this.getBeadByType(org.apache.royale.binding.DataBindingBase) == null)
    this.addBead(new org.apache.royale.binding.ContainerDataBinding());
  this.dispatchEvent(new org.apache.royale.events.Event("initBindings"));
};


/**
 *  Removes all children from the child list of this container.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 */
mx.core.Container.prototype.removeAllChildren = function() {
  while (this.numChildren > 0) {
    this.removeChildAt(0);
  }
};


/**
 *  @asprivate
 * @export
 */
mx.core.Container.prototype.childrenAdded = function() {
  this.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenAdded"));
};


/**
 * Dispatches a "layoutNeeded" event
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 */
mx.core.Container.prototype.layoutNeeded = function() {
  this.dispatchEvent(new org.apache.royale.events.Event("layoutNeeded"));
};


/**
 * @private
 * @type {Object}
 */
mx.core.Container.prototype.mx_core_Container__data;


/**
 * Returns the ILayoutHost which is its view. From ILayoutParent.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * @export
 * @return {org.apache.royale.core.ILayoutHost}
 */
mx.core.Container.prototype.getLayoutHost = function() {
  return org.apache.royale.utils.Language.as(this.view, org.apache.royale.core.ILayoutHost);
};


/**
 * @export
 * @param {number} index
 * @return {mx.core.IUIComponent}
 */
mx.core.Container.prototype.getLayoutChildAt = function(index) {
  return org.apache.royale.utils.Language.as(this.getElementAt(index), mx.core.IUIComponent);
};


/**
 * @private
 * @type {mx.core.EdgeMetrics}
 */
mx.core.Container.prototype.mx_core_Container__viewMetricsAndPadding;


/**
 * @private
 * @type {org.apache.royale.core.ContainerBaseStrandChildren}
 */
mx.core.Container.prototype.mx_core_Container__strandChildren;


/**
 * @asprivate
 * @export
 * @override
 */
mx.core.Container.prototype.addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  mx.core.Container.superClass_.addElement.apply(this, [ c, dispatchEvent] );
  if (dispatchEvent)
    this.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenAdded", c));
};


/**
 * @asprivate
 * @export
 * @override
 */
mx.core.Container.prototype.addElementAt = function(c, index, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  mx.core.Container.superClass_.addElementAt.apply(this, [ c, index, dispatchEvent] );
  if (dispatchEvent)
    this.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenAdded", c));
};


/**
 * @asprivate
 * @export
 * @override
 */
mx.core.Container.prototype.removeElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  mx.core.Container.superClass_.removeElement.apply(this, [ c, dispatchEvent] );
  if (dispatchEvent)
    this.dispatchEvent(new org.apache.royale.events.ValueEvent("childrenRemoved", c));
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
mx.core.Container.prototype.$addElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  mx.core.Container.superClass_.addElement.apply(this, [ c, dispatchEvent] );
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {number} index
 * @param {boolean=} dispatchEvent
 */
mx.core.Container.prototype.$addElementAt = function(c, index, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  mx.core.Container.superClass_.addElementAt.apply(this, [ c, index, dispatchEvent] );
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @param {boolean=} dispatchEvent
 */
mx.core.Container.prototype.$removeElement = function(c, dispatchEvent) {
  dispatchEvent = typeof dispatchEvent !== 'undefined' ? dispatchEvent : true;
  mx.core.Container.superClass_.removeElement.apply(this, [ c, dispatchEvent] );
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {org.apache.royale.core.IChild} c
 * @return {number}
 */
mx.core.Container.prototype.$getElementIndex = function(c) {
  return mx.core.Container.superClass_.getElementIndex.apply(this, [ c] );
};


/**
 * @asprivate
 * @suppress {undefinedNames}
 * Support strandChildren.
 * @export
 * @param {number} index
 * @return {org.apache.royale.core.IChild}
 */
mx.core.Container.prototype.$getElementAt = function(index) {
  return mx.core.Container.superClass_.getElementAt.apply(this, [ index] );
};


/**
 * @private
 * @type {Array}
 */
mx.core.Container.prototype.mx_core_Container__childDescriptors;


/**
 * @private
 * @type {boolean}
 */
mx.core.Container.prototype.mx_core_Container_creationPolicyNone = false;


/**
 *  Returns an Array of DisplayObject objects consisting of the content children 
 *  of the container.
 *  This array does <b>not</b> include the DisplayObjects that implement 
 *  the container's display elements, such as its border and 
 *  the background image.
 *
 *  @asreturn Array of DisplayObject objects consisting of the content children 
 *  of the container.
 * 
 *  @see #rawChildren
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @return {Array}
 */
mx.core.Container.prototype.getChildren = function() {
  var /** @type {Array} */ results = [];
  var /** @type {number} */ n = this.numChildren;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    results.push(this.getChildAt(i));
  }
  return results;
};


mx.core.Container.prototype.get__defaultButton = function() {
  return this.mx_core_Container__defaultButton;
};


mx.core.Container.prototype.set__defaultButton = function(value) {
  this.mx_core_Container__defaultButton = value;
};


mx.core.Container.prototype.get__textDecoration = function() {
  return "none";
};


mx.core.Container.prototype.set__textDecoration = function(val) {
};


mx.core.Container.prototype.get__horizontalScrollPolicy = function() {
  return this.mx_core_Container__horizontalScrollPolicy;
};


mx.core.Container.prototype.set__horizontalScrollPolicy = function(value) {
  var /** @type {string} */ newPolicy = value.toLowerCase();
  if (this.mx_core_Container__horizontalScrollPolicy != newPolicy) {
    this.mx_core_Container__horizontalScrollPolicy = newPolicy;
    this.dispatchEvent(new org.apache.royale.events.Event("horizontalScrollPolicyChanged"));
  }
};


mx.core.Container.prototype.get__verticalScrollPolicy = function() {
  return this.mx_core_Container__verticalScrollPolicy;
};


mx.core.Container.prototype.set__verticalScrollPolicy = function(value) {
  var /** @type {string} */ newPolicy = value.toLowerCase();
  if (this.mx_core_Container__verticalScrollPolicy != newPolicy) {
    this.mx_core_Container__verticalScrollPolicy = newPolicy;
    this.dispatchEvent(new org.apache.royale.events.Event("verticalScrollPolicyChanged"));
  }
};


mx.core.Container.prototype.get__borderVisible = function() {
  return true;
};


mx.core.Container.prototype.set__borderVisible = function(value) {
};


mx.core.Container.prototype.get__verticalGap = function() {
  org.apache.royale.utils.Language.trace("verticalGap not implemented");
  return 0;
};


mx.core.Container.prototype.set__verticalGap = function(value) {
  org.apache.royale.utils.Language.trace("verticalGap not implemented");
};


mx.core.Container.prototype.get__horizontalAlign = function() {
  return this.mx_core_Container__horizontalAlign;
};


mx.core.Container.prototype.set__horizontalAlign = function(value) {
  this.mx_core_Container__horizontalAlign = value;
};


mx.core.Container.prototype.get__horizontalGap = function() {
  org.apache.royale.utils.Language.trace("horizontalGap not implemented");
  return 0;
};


mx.core.Container.prototype.set__horizontalGap = function(value) {
  org.apache.royale.utils.Language.trace("horizontalGap not implemented");
};


mx.core.Container.prototype.get__verticalAlign = function() {
  org.apache.royale.utils.Language.trace("verticalAlign not implemented");
  return 0;
};


mx.core.Container.prototype.set__verticalAlign = function(value) {
  org.apache.royale.utils.Language.trace("verticalAlign not implemented");
};


mx.core.Container.prototype.get__borderStyle = function() {
  org.apache.royale.utils.Language.trace("borderStyle not implemented");
  return 0;
};


mx.core.Container.prototype.set__borderStyle = function(value) {
  org.apache.royale.utils.Language.trace("borderStyle not implemented");
};


mx.core.Container.prototype.get__icon = function() {
  return this.mx_core_Container__icon;
};


mx.core.Container.prototype.set__icon = function(value) {
  this.mx_core_Container__icon = value;
  this.dispatchEvent(new org.apache.royale.events.Event("iconChanged"));
};


mx.core.Container.prototype.get__label = function() {
  return this.mx_core_Container__label;
};


mx.core.Container.prototype.set__label = function(value) {
  if (value != this.mx_core_Container__label) {
    this.mx_core_Container__label = value;
    this.dispatchEvent(new org.apache.royale.events.Event("labelChanged"));
  }
};


mx.core.Container.prototype.get__data = function() {
  return this.mx_core_Container__data;
};


mx.core.Container.prototype.set__data = function(value) {
  this.mx_core_Container__data = value;
  this.dispatchEvent(new mx.events.FlexEvent(mx.events.FlexEvent.DATA_CHANGE));
};


mx.core.Container.prototype.get__viewMetricsAndPadding = function() {
  if (this.mx_core_Container__viewMetricsAndPadding) {
    return this.mx_core_Container__viewMetricsAndPadding;
  }
  if (!this.mx_core_Container__viewMetricsAndPadding) {
    this.mx_core_Container__viewMetricsAndPadding = new mx.core.EdgeMetrics();
  }
  var /** @type {mx.core.EdgeMetrics} */ o = this.mx_core_Container__viewMetricsAndPadding;
  var /** @type {org.apache.royale.core.layout.EdgeData} */ ed = org.apache.royale.utils.Language.as(org.apache.royale.core.ValuesManager["valuesImpl"], org.apache.royale.core.IBorderPaddingMarginValuesImpl).getBorderMetrics(this);
  var /** @type {mx.core.EdgeMetrics} */ vm = new mx.core.EdgeMetrics(ed.left, ed.top, ed.right, ed.bottom);
  var /** @type {org.apache.royale.core.layout.EdgeData} */ pd = org.apache.royale.utils.Language.as(org.apache.royale.core.ValuesManager["valuesImpl"], org.apache.royale.core.IBorderPaddingMarginValuesImpl).getPaddingMetrics(this);
  o.left = vm.left + pd.left;
  o.right = vm.right + pd.right;
  o.top = vm.top + pd.top;
  o.bottom = vm.bottom + pd.bottom;
  if (isNaN(o.left) || isNaN(o.top))
    this.mx_core_Container__viewMetricsAndPadding = null;
  return o;
};


mx.core.Container.prototype.get__strandChildren = function() {
  if (this.mx_core_Container__strandChildren == null) {
    this.mx_core_Container__strandChildren = new org.apache.royale.core.ContainerBaseStrandChildren(this);
  }
  return this.mx_core_Container__strandChildren;
};


mx.core.Container.prototype.get__$numElements = function() {
  return mx.core.Container.superClass_.get__numElements.apply(this);
};


mx.core.Container.prototype.get__childDescriptors = function() {
  return this.mx_core_Container__childDescriptors;
};


mx.core.Container.prototype.get__creationPolicy = function() {
  return org.apache.royale.utils.Language.string(this.getStyle("_creationPolicy"));
};


mx.core.Container.prototype.set__creationPolicy = function(value) {
  var /** @type {string} */ styleValue = value;
  this.setStyle("_creationPolicy", styleValue);
};


mx.core.Container.prototype.get__contentMouseX = function() {
  return mx.core.Container.superClass_.get__contentMouseX.apply(this);
};


mx.core.Container.prototype.get__contentMouseY = function() {
  return mx.core.Container.superClass_.get__contentMouseY.apply(this);
};


Object.defineProperties(mx.core.Container.prototype, /** @lends {mx.core.Container.prototype} */ {
/**
  * @export
  * @type {mx.core.IFlexDisplayObject} */
defaultButton: {
get: mx.core.Container.prototype.get__defaultButton,
set: mx.core.Container.prototype.set__defaultButton},
/**
  * @export
  * @type {string} */
textDecoration: {
get: mx.core.Container.prototype.get__textDecoration,
set: mx.core.Container.prototype.set__textDecoration},
/**
  * @export
  * @type {string} */
horizontalScrollPolicy: {
get: mx.core.Container.prototype.get__horizontalScrollPolicy,
set: mx.core.Container.prototype.set__horizontalScrollPolicy},
/**
  * @export
  * @type {string} */
verticalScrollPolicy: {
get: mx.core.Container.prototype.get__verticalScrollPolicy,
set: mx.core.Container.prototype.set__verticalScrollPolicy},
/**
  * @export
  * @type {boolean} */
borderVisible: {
get: mx.core.Container.prototype.get__borderVisible,
set: mx.core.Container.prototype.set__borderVisible},
/**
  * @export
  * @type {Object} */
verticalGap: {
get: mx.core.Container.prototype.get__verticalGap,
set: mx.core.Container.prototype.set__verticalGap},
/**
  * @export
  * @type {string} */
horizontalAlign: {
get: mx.core.Container.prototype.get__horizontalAlign,
set: mx.core.Container.prototype.set__horizontalAlign},
/**
  * @export
  * @type {Object} */
horizontalGap: {
get: mx.core.Container.prototype.get__horizontalGap,
set: mx.core.Container.prototype.set__horizontalGap},
/**
  * @export
  * @type {Object} */
verticalAlign: {
get: mx.core.Container.prototype.get__verticalAlign,
set: mx.core.Container.prototype.set__verticalAlign},
/**
  * @export
  * @type {Object} */
borderStyle: {
get: mx.core.Container.prototype.get__borderStyle,
set: mx.core.Container.prototype.set__borderStyle},
/**
  * @export
  * @type {Object} */
icon: {
get: mx.core.Container.prototype.get__icon,
set: mx.core.Container.prototype.set__icon},
/**
  * @export
  * @type {string} */
label: {
get: mx.core.Container.prototype.get__label,
set: mx.core.Container.prototype.set__label},
/**
  * @export
  * @type {Object} */
data: {
get: mx.core.Container.prototype.get__data,
set: mx.core.Container.prototype.set__data},
/**
  * @export
  * @type {mx.core.EdgeMetrics} */
viewMetricsAndPadding: {
get: mx.core.Container.prototype.get__viewMetricsAndPadding},
/**
  * @export
  * @type {org.apache.royale.core.IParent} */
strandChildren: {
get: mx.core.Container.prototype.get__strandChildren},
/**
  * @export
  * @type {number} */
$numElements: {
get: mx.core.Container.prototype.get__$numElements},
/**
  * @export
  * @type {Array} */
childDescriptors: {
get: mx.core.Container.prototype.get__childDescriptors},
/**
  * @export
  * @type {string} */
creationPolicy: {
get: mx.core.Container.prototype.get__creationPolicy,
set: mx.core.Container.prototype.set__creationPolicy},
/**
  * @export
  * @type {number} */
contentMouseX: {
get: mx.core.Container.prototype.get__contentMouseX},
/**
  * @export
  * @type {number} */
contentMouseY: {
get: mx.core.Container.prototype.get__contentMouseY}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.core.Container.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'Container', qName: 'mx.core.Container', kind: 'class' }], interfaces: [mx.core.IDataRenderer, mx.core.IChildList, org.apache.royale.core.IContainer, org.apache.royale.core.ILayoutParent, org.apache.royale.core.ILayoutView, org.apache.royale.core.IContentViewHost, org.apache.royale.core.IContainerBaseStrandChildrenHost, org.apache.royale.core.IMXMLDocument, mx.managers.IFocusManagerContainer, mx.core.INavigatorContent] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.core.Container.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'defaultButton': { type: 'mx.core.IFlexDisplayObject', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'textDecoration': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'horizontalScrollPolicy': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.Container', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'horizontalScrollPolicyChanged' } ] } ]; }},
        'verticalScrollPolicy': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.Container', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'verticalScrollPolicyChanged' } ] } ]; }},
        'borderVisible': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'verticalGap': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'horizontalAlign': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'horizontalGap': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'verticalAlign': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'borderStyle': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'icon': { type: 'Class', access: 'readwrite', declaredBy: 'mx.core.Container', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'iconChanged' } ] } ]; }},
        'label': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'data': { type: 'Object', access: 'readwrite', declaredBy: 'mx.core.Container', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'dataChange' } ] } ]; }},
        'viewMetricsAndPadding': { type: 'mx.core.EdgeMetrics', access: 'readonly', declaredBy: 'mx.core.Container'},
        'strandChildren': { type: 'org.apache.royale.core.IParent', access: 'readonly', declaredBy: 'mx.core.Container'},
        '$numElements': { type: 'int', access: 'readonly', declaredBy: 'mx.core.Container'},
        'childDescriptors': { type: 'Array', access: 'readonly', declaredBy: 'mx.core.Container'},
        'creationPolicy': { type: 'String', access: 'readwrite', declaredBy: 'mx.core.Container'},
        'contentMouseX': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.Container'},
        'contentMouseY': { type: 'Number', access: 'readonly', declaredBy: 'mx.core.Container'}
      };
    },
    methods: function () {
      return {
        'Container': { type: '', declaredBy: 'mx.core.Container'},
        'addedToParent': { type: 'void', declaredBy: 'mx.core.Container'},
        'removeAllChildren': { type: 'void', declaredBy: 'mx.core.Container'},
        'childrenAdded': { type: 'void', declaredBy: 'mx.core.Container'},
        'layoutNeeded': { type: 'void', declaredBy: 'mx.core.Container'},
        'getLayoutHost': { type: 'org.apache.royale.core.ILayoutHost', declaredBy: 'mx.core.Container'},
        'getLayoutChildAt': { type: 'mx.core.IUIComponent', declaredBy: 'mx.core.Container', parameters: function () { return [ 'int', false ]; }},
        'addElement': { type: 'void', declaredBy: 'mx.core.Container', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        'addElementAt': { type: 'void', declaredBy: 'mx.core.Container', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'int', false ,'Boolean', true ]; }},
        'removeElement': { type: 'void', declaredBy: 'mx.core.Container', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        '$addElement': { type: 'void', declaredBy: 'mx.core.Container', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        '$addElementAt': { type: 'void', declaredBy: 'mx.core.Container', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'int', false ,'Boolean', true ]; }},
        '$removeElement': { type: 'void', declaredBy: 'mx.core.Container', parameters: function () { return [ 'org.apache.royale.core.IChild', false ,'Boolean', true ]; }},
        '$getElementIndex': { type: 'int', declaredBy: 'mx.core.Container', parameters: function () { return [ 'org.apache.royale.core.IChild', false ]; }},
        '$getElementAt': { type: 'org.apache.royale.core.IChild', declaredBy: 'mx.core.Container', parameters: function () { return [ 'int', false ]; }},
        'getChildren': { type: 'Array', declaredBy: 'mx.core.Container'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.core.Container.prototype.ROYALE_COMPILE_FLAGS = 26;
