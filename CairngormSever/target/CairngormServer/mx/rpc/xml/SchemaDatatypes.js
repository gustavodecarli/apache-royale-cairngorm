/**
 * Generated by Apache Royale Compiler from mx/rpc/xml/SchemaDatatypes.as
 * mx.rpc.xml.SchemaDatatypes
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.xml.SchemaDatatypes');
/* Royale Dependency List: QName,mx.rpc.xml.SchemaConstants,XML*/




/**
 * @constructor
 * @param {string=} xsdURI
 */
mx.rpc.xml.SchemaDatatypes = function(xsdURI) {
  xsdURI = typeof xsdURI !== 'undefined' ? xsdURI : null;
  ;
  if (xsdURI == null || xsdURI == "")
    xsdURI = mx.rpc.xml.SchemaConstants.XSD_URI_2001;
  this.anyTypeQName = new QName(xsdURI, "anyType");
  this.anySimpleTypeQName = new QName(xsdURI, "anySimpleType");
  this.anyAtomicTypeQName = new QName(xsdURI, "anyAtomicType");
  this.stringQName = new QName(xsdURI, "string");
  this.booleanQName = new QName(xsdURI, "boolean");
  this.decimalQName = new QName(xsdURI, "decimal");
  this.precisionDecimal = new QName(xsdURI, "precisionDecimal");
  this.floatQName = new QName(xsdURI, "float");
  this.doubleQName = new QName(xsdURI, "double");
  this.durationQName = new QName(xsdURI, "duration");
  this.dateTimeQName = new QName(xsdURI, "dateTime");
  this.timeQName = new QName(xsdURI, "time");
  this.dateQName = new QName(xsdURI, "date");
  this.gYearMonthQName = new QName(xsdURI, "gYearMonth");
  this.gYearQName = new QName(xsdURI, "gYear");
  this.gMonthDayQName = new QName(xsdURI, "gMonthDay");
  this.gDayQName = new QName(xsdURI, "gDay");
  this.gMonthQName = new QName(xsdURI, "gMonth");
  this.hexBinaryQName = new QName(xsdURI, "hexBinary");
  this.base64BinaryQName = new QName(xsdURI, "base64Binary");
  this.anyURIQName = new QName(xsdURI, "anyURI");
  this.QNameQName = new QName(xsdURI, "QName");
  this.NOTATIONQName = new QName(xsdURI, "NOTATION");
  this.normalizedStringQName = new QName(xsdURI, "normalizedString");
  this.tokenQName = new QName(xsdURI, "token");
  this.languageQName = new QName(xsdURI, "language");
  this.NMTOKENQName = new QName(xsdURI, "NMTOKEN");
  this.NMTOKENSQName = new QName(xsdURI, "NMTOKENS");
  this.NameQName = new QName(xsdURI, "Name");
  this.NCNameQName = new QName(xsdURI, "NCName");
  this.IDQName = new QName(xsdURI, "ID");
  this.IDREF = new QName(xsdURI, "IDREF");
  this.IDREFS = new QName(xsdURI, "IDREFS");
  this.ENTITY = new QName(xsdURI, "ENTITY");
  this.ENTITIES = new QName(xsdURI, "ENTITIES");
  this.integerQName = new QName(xsdURI, "integer");
  this.nonPositiveIntegerQName = new QName(xsdURI, "nonPositiveInteger");
  this.negativeIntegerQName = new QName(xsdURI, "negativeInteger");
  this.longQName = new QName(xsdURI, "long");
  this.intQName = new QName(xsdURI, "int");
  this.shortQName = new QName(xsdURI, "short");
  this.byteQName = new QName(xsdURI, "byte");
  this.nonNegativeIntegerQName = new QName(xsdURI, "nonNegativeInteger");
  this.unsignedLongQName = new QName(xsdURI, "unsignedLong");
  this.unsignedIntQName = new QName(xsdURI, "unsignedInt");
  this.unsignedShortQName = new QName(xsdURI, "unsignedShort");
  this.unsignedByteQName = new QName(xsdURI, "unsignedByte");
  this.positiveIntegerQName = new QName(xsdURI, "positiveInteger");
  this.yearMonthDurationQName = new QName(xsdURI, "yearMonthDuration");
  this.dayTimeDurationQName = new QName(xsdURI, "dayTimeDuration");
  if (xsdURI == mx.rpc.xml.SchemaConstants.XSD_URI_1999)
    this.timeInstantQName = new QName(xsdURI, "timeInstant");
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.xml.SchemaDatatypes', mx.rpc.xml.SchemaDatatypes);


/**
 * @export
 * @param {string=} xsdURI
 * @return {mx.rpc.xml.SchemaDatatypes}
 */
mx.rpc.xml.SchemaDatatypes.getConstants = function(xsdURI) {
  xsdURI = typeof xsdURI !== 'undefined' ? xsdURI : null;
  if (mx.rpc.xml.SchemaDatatypes.constantsCache == null)
    mx.rpc.xml.SchemaDatatypes.constantsCache = {};
  if (xsdURI == null || xsdURI == "")
    xsdURI = mx.rpc.xml.SchemaConstants.XSD_URI_2001;
  var /** @type {mx.rpc.xml.SchemaDatatypes} */ constants = mx.rpc.xml.SchemaDatatypes.constantsCache[xsdURI];
  if (constants == null) {
    constants = new mx.rpc.xml.SchemaDatatypes(xsdURI);
    mx.rpc.xml.SchemaDatatypes.constantsCache[xsdURI] = constants;
  }
  return constants;
};


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.anyTypeQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.anySimpleTypeQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.anyAtomicTypeQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.stringQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.booleanQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.decimalQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.precisionDecimal;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.floatQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.doubleQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.durationQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.dateTimeQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.timeQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.dateQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.gYearMonthQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.gYearQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.gMonthDayQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.gDayQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.gMonthQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.hexBinaryQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.base64BinaryQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.anyURIQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.QNameQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.NOTATIONQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.normalizedStringQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.tokenQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.languageQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.NMTOKENQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.NMTOKENSQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.NameQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.NCNameQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.IDQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.IDREF;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.IDREFS;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.ENTITY;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.ENTITIES;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.integerQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.nonPositiveIntegerQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.negativeIntegerQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.longQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.intQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.shortQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.byteQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.nonNegativeIntegerQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.unsignedLongQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.unsignedIntQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.unsignedShortQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.unsignedByteQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.positiveIntegerQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.yearMonthDurationQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.dayTimeDurationQName;


/**
 * @export
 * @type {QName}
 */
mx.rpc.xml.SchemaDatatypes.prototype.timeInstantQName;


/**
 * @private
 * @type {Object}
 */
mx.rpc.xml.SchemaDatatypes.constantsCache;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.xml.SchemaDatatypes.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SchemaDatatypes', qName: 'mx.rpc.xml.SchemaDatatypes', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.xml.SchemaDatatypes.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'anyTypeQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.anyTypeQName = v : inst.anyTypeQName;}},
        'anySimpleTypeQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.anySimpleTypeQName = v : inst.anySimpleTypeQName;}},
        'anyAtomicTypeQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.anyAtomicTypeQName = v : inst.anyAtomicTypeQName;}},
        'stringQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.stringQName = v : inst.stringQName;}},
        'booleanQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.booleanQName = v : inst.booleanQName;}},
        'decimalQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.decimalQName = v : inst.decimalQName;}},
        'precisionDecimal': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.precisionDecimal = v : inst.precisionDecimal;}},
        'floatQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.floatQName = v : inst.floatQName;}},
        'doubleQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.doubleQName = v : inst.doubleQName;}},
        'durationQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.durationQName = v : inst.durationQName;}},
        'dateTimeQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.dateTimeQName = v : inst.dateTimeQName;}},
        'timeQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.timeQName = v : inst.timeQName;}},
        'dateQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.dateQName = v : inst.dateQName;}},
        'gYearMonthQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.gYearMonthQName = v : inst.gYearMonthQName;}},
        'gYearQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.gYearQName = v : inst.gYearQName;}},
        'gMonthDayQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.gMonthDayQName = v : inst.gMonthDayQName;}},
        'gDayQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.gDayQName = v : inst.gDayQName;}},
        'gMonthQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.gMonthQName = v : inst.gMonthQName;}},
        'hexBinaryQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.hexBinaryQName = v : inst.hexBinaryQName;}},
        'base64BinaryQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.base64BinaryQName = v : inst.base64BinaryQName;}},
        'anyURIQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.anyURIQName = v : inst.anyURIQName;}},
        'QNameQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.QNameQName = v : inst.QNameQName;}},
        'NOTATIONQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.NOTATIONQName = v : inst.NOTATIONQName;}},
        'normalizedStringQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.normalizedStringQName = v : inst.normalizedStringQName;}},
        'tokenQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.tokenQName = v : inst.tokenQName;}},
        'languageQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.languageQName = v : inst.languageQName;}},
        'NMTOKENQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.NMTOKENQName = v : inst.NMTOKENQName;}},
        'NMTOKENSQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.NMTOKENSQName = v : inst.NMTOKENSQName;}},
        'NameQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.NameQName = v : inst.NameQName;}},
        'NCNameQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.NCNameQName = v : inst.NCNameQName;}},
        'IDQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.IDQName = v : inst.IDQName;}},
        'IDREF': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.IDREF = v : inst.IDREF;}},
        'IDREFS': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.IDREFS = v : inst.IDREFS;}},
        'ENTITY': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.ENTITY = v : inst.ENTITY;}},
        'ENTITIES': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.ENTITIES = v : inst.ENTITIES;}},
        'integerQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.integerQName = v : inst.integerQName;}},
        'nonPositiveIntegerQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.nonPositiveIntegerQName = v : inst.nonPositiveIntegerQName;}},
        'negativeIntegerQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.negativeIntegerQName = v : inst.negativeIntegerQName;}},
        'longQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.longQName = v : inst.longQName;}},
        'intQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.intQName = v : inst.intQName;}},
        'shortQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.shortQName = v : inst.shortQName;}},
        'byteQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.byteQName = v : inst.byteQName;}},
        'nonNegativeIntegerQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.nonNegativeIntegerQName = v : inst.nonNegativeIntegerQName;}},
        'unsignedLongQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.unsignedLongQName = v : inst.unsignedLongQName;}},
        'unsignedIntQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.unsignedIntQName = v : inst.unsignedIntQName;}},
        'unsignedShortQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.unsignedShortQName = v : inst.unsignedShortQName;}},
        'unsignedByteQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.unsignedByteQName = v : inst.unsignedByteQName;}},
        'positiveIntegerQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.positiveIntegerQName = v : inst.positiveIntegerQName;}},
        'yearMonthDurationQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.yearMonthDurationQName = v : inst.yearMonthDurationQName;}},
        'dayTimeDurationQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.dayTimeDurationQName = v : inst.dayTimeDurationQName;}},
        'timeInstantQName': { type: 'QName', get_set: function (/** mx.rpc.xml.SchemaDatatypes */ inst, /** * */ v) {return v !== undefined ? inst.timeInstantQName = v : inst.timeInstantQName;}}
      };
    },
    methods: function () {
      return {
        'SchemaDatatypes': { type: '', declaredBy: 'mx.rpc.xml.SchemaDatatypes', parameters: function () { return [ 'String', true ]; }},
        '|getConstants': { type: 'mx.rpc.xml.SchemaDatatypes', declaredBy: 'mx.rpc.xml.SchemaDatatypes', parameters: function () { return [ 'String', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.xml.SchemaDatatypes.prototype.ROYALE_COMPILE_FLAGS = 26;
