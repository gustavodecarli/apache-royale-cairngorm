/**
 * Generated by Apache Royale Compiler from mx/rpc/wsdl/WSDLEncoding.as
 * mx.rpc.wsdl.WSDLEncoding
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.wsdl.WSDLEncoding');
/* Royale Dependency List: QName,mx.rpc.soap.SOAPConstants,XML*/




/**
 * @constructor
 */
mx.rpc.wsdl.WSDLEncoding = function() {
  
  this.mx_rpc_wsdl_WSDLEncoding__encodingStyle = mx.rpc.soap.SOAPConstants.SOAP_ENCODING_URI;
  this.mx_rpc_wsdl_WSDLEncoding__useStyle = mx.rpc.soap.SOAPConstants.DEFAULT_USE;
  ;
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.wsdl.WSDLEncoding', mx.rpc.wsdl.WSDLEncoding);


/**
 * Determines whether a part should be included when encoding this message.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} name
 * @return {boolean}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.hasPart = function(name) {
  if (this.mx_rpc_wsdl_WSDLEncoding__parts != null && this.mx_rpc_wsdl_WSDLEncoding__parts.length > 0) {
    var foreachiter0_target = this.mx_rpc_wsdl_WSDLEncoding__parts;
    for (var foreachiter0 in foreachiter0_target) 
    {
    var part = foreachiter0_target[foreachiter0];
    {
      if (part == name)
        return true;
    }}
    
    return false;
  }
  return true;
};


/**
 * Establishes a subset of parts that should be included in the message.
 * If a subset is not defined, the default is to include all parts in a
 * message.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @param {string} value
 */
mx.rpc.wsdl.WSDLEncoding.prototype.setParts = function(value) {
  if (value != null && value.length > 0) {
    this.mx_rpc_wsdl_WSDLEncoding__parts = [];
    var /** @type {Array} */ array = value.split(" ");
    var foreachiter1_target = array;
    for (var foreachiter1 in foreachiter1_target) 
    {
    var part = foreachiter1_target[foreachiter1];
    {
      if (part.length > 0) {
        this.mx_rpc_wsdl_WSDLEncoding__parts.push(part);
      }
    }}
    
  } else {
    this.mx_rpc_wsdl_WSDLEncoding__parts = null;
  }
};


/**
 * @private
 * @type {string}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.mx_rpc_wsdl_WSDLEncoding__encodingStyle;


/**
 * @private
 * @type {QName}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.mx_rpc_wsdl_WSDLEncoding__message;


/**
 * @private
 * @type {string}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.mx_rpc_wsdl_WSDLEncoding__namespaceURI;


/**
 * @private
 * @type {Array}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.mx_rpc_wsdl_WSDLEncoding__parts;


/**
 * @private
 * @type {mx.rpc.soap.SOAPConstants}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.mx_rpc_wsdl_WSDLEncoding__soapConstants;


/**
 * @private
 * @type {string}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.mx_rpc_wsdl_WSDLEncoding__useStyle;


mx.rpc.wsdl.WSDLEncoding.prototype.get__encodingStyle = function() {
  if (this.mx_rpc_wsdl_WSDLEncoding__encodingStyle == null)
    this.mx_rpc_wsdl_WSDLEncoding__encodingStyle = this.soapConstants.encodingURI;
  return this.mx_rpc_wsdl_WSDLEncoding__encodingStyle;
};


mx.rpc.wsdl.WSDLEncoding.prototype.set__encodingStyle = function(value) {
  this.mx_rpc_wsdl_WSDLEncoding__encodingStyle = value ? value : this.soapConstants.encodingURI;
};


mx.rpc.wsdl.WSDLEncoding.prototype.get__message = function() {
  return this.mx_rpc_wsdl_WSDLEncoding__message;
};


mx.rpc.wsdl.WSDLEncoding.prototype.set__message = function(value) {
  this.mx_rpc_wsdl_WSDLEncoding__message = value;
};


mx.rpc.wsdl.WSDLEncoding.prototype.get__namespaceURI = function() {
  return this.mx_rpc_wsdl_WSDLEncoding__namespaceURI;
};


mx.rpc.wsdl.WSDLEncoding.prototype.set__namespaceURI = function(value) {
  this.mx_rpc_wsdl_WSDLEncoding__namespaceURI = value;
};


mx.rpc.wsdl.WSDLEncoding.prototype.get__parts = function() {
  return this.mx_rpc_wsdl_WSDLEncoding__parts;
};


mx.rpc.wsdl.WSDLEncoding.prototype.get__soapConstants = function() {
  if (this.mx_rpc_wsdl_WSDLEncoding__soapConstants == null)
    this.mx_rpc_wsdl_WSDLEncoding__soapConstants = mx.rpc.soap.SOAPConstants.getConstants(null);
  return this.mx_rpc_wsdl_WSDLEncoding__soapConstants;
};


mx.rpc.wsdl.WSDLEncoding.prototype.get__useStyle = function() {
  return this.mx_rpc_wsdl_WSDLEncoding__useStyle;
};


mx.rpc.wsdl.WSDLEncoding.prototype.set__useStyle = function(value) {
  this.mx_rpc_wsdl_WSDLEncoding__useStyle = value;
};


Object.defineProperties(mx.rpc.wsdl.WSDLEncoding.prototype, /** @lends {mx.rpc.wsdl.WSDLEncoding.prototype} */ {
/**
  * @export
  * @type {string} */
encodingStyle: {
get: mx.rpc.wsdl.WSDLEncoding.prototype.get__encodingStyle,
set: mx.rpc.wsdl.WSDLEncoding.prototype.set__encodingStyle},
/**
  * @export
  * @type {QName} */
message: {
get: mx.rpc.wsdl.WSDLEncoding.prototype.get__message,
set: mx.rpc.wsdl.WSDLEncoding.prototype.set__message},
/**
  * @export
  * @type {string} */
namespaceURI: {
get: mx.rpc.wsdl.WSDLEncoding.prototype.get__namespaceURI,
set: mx.rpc.wsdl.WSDLEncoding.prototype.set__namespaceURI},
/**
  * @export
  * @type {Array} */
parts: {
get: mx.rpc.wsdl.WSDLEncoding.prototype.get__parts},
/**
  * @export
  * @type {mx.rpc.soap.SOAPConstants} */
soapConstants: {
get: mx.rpc.wsdl.WSDLEncoding.prototype.get__soapConstants},
/**
  * @export
  * @type {string} */
useStyle: {
get: mx.rpc.wsdl.WSDLEncoding.prototype.get__useStyle,
set: mx.rpc.wsdl.WSDLEncoding.prototype.set__useStyle}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'WSDLEncoding', qName: 'mx.rpc.wsdl.WSDLEncoding', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'encodingStyle': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.wsdl.WSDLEncoding'},
        'message': { type: 'QName', access: 'readwrite', declaredBy: 'mx.rpc.wsdl.WSDLEncoding'},
        'namespaceURI': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.wsdl.WSDLEncoding'},
        'parts': { type: 'Array', access: 'readonly', declaredBy: 'mx.rpc.wsdl.WSDLEncoding'},
        'soapConstants': { type: 'mx.rpc.soap.SOAPConstants', access: 'readonly', declaredBy: 'mx.rpc.wsdl.WSDLEncoding'},
        'useStyle': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.wsdl.WSDLEncoding'}
      };
    },
    methods: function () {
      return {
        'WSDLEncoding': { type: '', declaredBy: 'mx.rpc.wsdl.WSDLEncoding'},
        'hasPart': { type: 'Boolean', declaredBy: 'mx.rpc.wsdl.WSDLEncoding', parameters: function () { return [ 'String', false ]; }},
        'setParts': { type: 'void', declaredBy: 'mx.rpc.wsdl.WSDLEncoding', parameters: function () { return [ 'String', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.wsdl.WSDLEncoding.prototype.ROYALE_COMPILE_FLAGS = 26;
