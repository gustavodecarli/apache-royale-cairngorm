/**
 * Generated by Apache Royale Compiler from mx/rpc/http/HTTPService.as
 * mx.rpc.http.HTTPService
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.http.HTTPService');
/* Royale Dependency List: mx.core.mx_internal,mx.messaging.ChannelSet,mx.messaging.config.LoaderConfig,mx.rpc.AsyncRequest,mx.rpc.AsyncToken,mx.rpc.events.AbstractEvent,mx.rpc.http.SerializationFilter,mx.utils.URLUtil,XML*/
goog.provide('mx.rpc.http.HTTPService.HTTPOperation');

goog.require('mx.rpc.AbstractInvoker');
goog.require('mx.rpc.http.AbstractOperation');



/**
 *  Creates a new HTTPService. If you expect the service to send using relative URLs you may
 *  wish to specify the <code>rootURL</code> that will be the basis for determining the full URL (one example
 *  would be <code>Application.application.url</code>).
 *
 * @asparam rootURL The URL the HTTPService should use when computing relative URLS.
 *
 * @asparam destination An HTTPService destination name in the service-config.xml file.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @constructor
 * @extends {mx.rpc.AbstractInvoker}
 * @param {string=} rootURL
 * @param {string=} destination
 */
mx.rpc.http.HTTPService = function(rootURL, destination) {
  rootURL = typeof rootURL !== 'undefined' ? rootURL : null;
  destination = typeof destination !== 'undefined' ? destination : null;
  mx.rpc.http.HTTPService.base(this, 'constructor');
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation = new mx.rpc.http.HTTPService.HTTPOperation(this);
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.makeObjectsBindable = false;
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.http_$$www_adobe_com$2006$flex$mx$internal___rootURL = rootURL;
  if (destination == null) {
    if (mx.utils.URLUtil.isHttpsURL(mx.messaging.config.LoaderConfig["url"]))
      this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.destination = mx.rpc.http.HTTPService.DEFAULT_DESTINATION_HTTPS;
    else
      this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.destination = mx.rpc.http.HTTPService.DEFAULT_DESTINATION_HTTP;
  } else {
    this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.destination = destination;
    this.useProxy = true;
  }
};
goog.inherits(mx.rpc.http.HTTPService, mx.rpc.AbstractInvoker);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.http.HTTPService', mx.rpc.http.HTTPService);


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.RESULT_FORMAT_E4X = "e4x";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.RESULT_FORMAT_FLASHVARS = "flashvars";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.RESULT_FORMAT_OBJECT = "object";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.RESULT_FORMAT_ARRAY = "array";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.RESULT_FORMAT_TEXT = "text";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.RESULT_FORMAT_XML = "xml";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.CONTENT_TYPE_XML = "application/xml";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.CONTENT_TYPE_FORM = "application/x-www-form-urlencoded";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.DEFAULT_DESTINATION_HTTP = "DefaultHTTP";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.DEFAULT_DESTINATION_HTTPS = "DefaultHTTPS";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.ERROR_URL_REQUIRED = "Client.URLRequired";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.ERROR_DECODING = "Client.CouldNotDecode";


/**
 * @export
 * @const
 * @type {string}
 */
mx.rpc.http.HTTPService.ERROR_ENCODING = "Client.CouldNotEncode";


/**
 * @type {mx.rpc.http.AbstractOperation}
 */
mx.rpc.http.HTTPService.prototype.http_$$www_adobe_com$2006$flex$mx$internal__operation;


/**
 *  @inheritDoc
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @override
 */
mx.rpc.http.HTTPService.prototype.clearResult = function(fireBindingEvent) {
  fireBindingEvent = typeof fireBindingEvent !== 'undefined' ? fireBindingEvent : true;
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.clearResult(fireBindingEvent);
};


/**
 *  Logs the user out of the destination. 
 *  Logging out of a destination applies to everything connected using the same channel
 *  as specified in the server configuration. For example, if you're connected over the my-rtmp channel
 *  and you log out using one of your RPC components, anything that was connected over my-rtmp is logged out.
 *
 *  <p><b>Note:</b> Adobe recommends that you use the mx.messaging.ChannelSet.logout() method
 *  rather than this method. </p>
 *
 *  @see mx.messaging.ChannelSet#logout()   
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 */
mx.rpc.http.HTTPService.prototype.logout = function() {
  this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.logout();
};


/**
 *  Executes an HTTPService request. The parameters are optional, but if specified should
 *  be an Object containing name-value pairs or an XML object depending on the <code>contentType</code>.
 *
 *  @asparam parameters An Object containing name-value pairs or an
 *  XML object, depending on the content type for service
 *  requests.
 * 
 *  @asreturn An object representing the asynchronous completion token. It is the same object
 *  available in the <code>result</code> or <code>fault</code> event's <code>token</code> property.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @param {Object=} parameters
 * @return {mx.rpc.AsyncToken}
 */
mx.rpc.http.HTTPService.prototype.send = function(parameters) {
  parameters = typeof parameters !== 'undefined' ? parameters : null;
  if (parameters == null)
    parameters = this.request;
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.sendBody(parameters);
};


/**
 *  Disconnects the service's network connection.
 *  This method does not wait for outstanding network operations to complete.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 */
mx.rpc.http.HTTPService.prototype.disconnect = function() {
  this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.disconnect();
};


/**
 *  Sets the credentials for the destination accessed by the service.
 *  The credentials are applied to all services connected over the same ChannelSet.
 *  Note that services that use a proxy to a remote destination
 *  will need to call the <code>setRemoteCredentials()</code> method instead.
 * 
 *  @asparam username the username for the destination.
 *  @asparam password the password for the destination.
 *  @asparam charset The character set encoding to use while encoding the
 *  credentials. The default is null, which implies the legacy charset of
 *  ISO-Latin-1. The only other supported charset is &quot;UTF-8&quot;.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @param {string} username
 * @param {string} password
 * @param {string=} charset
 */
mx.rpc.http.HTTPService.prototype.setCredentials = function(username, password, charset) {
  charset = typeof charset !== 'undefined' ? charset : null;
  this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.setCredentials(username, password, charset);
};


/**
 *  The username and password to authenticate a user when accessing
 *  the HTTP URL. These are passed as part of the HTTP Authorization
 *  header from the proxy to the endpoint. If the <code>useProxy</code> property
 *  is set to is false, this property is ignored.
 *     
 *  @asparam remoteUsername the username to pass to the remote endpoint.
 *  @asparam remotePassword the password to pass to the remote endpoint.
 *  @asparam charset The character set encoding to use while encoding the
 *  remote credentials. The default is null, which implies the legacy
 *  charset of ISO-Latin-1. The only other supported charset is
 *  &quot;UTF-8&quot;.
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @param {string} remoteUsername
 * @param {string} remotePassword
 * @param {string=} charset
 */
mx.rpc.http.HTTPService.prototype.setRemoteCredentials = function(remoteUsername, remotePassword, charset) {
  charset = typeof charset !== 'undefined' ? charset : null;
  this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.setRemoteCredentials(remoteUsername, remotePassword, charset);
};


/**
 *  @inheritDoc
 *
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 0.9.3
 * @export
 * @override
 */
mx.rpc.http.HTTPService.prototype.cancel = function(id) {
  id = typeof id !== 'undefined' ? id : null;
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.cancel(id);
};


mx.rpc.http.HTTPService.prototype.http_$$www_adobe_com$2006$flex$mx$internal__get__asyncRequest = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest;
};


mx.rpc.http.HTTPService.prototype.http_$$www_adobe_com$2006$flex$mx$internal__set__asyncRequest = function(ar) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest = ar;
};


mx.rpc.http.HTTPService.prototype.get__channelSet = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.channelSet;
};


mx.rpc.http.HTTPService.prototype.set__channelSet = function(value) {
  this.useProxy = true;
  this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.channelSet = value;
};


mx.rpc.http.HTTPService.prototype.get__contentType = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.contentType;
};


mx.rpc.http.HTTPService.prototype.set__contentType = function(c) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.contentType = c;
};


mx.rpc.http.HTTPService.prototype.get__concurrency = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.concurrency;
};


mx.rpc.http.HTTPService.prototype.set__concurrency = function(c) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.concurrency = c;
};


mx.rpc.http.HTTPService.prototype.get__destination = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.destination;
};


mx.rpc.http.HTTPService.prototype.set__destination = function(value) {
  this.useProxy = true;
  this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.destination = value;
};


mx.rpc.http.HTTPService.prototype.get__makeObjectsBindable = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.makeObjectsBindable;
};


mx.rpc.http.HTTPService.prototype.set__makeObjectsBindable = function(b) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.makeObjectsBindable = b;
};


mx.rpc.http.HTTPService.prototype.get__headers = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.headers;
};


mx.rpc.http.HTTPService.prototype.set__headers = function(r) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.headers = r;
};


mx.rpc.http.HTTPService.prototype.get__method = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.method;
};


mx.rpc.http.HTTPService.prototype.set__method = function(m) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.method = m;
};


mx.rpc.http.HTTPService.prototype.get__request = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.request;
};


mx.rpc.http.HTTPService.prototype.set__request = function(r) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.request = r;
};


mx.rpc.http.HTTPService.prototype.get__resultFormat = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.resultFormat;
};


mx.rpc.http.HTTPService.prototype.set__resultFormat = function(rf) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.resultFormat = rf;
};


mx.rpc.http.HTTPService.prototype.get__rootURL = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.rootURL;
};


mx.rpc.http.HTTPService.prototype.set__rootURL = function(ru) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.rootURL = ru;
};


mx.rpc.http.HTTPService.prototype.get__showBusyCursor = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.showBusyCursor;
};


mx.rpc.http.HTTPService.prototype.set__showBusyCursor = function(sbc) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.showBusyCursor = sbc;
};


mx.rpc.http.HTTPService.prototype.get__serializationFilter = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.serializationFilter;
};


mx.rpc.http.HTTPService.prototype.set__serializationFilter = function(s) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.serializationFilter = s;
};


mx.rpc.http.HTTPService.prototype.get__url = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.url;
};


mx.rpc.http.HTTPService.prototype.set__url = function(u) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.url = u;
};


mx.rpc.http.HTTPService.prototype.get__useProxy = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.useProxy;
};


mx.rpc.http.HTTPService.prototype.set__useProxy = function(u) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.useProxy = u;
};


mx.rpc.http.HTTPService.prototype.get__xmlDecode = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.xmlDecode;
};


mx.rpc.http.HTTPService.prototype.set__xmlDecode = function(u) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.xmlDecode = u;
};


mx.rpc.http.HTTPService.prototype.get__xmlEncode = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.xmlEncode;
};


mx.rpc.http.HTTPService.prototype.set__xmlEncode = function(u) {
  this.http_$$www_adobe_com$2006$flex$mx$internal__operation.xmlEncode = u;
};


mx.rpc.http.HTTPService.prototype.get__lastResult = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__operation.lastResult;
};


mx.rpc.http.HTTPService.prototype.get__requestTimeout = function() {
  return this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.requestTimeout;
};


mx.rpc.http.HTTPService.prototype.set__requestTimeout = function(value) {
  if (this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.requestTimeout != value) {
    this.http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest.requestTimeout = value;
    if (this.http_$$www_adobe_com$2006$flex$mx$internal__operation)
      this.http_$$www_adobe_com$2006$flex$mx$internal__operation.requestTimeout = value;
  }
};


Object.defineProperties(mx.rpc.http.HTTPService.prototype, /** @lends {mx.rpc.http.HTTPService.prototype} */ {
/**
  * @export
  * @type {mx.rpc.AsyncRequest} */
http_$$www_adobe_com$2006$flex$mx$internal__asyncRequest: {
get: mx.rpc.http.HTTPService.prototype.http_$$www_adobe_com$2006$flex$mx$internal__get__asyncRequest,
set: mx.rpc.http.HTTPService.prototype.http_$$www_adobe_com$2006$flex$mx$internal__set__asyncRequest},
/**
  * @export
  * @type {mx.messaging.ChannelSet} */
channelSet: {
get: mx.rpc.http.HTTPService.prototype.get__channelSet,
set: mx.rpc.http.HTTPService.prototype.set__channelSet},
/**
  * @export
  * @type {string} */
contentType: {
get: mx.rpc.http.HTTPService.prototype.get__contentType,
set: mx.rpc.http.HTTPService.prototype.set__contentType},
/**
  * @export
  * @type {string} */
concurrency: {
get: mx.rpc.http.HTTPService.prototype.get__concurrency,
set: mx.rpc.http.HTTPService.prototype.set__concurrency},
/**
  * @export
  * @type {string} */
destination: {
get: mx.rpc.http.HTTPService.prototype.get__destination,
set: mx.rpc.http.HTTPService.prototype.set__destination},
/**
  * @export
  * @type {boolean} */
makeObjectsBindable: {
get: mx.rpc.http.HTTPService.prototype.get__makeObjectsBindable,
set: mx.rpc.http.HTTPService.prototype.set__makeObjectsBindable},
/**
  * @export
  * @type {Object} */
headers: {
get: mx.rpc.http.HTTPService.prototype.get__headers,
set: mx.rpc.http.HTTPService.prototype.set__headers},
/**
  * @export
  * @type {string} */
method: {
get: mx.rpc.http.HTTPService.prototype.get__method,
set: mx.rpc.http.HTTPService.prototype.set__method},
/**
  * @export
  * @type {Object} */
request: {
get: mx.rpc.http.HTTPService.prototype.get__request,
set: mx.rpc.http.HTTPService.prototype.set__request},
/**
  * @export
  * @type {string} */
resultFormat: {
get: mx.rpc.http.HTTPService.prototype.get__resultFormat,
set: mx.rpc.http.HTTPService.prototype.set__resultFormat},
/**
  * @export
  * @type {string} */
rootURL: {
get: mx.rpc.http.HTTPService.prototype.get__rootURL,
set: mx.rpc.http.HTTPService.prototype.set__rootURL},
/**
  * @export
  * @type {boolean} */
showBusyCursor: {
get: mx.rpc.http.HTTPService.prototype.get__showBusyCursor,
set: mx.rpc.http.HTTPService.prototype.set__showBusyCursor},
/**
  * @export
  * @type {mx.rpc.http.SerializationFilter} */
serializationFilter: {
get: mx.rpc.http.HTTPService.prototype.get__serializationFilter,
set: mx.rpc.http.HTTPService.prototype.set__serializationFilter},
/**
  * @export
  * @type {string} */
url: {
get: mx.rpc.http.HTTPService.prototype.get__url,
set: mx.rpc.http.HTTPService.prototype.set__url},
/**
  * @export
  * @type {boolean} */
useProxy: {
get: mx.rpc.http.HTTPService.prototype.get__useProxy,
set: mx.rpc.http.HTTPService.prototype.set__useProxy},
/**
  * @export
  * @type {Function} */
xmlDecode: {
get: mx.rpc.http.HTTPService.prototype.get__xmlDecode,
set: mx.rpc.http.HTTPService.prototype.set__xmlDecode},
/**
  * @export
  * @type {Function} */
xmlEncode: {
get: mx.rpc.http.HTTPService.prototype.get__xmlEncode,
set: mx.rpc.http.HTTPService.prototype.set__xmlEncode},
/**
  * @export
  * @type {Object} */
lastResult: {
get: mx.rpc.http.HTTPService.prototype.get__lastResult},
/**
  * @export
  * @type {number} */
requestTimeout: {
get: mx.rpc.http.HTTPService.prototype.get__requestTimeout,
set: mx.rpc.http.HTTPService.prototype.set__requestTimeout}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.http.HTTPService.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'HTTPService', qName: 'mx.rpc.http.HTTPService', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.http.HTTPService.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'http://www.adobe.com/2006/flex/mx/internal::operation': { type: 'mx.rpc.http.AbstractOperation', get_set: function (/** mx.rpc.http.HTTPService */ inst, /** * */ v) {return v !== undefined ? inst.http_$$www_adobe_com$2006$flex$mx$internal__operation = v : inst.http_$$www_adobe_com$2006$flex$mx$internal__operation;}}
      };
    },
    accessors: function () {
      return {
        'http://www.adobe.com/2006/flex/mx/internal::asyncRequest': { type: 'mx.rpc.AsyncRequest', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'channelSet': { type: 'mx.messaging.ChannelSet', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'contentType': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'concurrency': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'destination': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'makeObjectsBindable': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'headers': { type: 'Object', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'method': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'request': { type: 'Object', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'resultFormat': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'rootURL': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'showBusyCursor': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'serializationFilter': { type: 'mx.rpc.http.SerializationFilter', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'url': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'useProxy': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'xmlDecode': { type: 'Function', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'xmlEncode': { type: 'Function', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'},
        'lastResult': { type: 'Object', access: 'readonly', declaredBy: 'mx.rpc.http.HTTPService', metadata: function () { return [ { name: 'Bindable', args: [ { key: '', value: 'resultForBinding' } ] } ]; }},
        'requestTimeout': { type: 'int', access: 'readwrite', declaredBy: 'mx.rpc.http.HTTPService'}
      };
    },
    methods: function () {
      return {
        'HTTPService': { type: '', declaredBy: 'mx.rpc.http.HTTPService', parameters: function () { return [ 'String', true ,'String', true ]; }},
        'clearResult': { type: 'void', declaredBy: 'mx.rpc.http.HTTPService', parameters: function () { return [ 'Boolean', true ]; }},
        'logout': { type: 'void', declaredBy: 'mx.rpc.http.HTTPService'},
        'send': { type: 'mx.rpc.AsyncToken', declaredBy: 'mx.rpc.http.HTTPService', parameters: function () { return [ 'Object', true ]; }},
        'disconnect': { type: 'void', declaredBy: 'mx.rpc.http.HTTPService'},
        'setCredentials': { type: 'void', declaredBy: 'mx.rpc.http.HTTPService', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }},
        'setRemoteCredentials': { type: 'void', declaredBy: 'mx.rpc.http.HTTPService', parameters: function () { return [ 'String', false ,'String', false ,'String', true ]; }},
        'cancel': { type: 'mx.rpc.AsyncToken', declaredBy: 'mx.rpc.http.HTTPService', parameters: function () { return [ 'String', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.http.HTTPService.prototype.ROYALE_COMPILE_FLAGS = 26;



/**
 * @constructor
 * @extends {mx.rpc.http.AbstractOperation}
 * @param {mx.rpc.http.HTTPService} httpService
 * @param {string=} name
 */
mx.rpc.http.HTTPService.HTTPOperation = function(httpService, name) {
  name = typeof name !== 'undefined' ? name : null;
  mx.rpc.http.HTTPService.HTTPOperation.base(this, 'constructor', null, name);
  this.HTTPOperation_httpService = httpService;
};
goog.inherits(mx.rpc.http.HTTPService.HTTPOperation, mx.rpc.http.AbstractOperation);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.http.HTTPService.HTTPOperation', mx.rpc.http.HTTPService.HTTPOperation);


/**
 *  @asprivate
 * @export
 * @override
 */
mx.rpc.http.HTTPService.HTTPOperation.prototype.http_$$www_adobe_com$2006$flex$mx$internal__dispatchRpcEvent = function(event) {
  if (this.hasEventListener(event.type)) {
    event[new QName(mx.core.mx_internal, 'callTokenResponders').objectAccessFormat()]();
    if (!event.isDefaultPrevented())
      this.dispatchEvent(event);
  } else {
    if (this.HTTPOperation_httpService != null)
      this.HTTPOperation_httpService[new QName(mx.core.mx_internal, 'dispatchRpcEvent').objectAccessFormat()](event);
    else
      event[new QName(mx.core.mx_internal, 'callTokenResponders').objectAccessFormat()]();
  }
};


/**
 * @private
 * @type {mx.rpc.http.HTTPService}
 */
mx.rpc.http.HTTPService.HTTPOperation.prototype.HTTPOperation_httpService;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.http.HTTPService.HTTPOperation.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'HTTPOperation', qName: 'mx.rpc.http.HTTPService.HTTPOperation', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.http.HTTPService.HTTPOperation.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        'HTTPOperation': { type: '', declaredBy: 'mx.rpc.http.HTTPService.HTTPOperation', parameters: function () { return [ 'mx.rpc.http.HTTPService', false ,'String', true ]; }},
        'http://www.adobe.com/2006/flex/mx/internal::dispatchRpcEvent': { type: 'void', declaredBy: 'mx.rpc.http.HTTPService.HTTPOperation', parameters: function () { return [ 'mx.rpc.events.AbstractEvent', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.http.HTTPService.HTTPOperation.prototype.ROYALE_COMPILE_FLAGS = 26;
