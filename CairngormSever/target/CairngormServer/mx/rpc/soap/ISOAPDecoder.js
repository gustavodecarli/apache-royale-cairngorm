/**
 * Generated by Apache Royale Compiler from mx/rpc/soap/ISOAPDecoder.as
 * mx.rpc.soap.ISOAPDecoder
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.soap.ISOAPDecoder');
/* Royale Dependency List: mx.rpc.soap.SOAPResult,mx.rpc.wsdl.WSDLOperation,XML*/

goog.require('mx.rpc.xml.IXMLDecoder');



/**
 * @interface
 * @extends {mx.rpc.xml.IXMLDecoder}
 */
mx.rpc.soap.ISOAPDecoder = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.soap.ISOAPDecoder', mx.rpc.soap.ISOAPDecoder);
/**  * @type {boolean}
 */mx.rpc.soap.ISOAPDecoder.prototype.forcePartArrays;
/**  * @type {boolean}
 */mx.rpc.soap.ISOAPDecoder.prototype.ignoreWhitespace;
/**  * @type {string}
 */mx.rpc.soap.ISOAPDecoder.prototype.resultFormat;
/**  * @type {string}
 */mx.rpc.soap.ISOAPDecoder.prototype.headerFormat;
/**  * @type {string}
 */mx.rpc.soap.ISOAPDecoder.prototype.multiplePartsFormat;
/**  * @type {mx.rpc.wsdl.WSDLOperation}
 */mx.rpc.soap.ISOAPDecoder.prototype.wsdlOperation;
/**
 * Decodes a SOAP response into a result and headers.
 *
 *  @asparam response The SOAP response object.
 *
 *  @asreturn A SOAPResult object containing the response. 
 * @export
 * @param {*} response
 * @return {mx.rpc.soap.SOAPResult}
 */
mx.rpc.soap.ISOAPDecoder.prototype.decodeResponse = function(response) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.soap.ISOAPDecoder.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ISOAPDecoder', qName: 'mx.rpc.soap.ISOAPDecoder', kind: 'interface' }], interfaces: [mx.rpc.xml.IXMLDecoder] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.soap.ISOAPDecoder.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'forcePartArrays': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.rpc.soap.ISOAPDecoder'},
        'ignoreWhitespace': { type: 'Boolean', access: 'readwrite', declaredBy: 'mx.rpc.soap.ISOAPDecoder'},
        'resultFormat': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.soap.ISOAPDecoder'},
        'headerFormat': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.soap.ISOAPDecoder'},
        'multiplePartsFormat': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.soap.ISOAPDecoder'},
        'wsdlOperation': { type: 'mx.rpc.wsdl.WSDLOperation', access: 'readwrite', declaredBy: 'mx.rpc.soap.ISOAPDecoder'}
      };
    },
    methods: function () {
      return {
        'decodeResponse': { type: 'mx.rpc.soap.SOAPResult', declaredBy: 'mx.rpc.soap.ISOAPDecoder', parameters: function () { return [ '*', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.soap.ISOAPDecoder.prototype.ROYALE_COMPILE_FLAGS = 26;
