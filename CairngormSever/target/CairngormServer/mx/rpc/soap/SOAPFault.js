/**
 * Generated by Apache Royale Compiler from mx/rpc/soap/SOAPFault.as
 * mx.rpc.soap.SOAPFault
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.rpc.soap.SOAPFault');
/* Royale Dependency List: QName,XML*/

goog.require('mx.rpc.Fault');



/**
 * Constructs a new SOAPFault.
 *
 * @asparam faultCode The fully qualified name of the fault code.
 * 
 * @asparam faultString The description of the fault.
 *
 * @asparam detail Any extra details of the fault.
 *
 * @asparam element The raw XML of the SOAP fault.
 *
 * @asparam faultactor Information about who caused the SOAP fault.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @constructor
 * @extends {mx.rpc.Fault}
 * @param {QName} faultCode
 * @param {string} faultString
 * @param {string=} detail
 * @param {XML=} element
 * @param {string=} faultactor
 */
mx.rpc.soap.SOAPFault = function(faultCode, faultString, detail, element, faultactor) {
  detail = typeof detail !== 'undefined' ? detail : null;
  element = typeof element !== 'undefined' ? element : null;
  faultactor = typeof faultactor !== 'undefined' ? faultactor : null;
  mx.rpc.soap.SOAPFault.base(this, 'constructor', faultCode.localName, faultString, detail);
  this.element = element;
  this.faultactor = faultactor;
  this.faultcode = faultCode;
};
goog.inherits(mx.rpc.soap.SOAPFault, mx.rpc.Fault);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.rpc.soap.SOAPFault', mx.rpc.soap.SOAPFault);


/**
 * @export
 * @type {XML}
 */
mx.rpc.soap.SOAPFault.prototype.element;


/**
 * @export
 * @type {string}
 */
mx.rpc.soap.SOAPFault.prototype.faultactor;


/**
 * @export
 * @type {QName}
 */
mx.rpc.soap.SOAPFault.prototype.faultcode;


/**
 * Returns the String "SOAPFault" plus the faultCode, faultString, and
 * faultDetail.
 *
 * @asreturn Returns the String "SOAPFault" plus the faultCode, faultString, and
 * faultDetail.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Flex 3
 * @export
 * @override
 */
mx.rpc.soap.SOAPFault.prototype.toString = function() {
  return "SOAPFault (" + this.faultCode + "): " + this.faultString + " " + this.faultDetail;
};


mx.rpc.soap.SOAPFault.prototype.get__detail = function() {
  return this._faultDetail;
};


mx.rpc.soap.SOAPFault.prototype.set__detail = function(value) {
  this._faultDetail = value;
};


mx.rpc.soap.SOAPFault.prototype.get__faultstring = function() {
  return this._faultString;
};


mx.rpc.soap.SOAPFault.prototype.set__faultstring = function(value) {
  this._faultString = value;
};


Object.defineProperties(mx.rpc.soap.SOAPFault.prototype, /** @lends {mx.rpc.soap.SOAPFault.prototype} */ {
/**
  * @export
  * @type {string} */
detail: {
get: mx.rpc.soap.SOAPFault.prototype.get__detail,
set: mx.rpc.soap.SOAPFault.prototype.set__detail},
/**
  * @export
  * @type {string} */
faultstring: {
get: mx.rpc.soap.SOAPFault.prototype.get__faultstring,
set: mx.rpc.soap.SOAPFault.prototype.set__faultstring}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.rpc.soap.SOAPFault.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'SOAPFault', qName: 'mx.rpc.soap.SOAPFault', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.rpc.soap.SOAPFault.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'element': { type: 'XML', get_set: function (/** mx.rpc.soap.SOAPFault */ inst, /** * */ v) {return v !== undefined ? inst.element = v : inst.element;}},
        'faultactor': { type: 'String', get_set: function (/** mx.rpc.soap.SOAPFault */ inst, /** * */ v) {return v !== undefined ? inst.faultactor = v : inst.faultactor;}},
        'faultcode': { type: 'QName', get_set: function (/** mx.rpc.soap.SOAPFault */ inst, /** * */ v) {return v !== undefined ? inst.faultcode = v : inst.faultcode;}}
      };
    },
    accessors: function () {
      return {
        'detail': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.soap.SOAPFault'},
        'faultstring': { type: 'String', access: 'readwrite', declaredBy: 'mx.rpc.soap.SOAPFault'}
      };
    },
    methods: function () {
      return {
        'SOAPFault': { type: '', declaredBy: 'mx.rpc.soap.SOAPFault', parameters: function () { return [ 'QName', false ,'String', false ,'String', true ,'XML', true ,'String', true ]; }},
        'toString': { type: 'String', declaredBy: 'mx.rpc.soap.SOAPFault'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.rpc.soap.SOAPFault.prototype.ROYALE_COMPILE_FLAGS = 26;
