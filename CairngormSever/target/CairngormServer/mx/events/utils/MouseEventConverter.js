/**
 * Generated by Apache Royale Compiler from mx/events/utils/MouseEventConverter.as
 * mx.events.utils.MouseEventConverter
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.events.utils.MouseEventConverter');
/* Royale Dependency List: mx.core.Keyboard,mx.events.MouseEvent,XML*/




/**
 * @constructor
 */
mx.events.utils.MouseEventConverter = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.events.utils.MouseEventConverter', mx.events.utils.MouseEventConverter);


/**
 * @royaleignorecoercion goog.events.Event
 * We're lying to the compiler for now because it thinks it's supposed to accept a goog.events.Event.
 * We need to fix this in typedefs
 * @export
 * @param {Object} nativeEvent
 * @param {goog.events.BrowserEvent=} browserEvent
 * @return {mx.events.MouseEvent}
 */
mx.events.utils.MouseEventConverter.convert = function(nativeEvent, browserEvent) {
  browserEvent = typeof browserEvent !== 'undefined' ? browserEvent : null;
  if (nativeEvent.hasOwnProperty("getModifierState")) {
    mx.core.Keyboard.setCapsLock(!!(nativeEvent["getModifierState"]("CapsLock")));
  }
  var /** @type {mx.events.MouseEvent} */ event = new mx.events.MouseEvent(nativeEvent["type"], nativeEvent["bubbles"], nativeEvent["cancelable"]);
  if (!browserEvent) {
    browserEvent = new goog.events.BrowserEvent(nativeEvent, nativeEvent["currentTarget"]);
  }
  event.wrapEvent(browserEvent);
  return event;
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.events.utils.MouseEventConverter.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'MouseEventConverter', qName: 'mx.events.utils.MouseEventConverter', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.events.utils.MouseEventConverter.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|convert': { type: 'mx.events.MouseEvent', declaredBy: 'mx.events.utils.MouseEventConverter', parameters: function () { return [ 'Object', false ,'goog.events.BrowserEvent', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.events.utils.MouseEventConverter.prototype.ROYALE_COMPILE_FLAGS = 26;
