/**
 * Generated by Apache Royale Compiler from mx/styles/StyleManager.as
 * mx.styles.StyleManager
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('mx.styles.StyleManager');
/* Royale Dependency List: mx.core.IFlexModuleFactory,mx.managers.SystemManagerGlobals,mx.styles.IStyleManager2,mx.styles.StyleManagerImpl,XML*/




/**
 * @constructor
 */
mx.styles.StyleManager = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('mx.styles.StyleManager', mx.styles.StyleManager);


/**
 * @export
 * @const
 * @type {number}
 */
mx.styles.StyleManager.NOT_A_COLOR = 0xffffffff;


/**
 * @private
 * @type {mx.styles.StyleManagerImpl}
 */
mx.styles.StyleManager.implClassDependency;


/**
 * @private
 * @type {mx.styles.IStyleManager2}
 */
mx.styles.StyleManager._impl;


/**
 *  Returns the style manager for an object.
 *
 *  @asparam moduleFactory The module factory of an object you want the 
 *  style manager for. If null, the top-level style manager is returned.
 *
 *  @asreturn the style manager for the given module factory.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10
 *  @playerversion AIR 1.5
 *  @productversion Flex 4
 * @export
 * @param {mx.core.IFlexModuleFactory} moduleFactory
 * @return {mx.styles.IStyleManager2}
 */
mx.styles.StyleManager.getStyleManager = function(moduleFactory) {
  if (!moduleFactory) {
    moduleFactory = mx.managers.SystemManagerGlobals.topLevelSystemManagers[0];
  }
  if (!mx.styles.StyleManager["impl"])
    mx.styles.StyleManager._impl = new mx.styles.StyleManagerImpl(moduleFactory);
  return mx.styles.StyleManager._impl;
};


mx.styles.StyleManager.get__impl = function() {
  return mx.styles.StyleManager._impl;
};


Object.defineProperties(mx.styles.StyleManager, /** @lends {mx.styles.StyleManager} */ {
/**
  * @export
  * @type {mx.styles.IStyleManager2} */
impl: {
get: mx.styles.StyleManager.get__impl}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
mx.styles.StyleManager.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'StyleManager', qName: 'mx.styles.StyleManager', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
mx.styles.StyleManager.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    methods: function () {
      return {
        '|getStyleManager': { type: 'mx.styles.IStyleManager2', declaredBy: 'mx.styles.StyleManager', parameters: function () { return [ 'mx.core.IFlexModuleFactory', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
mx.styles.StyleManager.prototype.ROYALE_COMPILE_FLAGS = 26;
